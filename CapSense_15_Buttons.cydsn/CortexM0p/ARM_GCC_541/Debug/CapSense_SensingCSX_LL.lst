ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSXPostSingleScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSXPostSingleScan, %function
  24              	CapSense_SsCSXPostSingleScan:
  25              	.LFB8:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \file CapSense_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \see CapSense v5.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Structure.h"
  45:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #define  CapSense_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE != CapSense_CSDV2)
  69:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     volatile uint32 CapSense_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
 103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_INLINE static void CapSense_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static void CapSense_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void (*CapSense_CSXPostScanApiPtr)(void) = &CapSense_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   of the CapSense Component.
 126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   function is called by the CapSense_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   this function is called by the CapSense_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   in the CapSense_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   a sequence that the CapSense_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR,             CapSense_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if((0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_COMP_PTR,    CapSense_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR,           CapSense_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_BistDischargeExtCapacitors();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetSnsClockDivider((uint32)CapSense_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue &= ~(CapSense_IDAC_COMP_CFG_MASK | CapSense_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE 
 264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE )
 280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= CapSense_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_ENABLE)
 294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)CapSense_dsRam.snsCsxClk, (uint32)CapSense_dsRam.mo
 295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Enable CapSense ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsIsrInitialize(&CapSense_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the CapSense_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function checks if CapSense_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (0u != CapSense_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 8


 374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_CSXScan()
 387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  CapSense_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 9


 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, (CY_GET_REG32(CapSense_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_DISABLE)
 470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_dsRam.m
 471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  requires using the CapSense_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 10


 488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 11


 545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_S
 549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 12


 602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScan
 617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  preconfigured by the CapSense_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 13


 659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsNum = CapSense_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = (uint16)(CapSense_curFlashWdgtPtr->numRows - (snsIndex % CapSense
 675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = (uint16)(CapSense_curFlashWdgtPtr->numCols - (snsIndex / CapSens
 676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr += snsIndex /CapSense_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + snsIndex % CapSen
 697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr += (snsIndex / CapSense_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += CapSense_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 14


 716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += (snsIndex % CapSense_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 15


 773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols)];
 800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 16


 830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by the CapSense_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by using the CapSense_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  or CapSense_RunTuner() - (see the CapSense_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt(), the CapSense_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 17


 887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 18


 944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFla
 981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->
 982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
 985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 19


1001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx (CapSense_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 20


1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 21


1115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (CapSense_csxScanPeriod - CapSense_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 22


1172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
1200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 23


1229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx (CapSense_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 24


1286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 25


1343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif  /* (CapSense_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is used by CapSense ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  27              		.loc 1 1374 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    Calling CapSense_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] =
  32              		.loc 1 1385 0
  33 0000 094B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 094B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0949     		ldr	r1, .L2+8
  38 000a 0A88     		ldrh	r2, [r1]
  39 000c 4988     		ldrh	r1, [r1, #2]
  40 000e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 26


  41 0010 521A     		subs	r2, r2, r1
  42 0012 1A52     		strh	r2, [r3, r0]
1386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         (CapSense_csxScanPeriod - CapSense_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.scanCounter++;
  43              		.loc 1 1422 0
  44 0014 074B     		ldr	r3, .L2+12
  45 0016 1A89     		ldrh	r2, [r3, #8]
  46 0018 0132     		adds	r2, r2, #1
  47 001a 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
  48              		.loc 1 1423 0
  49 001c DA68     		ldr	r2, [r3, #12]
  50 001e 8021     		movs	r1, #128
  51 0020 8A43     		bics	r2, r1
  52 0022 DA60     		str	r2, [r3, #12]
1424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  53              		.loc 1 1429 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 27


  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 00000000 		.word	CapSense_curRamSnsPtr
  60 002c 00000000 		.word	CapSense_scanFreqIndex
  61 0030 00000000 		.word	.LANCHOR0
  62 0034 00000000 		.word	CapSense_dsRam
  63              		.cfi_endproc
  64              	.LFE8:
  65              		.size	CapSense_SsCSXPostSingleScan, .-CapSense_SsCSXPostSingleScan
  66              		.section	.text.CapSense_SsCalcCsxScanPeriod,"ax",%progbits
  67              		.align	2
  68              		.code	16
  69              		.thumb_func
  70              		.type	CapSense_SsCalcCsxScanPeriod, %function
  71              	CapSense_SsCalcCsxScanPeriod:
  72              	.LFB16:
1430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 28


1468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2Sns
1474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = CapSense_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (CapSense_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
1510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             while ((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId]
1517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     rawTarget = (CapSense_SsCSXOversample() * target) / CapSense_PERCENTAGE_100;
1524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 29


1525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] &= (uint8)(~curIdacMas
1533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] &= (uint8)(~curIda
1540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] &= (uint8)(~curIda
1545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_CSX_IDAC_AUTOCAL_EN == CapSense_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 30


1582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)CapSense_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_curRamSnsPtr->idacComp[CapSens
1621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 31


1639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 32


1696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 33


1753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
1799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** uint32 CapSense_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 34


1810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)CapSense_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  73              		.loc 1 1848 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
  79              		.loc 1 1852 0
  80 0000 4389     		ldrh	r3, [r0, #10]
  81              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 35


1858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_CSX_DEADBAND_CYCLES_NUMBER));
  82              		.loc 1 1858 0
  83 0002 0288     		ldrh	r2, [r0]
  84 0004 981E     		subs	r0, r3, #2
  85              	.LVL2:
  86 0006 5043     		muls	r0, r2
  87 0008 80B2     		uxth	r0, r0
  88              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  89              		.loc 1 1869 0
  90              		@ sp needed
  91 000a 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE16:
  94              		.size	CapSense_SsCalcCsxScanPeriod, .-CapSense_SsCalcCsxScanPeriod
  95              		.global	__aeabi_uidiv
  96              		.section	.text.CapSense_SsCSXStartSample,"ax",%progbits
  97              		.align	2
  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_SsCSXStartSample, %function
 101              	CapSense_SsCSXStartSample:
 102              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
 103              		.loc 1 1576 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
 111              		.loc 1 1579 0
 112 0002 344B     		ldr	r3, .L13
 113 0004 1A68     		ldr	r2, [r3]
 114 0006 344B     		ldr	r3, .L13+4
 115 0008 1B78     		ldrb	r3, [r3]
 116 000a D318     		adds	r3, r2, r3
 117 000c 5B7A     		ldrb	r3, [r3, #9]
 118              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
 119              		.loc 1 1580 0
 120 000e 334A     		ldr	r2, .L13+8
 121 0010 1343     		orrs	r3, r2
 122              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 36


 123              		.loc 1 1581 0
 124 0012 334A     		ldr	r2, .L13+12
 125 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 126              		.loc 1 1590 0
 127 0016 0022     		movs	r2, #0
 128 0018 324B     		ldr	r3, .L13+16
 129              	.LVL6:
 130 001a 5A80     		strh	r2, [r3, #2]
 131              	.LVL7:
 132              	.LBB4:
 133              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The CapSense_curFlashWdgtPtr and CapSense_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint32 CapSense_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
1897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
1903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_curRamSnsPtr->subConvNum * (temp - CapSense_CSX_DEADBAND_CYCL
1904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)CapSense_curRamSnsPtr->subConvNum * CapSense_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 37


1915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** CY_ISR(CapSense_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntDisable(CapSense_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
1956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount += (uint16)(CY_GET_REG32(CapSense_RESULT_VAL2_PTR) &\
1961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_csxRawCount > CapSense_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxRawCount = CapSense_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_RESULT_VAL1_PTR) >> CapSense_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 38


1972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_CSX_NOISE_METRIC_TH) && (CapSense_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_NOT_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntEnable(CapSense_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      4. Starts the normal conversion
2013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CY_INLINE void CapSense_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 filterDelay;
2018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 134              		.loc 1 2024 0
 135 001c 324A     		ldr	r2, .L13+20
 136 001e 334B     		ldr	r3, .L13+24
 137 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 39


2025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_PRECHARGE_CSD_HSCMP_CFG);
 138              		.loc 1 2025 0
 139 0022 0122     		movs	r2, #1
 140 0024 324B     		ldr	r3, .L13+28
 141 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 142              		.loc 1 2026 0
 143 0028 1123     		movs	r3, #17
 144 002a 324A     		ldr	r2, .L13+32
 145 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 146              		.loc 1 2027 0
 147 002e 8021     		movs	r1, #128
 148 0030 4904     		lsls	r1, r1, #17
 149 0032 314A     		ldr	r2, .L13+36
 150 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 151              		.loc 1 2028 0
 152 0036 314A     		ldr	r2, .L13+40
 153 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 154              		.loc 1 2029 0
 155 003a 0622     		movs	r2, #6
 156 003c 304B     		ldr	r3, .L13+44
 157 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 158              		.loc 1 2030 0
 159 0040 304A     		ldr	r2, .L13+48
 160 0042 314B     		ldr	r3, .L13+52
 161 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 162              		.loc 1 2031 0
 163 0046 314A     		ldr	r2, .L13+56
 164 0048 314B     		ldr	r3, .L13+60
 165 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
2038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_PRECHARGE_CSD_SEQ_START_CFG);
 166              		.loc 1 2039 0
 167 004c 314A     		ldr	r2, .L13+64
 168 004e 324B     		ldr	r3, .L13+68
 169 0050 1A60     		str	r2, [r3]
 170              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     watchdogCounter = CapSense_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 171              		.loc 1 2042 0
 172 0052 F023     		movs	r3, #240
 173 0054 5B00     		lsls	r3, r3, #1
 174 0056 00E0     		b	.L6
 175              	.LVL9:
 176              	.L8:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 40


2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
2044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         watchdogCounter--;
 177              		.loc 1 2045 0
 178 0058 013B     		subs	r3, r3, #1
 179              	.LVL10:
 180              	.L6:
2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
 181              		.loc 1 2043 0
 182 005a 2F4A     		ldr	r2, .L13+68
 183 005c 1268     		ldr	r2, [r2]
 184 005e D207     		lsls	r2, r2, #31
 185 0060 01D5     		bpl	.L7
 186 0062 002B     		cmp	r3, #0
 187 0064 F8D1     		bne	.L8
 188              	.L7:
2046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR)))
 189              		.loc 1 2049 0
 190 0066 2C4B     		ldr	r3, .L13+68
 191              	.LVL11:
 192 0068 1B68     		ldr	r3, [r3]
 193 006a DB07     		lsls	r3, r3, #31
 194 006c 03D5     		bpl	.L9
2050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,  CapSense_DEFAULT_CSD_SEQ_START_CFG);
 195              		.loc 1 2051 0
 196 006e C222     		movs	r2, #194
 197 0070 9200     		lsls	r2, r2, #2
 198 0072 294B     		ldr	r3, .L13+68
 199 0074 1A60     		str	r2, [r3]
 200              	.L9:
2052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsxClk;
 201              		.loc 1 2055 0
 202 0076 294B     		ldr	r3, .L13+72
 203 0078 597F     		ldrb	r1, [r3, #29]
 204 007a 2948     		ldr	r0, .L13+76
 205 007c FFF7FEFF 		bl	__aeabi_uidiv
 206              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 207              		.loc 1 2056 0
 208 0080 284B     		ldr	r3, .L13+80
 209 0082 9842     		cmp	r0, r3
 210 0084 04D9     		bls	.L11
2057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 211              		.loc 1 2060 0
 212 0086 264B     		ldr	r3, .L13+76
 213 0088 9842     		cmp	r0, r3
 214 008a 03D8     		bhi	.L12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 41


2061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_24MHZ;
 215              		.loc 1 2062 0
 216 008c 3023     		movs	r3, #48
 217 008e 02E0     		b	.L10
 218              	.L11:
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 219              		.loc 1 2058 0
 220 0090 2023     		movs	r3, #32
 221 0092 00E0     		b	.L10
 222              	.L12:
2063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_48MHZ;
 223              		.loc 1 2066 0
 224 0094 4023     		movs	r3, #64
 225              	.L10:
 226              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 227              		.loc 1 2073 0
 228 0096 244A     		ldr	r2, .L13+84
 229 0098 1343     		orrs	r3, r2
 230              	.LVL14:
 231 009a 144A     		ldr	r2, .L13+24
 232 009c 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_PRESCAN_CSD_CSDCMP_CFG);
 233              		.loc 1 2074 0
 234 009e 234A     		ldr	r2, .L13+88
 235 00a0 234B     		ldr	r3, .L13+92
 236 00a2 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_DEFAULT_CSD_HSCMP_CFG);
 237              		.loc 1 2075 0
 238 00a4 0023     		movs	r3, #0
 239 00a6 1249     		ldr	r1, .L13+28
 240 00a8 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 241              		.loc 1 2076 0
 242 00aa 1249     		ldr	r1, .L13+32
 243 00ac 0B60     		str	r3, [r1]
2077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 244              		.loc 1 2077 0
 245 00ae 1249     		ldr	r1, .L13+36
 246 00b0 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR, CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 247              		.loc 1 2078 0
 248 00b2 2320     		movs	r0, #35
 249              	.LVL15:
 250 00b4 1149     		ldr	r1, .L13+40
 251 00b6 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 42


 252              		.loc 1 2079 0
 253 00b8 1149     		ldr	r1, .L13+44
 254 00ba 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 255              		.loc 1 2080 0
 256 00bc 1249     		ldr	r1, .L13+52
 257 00be 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 258              		.loc 1 2081 0
 259 00c0 1349     		ldr	r1, .L13+60
 260 00c2 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
 261              		.loc 1 2084 0
 262 00c4 8321     		movs	r1, #131
 263 00c6 4900     		lsls	r1, r1, #1
 264 00c8 1A4B     		ldr	r3, .L13+96
 265 00ca 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
 266              		.loc 1 2087 0
 267 00cc 124B     		ldr	r3, .L13+68
 268 00ce 1A60     		str	r2, [r3]
 269              	.LBE5:
 270              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
 271              		.loc 1 1597 0
 272              		@ sp needed
 273 00d0 10BD     		pop	{r4, pc}
 274              	.L14:
 275 00d2 C046     		.align	2
 276              	.L13:
 277 00d4 00000000 		.word	CapSense_curRamSnsPtr
 278 00d8 00000000 		.word	CapSense_scanFreqIndex
 279 00dc 800E4301 		.word	21171840
 280 00e0 C0010B40 		.word	1074463168
 281 00e4 00000000 		.word	.LANCHOR0
 282 00e8 20100480 		.word	-2147217376
 283 00ec 00000B40 		.word	1074462720
 284 00f0 80010B40 		.word	1074463104
 285 00f4 80020B40 		.word	1074463360
 286 00f8 84020B40 		.word	1074463364
 287 00fc C0020B40 		.word	1074463424
 288 0100 88020B40 		.word	1074463368
 289 0104 01010100 		.word	65793
 290 0108 B0020B40 		.word	1074463408
 291 010c 10100000 		.word	4112
 292 0110 B4020B40 		.word	1074463412
 293 0114 03030000 		.word	771
 294 0118 40030B40 		.word	1074463552
 295 011c 00000000 		.word	CapSense_dsRam
 296 0120 00366E01 		.word	24000000
 297 0124 001BB700 		.word	12000000
 298 0128 00100C80 		.word	-2146693120
 299 012c 01030000 		.word	769
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 43


 300 0130 8C010B40 		.word	1074463116
 301 0134 F0000B40 		.word	1074462960
 302              		.cfi_endproc
 303              	.LFE10:
 304              		.size	CapSense_SsCSXStartSample, .-CapSense_SsCSXStartSample
 305              		.section	.text.CapSense_CSXScanISR,"ax",%progbits
 306              		.align	2
 307              		.global	CapSense_CSXScanISR
 308              		.code	16
 309              		.thumb_func
 310              		.type	CapSense_CSXScanISR, %function
 311              	CapSense_CSXScanISR:
 312              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
 313              		.loc 1 1945 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321              		.loc 1 1953 0
 322 0002 0A20     		movs	r0, #10
 323 0004 FFF7FEFF 		bl	CyIntDisable
 324              	.LVL16:
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 325              		.loc 1 1955 0
 326 0008 8322     		movs	r2, #131
 327 000a 5200     		lsls	r2, r2, #1
 328 000c 154B     		ldr	r3, .L18
 329 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
 330              		.loc 1 1957 0
 331 0010 154B     		ldr	r3, .L18+4
 332 0012 1B68     		ldr	r3, [r3]
 333 0014 9BB2     		uxth	r3, r3
 334 0016 154A     		ldr	r2, .L18+8
 335 0018 5380     		strh	r3, [r2, #2]
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
 336              		.loc 1 1960 0
 337 001a 154B     		ldr	r3, .L18+12
 338 001c 1B68     		ldr	r3, [r3]
 339 001e 9BB2     		uxth	r3, r3
 340 0020 5188     		ldrh	r1, [r2, #2]
 341 0022 CB18     		adds	r3, r1, r3
 342 0024 9BB2     		uxth	r3, r3
 343 0026 5380     		strh	r3, [r2, #2]
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 344              		.loc 1 1964 0
 345 0028 5188     		ldrh	r1, [r2, #2]
 346 002a 89B2     		uxth	r1, r1
 347 002c 1388     		ldrh	r3, [r2]
 348 002e 9BB2     		uxth	r3, r3
 349 0030 9942     		cmp	r1, r3
 350 0032 02D9     		bls	.L16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 44


1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 351              		.loc 1 1966 0
 352 0034 1388     		ldrh	r3, [r2]
 353 0036 9BB2     		uxth	r3, r3
 354 0038 5380     		strh	r3, [r2, #2]
 355              	.L16:
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
 356              		.loc 1 1983 0
 357 003a 0E4B     		ldr	r3, .L18+16
 358 003c 1B68     		ldr	r3, [r3]
 359 003e 9847     		blx	r3
 360              	.LVL17:
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 361              		.loc 1 1986 0
 362 0040 0D4B     		ldr	r3, .L18+20
 363 0042 DB68     		ldr	r3, [r3, #12]
 364 0044 1B06     		lsls	r3, r3, #24
 365 0046 09D4     		bmi	.L17
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
 366              		.loc 1 1988 0
 367 0048 0C4A     		ldr	r2, .L18+24
 368 004a 0D4B     		ldr	r3, .L18+28
 369 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
 370              		.loc 1 1989 0
 371 004e C022     		movs	r2, #192
 372 0050 9200     		lsls	r2, r2, #2
 373 0052 0C4B     		ldr	r3, .L18+32
 374 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 375              		.loc 1 1990 0
 376 0056 0C4A     		ldr	r2, .L18+36
 377 0058 0C4B     		ldr	r3, .L18+40
 378 005a 1A60     		str	r2, [r3]
 379              	.L17:
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 380              		.loc 1 1993 0
 381 005c 0A20     		movs	r0, #10
 382 005e FFF7FEFF 		bl	CyIntEnable
 383              	.LVL18:
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 384              		.loc 1 1994 0
 385              		@ sp needed
 386 0062 10BD     		pop	{r4, pc}
 387              	.L19:
 388              		.align	2
 389              	.L18:
 390 0064 F0000B40 		.word	1074462960
 391 0068 D0000B40 		.word	1074462928
 392 006c 00000000 		.word	.LANCHOR0
 393 0070 D4000B40 		.word	1074462932
 394 0074 00000000 		.word	.LANCHOR1
 395 0078 00000000 		.word	CapSense_dsRam
 396 007c 20100480 		.word	-2147217376
 397 0080 00000B40 		.word	1074462720
 398 0084 8C010B40 		.word	1074463116
 399 0088 800E4301 		.word	21171840
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 45


 400 008c C0010B40 		.word	1074463168
 401              		.cfi_endproc
 402              	.LFE17:
 403              		.size	CapSense_CSXScanISR, .-CapSense_CSXScanISR
 404              		.section	.text.CapSense_CSXInitialize,"ax",%progbits
 405              		.align	2
 406              		.global	CapSense_CSXInitialize
 407              		.code	16
 408              		.thumb_func
 409              		.type	CapSense_CSXInitialize, %function
 410              	CapSense_CSXInitialize:
 411              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 412              		.loc 1 149 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 420              		.loc 1 154 0
 421 0002 8322     		movs	r2, #131
 422 0004 5200     		lsls	r2, r2, #1
 423 0006 4A4B     		ldr	r3, .L21
 424 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 425              		.loc 1 155 0
 426 000a 0024     		movs	r4, #0
 427 000c 494B     		ldr	r3, .L21+4
 428 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 429              		.loc 1 156 0
 430 0010 053A     		subs	r2, r2, #5
 431 0012 FF3A     		subs	r2, r2, #255
 432 0014 484B     		ldr	r3, .L21+8
 433 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 434              		.loc 1 157 0
 435 0018 484B     		ldr	r3, .L21+12
 436 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 437              		.loc 1 158 0
 438 001c 484B     		ldr	r3, .L21+16
 439 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 440              		.loc 1 159 0
 441 0020 484A     		ldr	r2, .L21+20
 442 0022 494B     		ldr	r3, .L21+24
 443 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 444              		.loc 1 160 0
 445 0026 C022     		movs	r2, #192
 446 0028 9200     		lsls	r2, r2, #2
 447 002a 484B     		ldr	r3, .L21+28
 448 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 46


 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 449              		.loc 1 161 0
 450 002e 484A     		ldr	r2, .L21+32
 451 0030 484B     		ldr	r3, .L21+36
 452 0032 1A60     		str	r2, [r3]
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 453              		.loc 1 164 0
 454 0034 484B     		ldr	r3, .L21+40
 455 0036 1C60     		str	r4, [r3]
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 456              		.loc 1 167 0
 457 0038 484A     		ldr	r2, .L21+44
 458 003a 494B     		ldr	r3, .L21+48
 459 003c 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 460              		.loc 1 168 0
 461 003e 5022     		movs	r2, #80
 462 0040 484B     		ldr	r3, .L21+52
 463 0042 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 464              		.loc 1 169 0
 465 0044 484B     		ldr	r3, .L21+56
 466 0046 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 467              		.loc 1 170 0
 468 0048 484B     		ldr	r3, .L21+60
 469 004a 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 470              		.loc 1 171 0
 471 004c 484B     		ldr	r3, .L21+64
 472 004e 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 473              		.loc 1 172 0
 474 0050 484B     		ldr	r3, .L21+68
 475 0052 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 476              		.loc 1 173 0
 477 0054 484B     		ldr	r3, .L21+72
 478 0056 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 479              		.loc 1 175 0
 480 0058 FFF7FEFF 		bl	CyEnterCriticalSection
 481              	.LVL19:
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 482              		.loc 1 176 0
 483 005c 474A     		ldr	r2, .L21+76
 484 005e 1168     		ldr	r1, [r2]
 485              	.LVL20:
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 486              		.loc 1 177 0
 487 0060 474B     		ldr	r3, .L21+80
 488 0062 0B40     		ands	r3, r1
 489              	.LVL21:
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 490              		.loc 1 178 0
 491 0064 8021     		movs	r1, #128
 492 0066 4901     		lsls	r1, r1, #5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 47


 493 0068 0B43     		orrs	r3, r1
 494              	.LVL22:
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 495              		.loc 1 179 0
 496 006a 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 497              		.loc 1 180 0
 498 006c FFF7FEFF 		bl	CyExitCriticalSection
 499              	.LVL23:
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 500              		.loc 1 182 0
 501 0070 3222     		movs	r2, #50
 502 0072 444B     		ldr	r3, .L21+84
 503 0074 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 504              		.loc 1 183 0
 505 0076 8022     		movs	r2, #128
 506 0078 5204     		lsls	r2, r2, #17
 507 007a 434B     		ldr	r3, .L21+88
 508 007c 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 509              		.loc 1 185 0
 510 007e FFF7FEFF 		bl	CyEnterCriticalSection
 511              	.LVL24:
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 512              		.loc 1 186 0
 513 0082 424A     		ldr	r2, .L21+92
 514 0084 1168     		ldr	r1, [r2]
 515              	.LVL25:
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 516              		.loc 1 187 0
 517 0086 424B     		ldr	r3, .L21+96
 518 0088 0B40     		ands	r3, r1
 519              	.LVL26:
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 520              		.loc 1 188 0
 521 008a 8021     		movs	r1, #128
 522 008c 4905     		lsls	r1, r1, #21
 523 008e 0B43     		orrs	r3, r1
 524              	.LVL27:
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 525              		.loc 1 189 0
 526 0090 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 527              		.loc 1 190 0
 528 0092 FFF7FEFF 		bl	CyExitCriticalSection
 529              	.LVL28:
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 530              		.loc 1 192 0
 531 0096 3F4B     		ldr	r3, .L21+100
 532 0098 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 533              		.loc 1 193 0
 534 009a 3F4B     		ldr	r3, .L21+104
 535 009c 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 536              		.loc 1 194 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 48


 537 009e 2322     		movs	r2, #35
 538 00a0 3E4B     		ldr	r3, .L21+108
 539 00a2 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 540              		.loc 1 195 0
 541 00a4 143A     		subs	r2, r2, #20
 542 00a6 3E4B     		ldr	r3, .L21+112
 543 00a8 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 544              		.loc 1 196 0
 545 00aa 0B3A     		subs	r2, r2, #11
 546 00ac 3D4B     		ldr	r3, .L21+116
 547 00ae 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 548              		.loc 1 197 0
 549 00b0 3D4B     		ldr	r3, .L21+120
 550 00b2 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 551              		.loc 1 198 0
 552 00b4 3D4B     		ldr	r3, .L21+124
 553 00b6 1C60     		str	r4, [r3]
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 554              		.loc 1 199 0
 555 00b8 C222     		movs	r2, #194
 556 00ba 9200     		lsls	r2, r2, #2
 557 00bc 3C4B     		ldr	r3, .L21+128
 558 00be 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 559              		.loc 1 200 0
 560 00c0 3C4A     		ldr	r2, .L21+132
 561 00c2 3D4B     		ldr	r3, .L21+136
 562 00c4 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 563              		.loc 1 202 0
 564 00c6 FFF7FEFF 		bl	CapSense_BistDischargeExtCapacitors
 565              	.LVL29:
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 566              		.loc 1 204 0
 567 00ca FFF7FEFF 		bl	CyEnterCriticalSection
 568              	.LVL30:
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 569              		.loc 1 205 0
 570 00ce 3B4C     		ldr	r4, .L21+140
 571 00d0 2268     		ldr	r2, [r4]
 572              	.LVL31:
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 573              		.loc 1 206 0
 574 00d2 3B4B     		ldr	r3, .L21+144
 575 00d4 1340     		ands	r3, r2
 576              	.LVL32:
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 577              		.loc 1 207 0
 578 00d6 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579              		.loc 1 208 0
 580 00d8 FFF7FEFF 		bl	CyExitCriticalSection
 581              	.LVL33:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 49


 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 582              		.loc 1 210 0
 583 00dc FFF7FEFF 		bl	CyEnterCriticalSection
 584              	.LVL34:
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 585              		.loc 1 211 0
 586 00e0 2268     		ldr	r2, [r4]
 587              	.LVL35:
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 588              		.loc 1 212 0
 589 00e2 384B     		ldr	r3, .L21+148
 590 00e4 1340     		ands	r3, r2
 591              	.LVL36:
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 592              		.loc 1 213 0
 593 00e6 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 594              		.loc 1 214 0
 595 00e8 FFF7FEFF 		bl	CyExitCriticalSection
 596              	.LVL37:
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 597              		.loc 1 217 0
 598 00ec FFF7FEFF 		bl	CyEnterCriticalSection
 599              	.LVL38:
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 600              		.loc 1 218 0
 601 00f0 354C     		ldr	r4, .L21+152
 602 00f2 2268     		ldr	r2, [r4]
 603              	.LVL39:
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 604              		.loc 1 219 0
 605 00f4 354B     		ldr	r3, .L21+156
 606 00f6 1340     		ands	r3, r2
 607              	.LVL40:
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 608              		.loc 1 220 0
 609 00f8 C022     		movs	r2, #192
 610 00fa D200     		lsls	r2, r2, #3
 611 00fc 1343     		orrs	r3, r2
 612              	.LVL41:
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 613              		.loc 1 221 0
 614 00fe 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615              		.loc 1 222 0
 616 0100 FFF7FEFF 		bl	CyExitCriticalSection
 617              	.LVL42:
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 618              		.loc 1 225 0
 619 0104 FFF7FEFF 		bl	CyEnterCriticalSection
 620              	.LVL43:
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 621              		.loc 1 226 0
 622 0108 2268     		ldr	r2, [r4]
 623              	.LVL44:
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 624              		.loc 1 227 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 50


 625 010a 314B     		ldr	r3, .L21+160
 626 010c 1340     		ands	r3, r2
 627              	.LVL45:
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 628              		.loc 1 228 0
 629 010e C022     		movs	r2, #192
 630 0110 D201     		lsls	r2, r2, #7
 631 0112 1343     		orrs	r3, r2
 632              	.LVL46:
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 633              		.loc 1 229 0
 634 0114 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 635              		.loc 1 230 0
 636 0116 FFF7FEFF 		bl	CyExitCriticalSection
 637              	.LVL47:
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 638              		.loc 1 232 0
 639 011a 2E4B     		ldr	r3, .L21+164
 640 011c 587F     		ldrb	r0, [r3, #29]
 641 011e FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 642              	.LVL48:
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 643              		.loc 1 239 0
 644 0122 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 645              	.LVL49:
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 646              		.loc 1 298 0
 647 0126 2C48     		ldr	r0, .L21+168
 648 0128 FFF7FEFF 		bl	CapSense_SsIsrInitialize
 649              	.LVL50:
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 650              		.loc 1 299 0
 651              		@ sp needed
 652 012c 10BD     		pop	{r4, pc}
 653              	.L22:
 654 012e C046     		.align	2
 655              	.L21:
 656 0130 F0000B40 		.word	1074462960
 657 0134 F4000B40 		.word	1074462964
 658 0138 F8000B40 		.word	1074462968
 659 013c 80010B40 		.word	1074463104
 660 0140 84010B40 		.word	1074463108
 661 0144 411F0000 		.word	8001
 662 0148 88010B40 		.word	1074463112
 663 014c 8C010B40 		.word	1074463116
 664 0150 800E4301 		.word	21171840
 665 0154 C0010B40 		.word	1074463168
 666 0158 C4010B40 		.word	1074463172
 667 015c AA000500 		.word	327850
 668 0160 F0010B40 		.word	1074463216
 669 0164 00020B40 		.word	1074463232
 670 0168 04020B40 		.word	1074463236
 671 016c 80020B40 		.word	1074463360
 672 0170 84020B40 		.word	1074463364
 673 0174 88020B40 		.word	1074463368
 674 0178 90020B40 		.word	1074463376
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 51


 675 017c 94020B40 		.word	1074463380
 676 0180 FFEFFFFF 		.word	-4097
 677 0184 A0020B40 		.word	1074463392
 678 0188 A4020B40 		.word	1074463396
 679 018c A8020B40 		.word	1074463400
 680 0190 EEFFFEEE 		.word	-285278226
 681 0194 B0020B40 		.word	1074463408
 682 0198 B4020B40 		.word	1074463412
 683 019c C0020B40 		.word	1074463424
 684 01a0 00030B40 		.word	1074463488
 685 01a4 10030B40 		.word	1074463504
 686 01a8 14030B40 		.word	1074463508
 687 01ac 20030B40 		.word	1074463520
 688 01b0 40030B40 		.word	1074463552
 689 01b4 20100480 		.word	-2147217376
 690 01b8 00000B40 		.word	1074462720
 691 01bc 08040440 		.word	1074005000
 692 01c0 3FFEFFFF 		.word	-449
 693 01c4 FFF1FFFF 		.word	-3585
 694 01c8 00040240 		.word	1073873920
 695 01cc FFF0FFFF 		.word	-3841
 696 01d0 FF0FFFFF 		.word	-61441
 697 01d4 00000000 		.word	CapSense_dsRam
 698 01d8 00000000 		.word	CapSense_CSXScanISR
 699              		.cfi_endproc
 700              	.LFE1:
 701              		.size	CapSense_CSXInitialize, .-CapSense_CSXInitialize
 702              		.section	.text.CapSense_CSXScanExt,"ax",%progbits
 703              		.align	2
 704              		.global	CapSense_CSXScanExt
 705              		.code	16
 706              		.thumb_func
 707              		.type	CapSense_CSXScanExt, %function
 708              	CapSense_CSXScanExt:
 709              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 710              		.loc 1 871 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714 0000 10B5     		push	{r4, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 4, -8
 717              		.cfi_offset 14, -4
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 718              		.loc 1 892 0
 719 0002 054A     		ldr	r2, .L24
 720 0004 D168     		ldr	r1, [r2, #12]
 721 0006 8023     		movs	r3, #128
 722 0008 0B43     		orrs	r3, r1
 723 000a D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 724              		.loc 1 897 0
 725 000c 0A20     		movs	r0, #10
 726 000e FFF7FEFF 		bl	CyDelayUs
 727              	.LVL51:
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 52


 728              		.loc 1 899 0
 729 0012 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 730              	.LVL52:
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 731              		.loc 1 901 0
 732              		@ sp needed
 733 0016 10BD     		pop	{r4, pc}
 734              	.L25:
 735              		.align	2
 736              	.L24:
 737 0018 00000000 		.word	CapSense_dsRam
 738              		.cfi_endproc
 739              	.LFE6:
 740              		.size	CapSense_CSXScanExt, .-CapSense_CSXScanExt
 741              		.section	.text.CapSense_CSXCalibrateWidget,"ax",%progbits
 742              		.align	2
 743              		.global	CapSense_CSXCalibrateWidget
 744              		.code	16
 745              		.thumb_func
 746              		.type	CapSense_CSXCalibrateWidget, %function
 747              	CapSense_CSXCalibrateWidget:
 748              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 749              		.loc 1 1459 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL53:
 754 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 755              		.cfi_def_cfa_offset 20
 756              		.cfi_offset 4, -20
 757              		.cfi_offset 5, -16
 758              		.cfi_offset 6, -12
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 4F46     		mov	r7, r9
 762 0004 80B4     		push	{r7}
 763              		.cfi_def_cfa_offset 24
 764              		.cfi_offset 9, -24
 765 0006 82B0     		sub	sp, sp, #8
 766              		.cfi_def_cfa_offset 32
 767 0008 0190     		str	r0, [sp, #4]
 768 000a 0E00     		movs	r6, r1
 769              	.LVL54:
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 770              		.loc 1 1473 0
 771 000c C300     		lsls	r3, r0, #3
 772 000e 8446     		mov	ip, r0
 773 0010 6344     		add	r3, r3, ip
 774 0012 9A00     		lsls	r2, r3, #2
 775 0014 2B4C     		ldr	r4, .L36
 776 0016 A418     		adds	r4, r4, r2
 777 0018 A368     		ldr	r3, [r4, #8]
 778 001a 9946     		mov	r9, r3
 779 001c 2A4B     		ldr	r3, .L36+4
 780 001e 4A46     		mov	r2, r9
 781 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 53


1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 782              		.loc 1 1477 0
 783 0022 6068     		ldr	r0, [r4, #4]
 784              	.LVL55:
 785 0024 FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 786              	.LVL56:
 787 0028 284B     		ldr	r3, .L36+8
 788 002a 1880     		strh	r0, [r3]
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
 789              		.loc 1 1479 0
 790 002c 1888     		ldrh	r0, [r3]
 791              	.LVL57:
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 792              		.loc 1 1480 0
 793 002e 7043     		muls	r0, r6
 794              	.LVL58:
 795 0030 6421     		movs	r1, #100
 796 0032 FFF7FEFF 		bl	__aeabi_uidiv
 797              	.LVL59:
 798 0036 0700     		movs	r7, r0
 799              	.LVL60:
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 800              		.loc 1 1484 0
 801 0038 E37E     		ldrb	r3, [r4, #27]
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 802              		.loc 1 1483 0
 803 003a 022B     		cmp	r3, #2
 804 003c 3ED1     		bne	.L26
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 805              		.loc 1 1487 0
 806 003e 019B     		ldr	r3, [sp, #4]
 807 0040 DA00     		lsls	r2, r3, #3
 808 0042 9C46     		mov	ip, r3
 809 0044 6244     		add	r2, r2, ip
 810 0046 9300     		lsls	r3, r2, #2
 811 0048 1E4A     		ldr	r2, .L36
 812 004a D318     		adds	r3, r2, r3
 813 004c 1A7F     		ldrb	r2, [r3, #28]
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 814              		.loc 1 1488 0
 815 004e 5E7F     		ldrb	r6, [r3, #29]
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 816              		.loc 1 1487 0
 817 0050 5643     		muls	r6, r2
 818              	.LVL61:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 819              		.loc 1 1491 0
 820 0052 0021     		movs	r1, #0
 821 0054 09E0     		b	.L28
 822              	.LVL62:
 823              	.L29:
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
 824              		.loc 1 1493 0 discriminator 3
 825 0056 1C4A     		ldr	r2, .L36+4
 826 0058 0023     		movs	r3, #0
 827 005a 1068     		ldr	r0, [r2]
 828 005c 0380     		strh	r3, [r0]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 54


1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 829              		.loc 1 1494 0 discriminator 3
 830 005e 1368     		ldr	r3, [r2]
 831 0060 4020     		movs	r0, #64
 832 0062 5872     		strb	r0, [r3, #9]
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 833              		.loc 1 1501 0 discriminator 3
 834 0064 0A33     		adds	r3, r3, #10
 835 0066 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 836              		.loc 1 1491 0 discriminator 3
 837 0068 0131     		adds	r1, r1, #1
 838              	.LVL63:
 839              	.L28:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 840              		.loc 1 1491 0 is_stmt 0 discriminator 1
 841 006a B142     		cmp	r1, r6
 842 006c F3D3     		bcc	.L29
 843 006e 2024     		movs	r4, #32
 844 0070 4025     		movs	r5, #64
 845 0072 00E0     		b	.L34
 846              	.LVL64:
 847              	.L35:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 848              		.loc 1 1555 0 is_stmt 1
 849 0074 1C00     		movs	r4, r3
 850              	.LVL65:
 851              	.L34:
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
 852              		.loc 1 1508 0
 853 0076 0198     		ldr	r0, [sp, #4]
 854 0078 FFF7FEFF 		bl	CapSense_SetupWidget
 855              	.LVL66:
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 856              		.loc 1 1509 0
 857 007c FFF7FEFF 		bl	CapSense_Scan
 858              	.LVL67:
 859              	.L30:
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 860              		.loc 1 1511 0 discriminator 1
 861 0080 134B     		ldr	r3, .L36+12
 862 0082 DB68     		ldr	r3, [r3, #12]
 863 0084 1B06     		lsls	r3, r3, #24
 864 0086 FBD4     		bmi	.L30
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 865              		.loc 1 1516 0
 866 0088 0F4B     		ldr	r3, .L36+4
 867 008a 4A46     		mov	r2, r9
 868 008c 1A60     		str	r2, [r3]
 869              	.LVL68:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 870              		.loc 1 1519 0
 871 008e 0021     		movs	r1, #0
 872 0090 0EE0     		b	.L31
 873              	.LVL69:
 874              	.L33:
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 55


 875              		.loc 1 1530 0
 876 0092 0D4B     		ldr	r3, .L36+4
 877 0094 1B68     		ldr	r3, [r3]
 878 0096 1A88     		ldrh	r2, [r3]
 879 0098 9742     		cmp	r7, r2
 880 009a 02D2     		bcs	.L32
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 881              		.loc 1 1532 0
 882 009c 5A7A     		ldrb	r2, [r3, #9]
 883 009e AA43     		bics	r2, r5
 884 00a0 5A72     		strb	r2, [r3, #9]
 885              	.L32:
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 886              		.loc 1 1534 0 discriminator 2
 887 00a2 5A7A     		ldrb	r2, [r3, #9]
 888 00a4 2243     		orrs	r2, r4
 889 00a6 5A72     		strb	r2, [r3, #9]
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 890              		.loc 1 1550 0 discriminator 2
 891 00a8 0A33     		adds	r3, r3, #10
 892 00aa 074A     		ldr	r2, .L36+4
 893 00ac 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 894              		.loc 1 1519 0 discriminator 2
 895 00ae 0131     		adds	r1, r1, #1
 896              	.LVL70:
 897              	.L31:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 898              		.loc 1 1519 0 is_stmt 0 discriminator 1
 899 00b0 B142     		cmp	r1, r6
 900 00b2 EED3     		bcc	.L33
 901              	.LVL71:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 902              		.loc 1 1555 0 is_stmt 1
 903 00b4 6308     		lsrs	r3, r4, #1
 904 00b6 DBB2     		uxtb	r3, r3
 905              	.LVL72:
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 906              		.loc 1 1554 0
 907 00b8 251E     		subs	r5, r4, #0
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 908              		.loc 1 1557 0
 909 00ba DBD1     		bne	.L35
 910              	.LVL73:
 911              	.L26:
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 912              		.loc 1 1559 0
 913 00bc 02B0     		add	sp, sp, #8
 914              		@ sp needed
 915              	.LVL74:
 916 00be 04BC     		pop	{r2}
 917 00c0 9146     		mov	r9, r2
 918 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 919              	.L37:
 920              		.align	2
 921              	.L36:
 922 00c4 00000000 		.word	CapSense_dsFlash
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 56


 923 00c8 00000000 		.word	CapSense_curRamSnsPtr
 924 00cc 00000000 		.word	.LANCHOR0
 925 00d0 00000000 		.word	CapSense_dsRam
 926              		.cfi_endproc
 927              	.LFE9:
 928              		.size	CapSense_CSXCalibrateWidget, .-CapSense_CSXCalibrateWidget
 929              		.section	.text.CapSense_CSXConnectTx,"ax",%progbits
 930              		.align	2
 931              		.global	CapSense_CSXConnectTx
 932              		.code	16
 933              		.thumb_func
 934              		.type	CapSense_CSXConnectTx, %function
 935              	CapSense_CSXConnectTx:
 936              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 937              		.loc 1 1666 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL75:
 942 0000 10B5     		push	{r4, lr}
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 4, -8
 945              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
 946              		.loc 1 1669 0
 947 0002 4268     		ldr	r2, [r0, #4]
 948 0004 1168     		ldr	r1, [r2]
 949              	.LVL76:
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
 950              		.loc 1 1670 0
 951 0006 847E     		ldrb	r4, [r0, #26]
 952 0008 0623     		movs	r3, #6
 953 000a A340     		lsls	r3, r3, r4
 954 000c 0B43     		orrs	r3, r1
 955              	.LVL77:
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 956              		.loc 1 1671 0
 957 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 958              		.loc 1 1673 0
 959 0010 0268     		ldr	r2, [r0]
 960 0012 1168     		ldr	r1, [r2]
 961              	.LVL78:
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 962              		.loc 1 1674 0
 963 0014 007E     		ldrb	r0, [r0, #24]
 964              	.LVL79:
 965 0016 0423     		movs	r3, #4
 966 0018 8340     		lsls	r3, r3, r0
 967 001a 0B43     		orrs	r3, r1
 968              	.LVL80:
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 969              		.loc 1 1675 0
 970 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 971              		.loc 1 1676 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 57


 972              		@ sp needed
 973 001e 10BD     		pop	{r4, pc}
 974              		.cfi_endproc
 975              	.LFE11:
 976              		.size	CapSense_CSXConnectTx, .-CapSense_CSXConnectTx
 977              		.section	.text.CapSense_CSXConnectRx,"ax",%progbits
 978              		.align	2
 979              		.global	CapSense_CSXConnectRx
 980              		.code	16
 981              		.thumb_func
 982              		.type	CapSense_CSXConnectRx, %function
 983              	CapSense_CSXConnectRx:
 984              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 985              		.loc 1 1700 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL81:
 990 0000 10B5     		push	{r4, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 994              		.loc 1 1703 0
 995 0002 4168     		ldr	r1, [r0, #4]
 996 0004 0B68     		ldr	r3, [r1]
 997              	.LVL82:
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 998              		.loc 1 1704 0
 999 0006 847E     		ldrb	r4, [r0, #26]
 1000 0008 0722     		movs	r2, #7
 1001 000a A240     		lsls	r2, r2, r4
 1002 000c 9343     		bics	r3, r2
 1003              	.LVL83:
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1004              		.loc 1 1705 0
 1005 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1006              		.loc 1 1707 0
 1007 0010 0268     		ldr	r2, [r0]
 1008 0012 1168     		ldr	r1, [r2]
 1009              	.LVL84:
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1010              		.loc 1 1708 0
 1011 0014 007E     		ldrb	r0, [r0, #24]
 1012              	.LVL85:
 1013 0016 0623     		movs	r3, #6
 1014 0018 8340     		lsls	r3, r3, r0
 1015 001a 0B43     		orrs	r3, r1
 1016              	.LVL86:
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1017              		.loc 1 1709 0
 1018 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1019              		.loc 1 1710 0
 1020              		@ sp needed
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 58


 1021 001e 10BD     		pop	{r4, pc}
 1022              		.cfi_endproc
 1023              	.LFE12:
 1024              		.size	CapSense_CSXConnectRx, .-CapSense_CSXConnectRx
 1025              		.section	.text.CapSense_CSXScan,"ax",%progbits
 1026              		.align	2
 1027              		.global	CapSense_CSXScan
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	CapSense_CSXScan, %function
 1031              	CapSense_CSXScan:
 1032              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1033              		.loc 1 646 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 10B5     		push	{r4, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 4, -8
 1040              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1041              		.loc 1 655 0
 1042 0002 0022     		movs	r2, #0
 1043 0004 124B     		ldr	r3, .L41
 1044 0006 1A70     		strb	r2, [r3]
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1045              		.loc 1 658 0
 1046 0008 124B     		ldr	r3, .L41+4
 1047 000a 1B68     		ldr	r3, [r3]
 1048 000c 124A     		ldr	r2, .L41+8
 1049 000e 9968     		ldr	r1, [r3, #8]
 1050 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 1051              		.loc 1 746 0
 1052 0012 5A7F     		ldrb	r2, [r3, #29]
 1053 0014 114C     		ldr	r4, .L41+12
 1054 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1055              		.loc 1 747 0
 1056 0018 1A7F     		ldrb	r2, [r3, #28]
 1057 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 1058              		.loc 1 797 0
 1059 001c 1968     		ldr	r1, [r3]
 1060 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1061              		.loc 1 799 0
 1062 0020 D300     		lsls	r3, r2, #3
 1063 0022 981A     		subs	r0, r3, r2
 1064 0024 8000     		lsls	r0, r0, #2
 1065 0026 0818     		adds	r0, r1, r0
 1066 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1067              		.loc 1 802 0
 1068 002a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1069              	.LVL87:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 59


 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1070              		.loc 1 803 0
 1071 002e A068     		ldr	r0, [r4, #8]
 1072 0030 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1073              	.LVL88:
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 1074              		.loc 1 806 0
 1075 0034 0A4A     		ldr	r2, .L41+16
 1076 0036 0B4B     		ldr	r3, .L41+20
 1077 0038 1A60     		str	r2, [r3]
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1078              		.loc 1 815 0
 1079 003a 0B4A     		ldr	r2, .L41+24
 1080 003c D168     		ldr	r1, [r2, #12]
 1081 003e 8023     		movs	r3, #128
 1082 0040 0B43     		orrs	r3, r1
 1083 0042 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1084              		.loc 1 820 0
 1085 0044 0A20     		movs	r0, #10
 1086 0046 FFF7FEFF 		bl	CyDelayUs
 1087              	.LVL89:
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1088              		.loc 1 822 0
 1089 004a FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1090              	.LVL90:
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1091              		.loc 1 825 0
 1092              		@ sp needed
 1093 004e 10BD     		pop	{r4, pc}
 1094              	.L42:
 1095              		.align	2
 1096              	.L41:
 1097 0050 00000000 		.word	CapSense_sensorIndex
 1098 0054 00000000 		.word	CapSense_curFlashWdgtPtr
 1099 0058 00000000 		.word	CapSense_curRamSnsPtr
 1100 005c 00000000 		.word	.LANCHOR0
 1101 0060 00000000 		.word	CapSense_SsCSXPostMultiScan
 1102 0064 00000000 		.word	.LANCHOR1
 1103 0068 00000000 		.word	CapSense_dsRam
 1104              		.cfi_endproc
 1105              	.LFE5:
 1106              		.size	CapSense_CSXScan, .-CapSense_CSXScan
 1107              		.section	.text.CapSense_CSXDisconnectTx,"ax",%progbits
 1108              		.align	2
 1109              		.global	CapSense_CSXDisconnectTx
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	CapSense_CSXDisconnectTx, %function
 1113              	CapSense_CSXDisconnectTx:
 1114              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1115              		.loc 1 1735 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 60


 1120              	.LVL91:
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1121              		.loc 1 1738 0
 1122 0000 0268     		ldr	r2, [r0]
 1123 0002 1368     		ldr	r3, [r2]
 1124              	.LVL92:
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1125              		.loc 1 1739 0
 1126 0004 0169     		ldr	r1, [r0, #16]
 1127 0006 8B43     		bics	r3, r1
 1128              	.LVL93:
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1129              		.loc 1 1740 0
 1130 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1131              		.loc 1 1741 0
 1132              		@ sp needed
 1133 000a 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE13:
 1136              		.size	CapSense_CSXDisconnectTx, .-CapSense_CSXDisconnectTx
 1137              		.section	.text.CapSense_CSXDisconnectRx,"ax",%progbits
 1138              		.align	2
 1139              		.global	CapSense_CSXDisconnectRx
 1140              		.code	16
 1141              		.thumb_func
 1142              		.type	CapSense_CSXDisconnectRx, %function
 1143              	CapSense_CSXDisconnectRx:
 1144              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1145              		.loc 1 1766 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149              	.LVL94:
 1150 0000 10B5     		push	{r4, lr}
 1151              		.cfi_def_cfa_offset 8
 1152              		.cfi_offset 4, -8
 1153              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1154              		.loc 1 1769 0
 1155 0002 0268     		ldr	r2, [r0]
 1156 0004 1368     		ldr	r3, [r2]
 1157              	.LVL95:
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1158              		.loc 1 1770 0
 1159 0006 0169     		ldr	r1, [r0, #16]
 1160 0008 8B43     		bics	r3, r1
 1161              	.LVL96:
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1162              		.loc 1 1771 0
 1163 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 1164              		.loc 1 1773 0
 1165 000c 4168     		ldr	r1, [r0, #4]
 1166 000e 0B68     		ldr	r3, [r1]
 1167              	.LVL97:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 61


1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
 1168              		.loc 1 1774 0
 1169 0010 847E     		ldrb	r4, [r0, #26]
 1170 0012 0722     		movs	r2, #7
 1171 0014 A240     		lsls	r2, r2, r4
 1172 0016 9343     		bics	r3, r2
 1173              	.LVL98:
 1174 0018 1A00     		movs	r2, r3
 1175              	.LVL99:
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1176              		.loc 1 1775 0
 1177 001a 0623     		movs	r3, #6
 1178 001c A340     		lsls	r3, r3, r4
 1179 001e 1343     		orrs	r3, r2
 1180              	.LVL100:
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1181              		.loc 1 1776 0
 1182 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1183              		.loc 1 1778 0
 1184 0022 8268     		ldr	r2, [r0, #8]
 1185 0024 1368     		ldr	r3, [r2]
 1186              	.LVL101:
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1187              		.loc 1 1779 0
 1188 0026 4169     		ldr	r1, [r0, #20]
 1189 0028 8B43     		bics	r3, r1
 1190              	.LVL102:
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1191              		.loc 1 1780 0
 1192 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1193              		.loc 1 1781 0
 1194              		@ sp needed
 1195 002c 10BD     		pop	{r4, pc}
 1196              		.cfi_endproc
 1197              	.LFE14:
 1198              		.size	CapSense_CSXDisconnectRx, .-CapSense_CSXDisconnectRx
 1199 002e C046     		.section	.text.CapSense_SsCSXPostMultiScan,"ax",%progbits
 1200              		.align	2
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CapSense_SsCSXPostMultiScan, %function
 1204              	CapSense_SsCSXPostMultiScan:
 1205              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 1206              		.loc 1 916 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210 0000 10B5     		push	{r4, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 4, -8
 1213              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 1214              		.loc 1 922 0
 1215 0002 2F4B     		ldr	r3, .L50
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 62


 1216 0004 1968     		ldr	r1, [r3]
 1217 0006 2F4B     		ldr	r3, .L50+4
 1218 0008 1B78     		ldrb	r3, [r3]
 1219 000a 2F4C     		ldr	r4, .L50+8
 1220 000c 2288     		ldrh	r2, [r4]
 1221 000e 6088     		ldrh	r0, [r4, #2]
 1222 0010 5B00     		lsls	r3, r3, #1
 1223 0012 121A     		subs	r2, r2, r0
 1224 0014 5A52     		strh	r2, [r3, r1]
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1225              		.loc 1 1014 0
 1226 0016 E068     		ldr	r0, [r4, #12]
 1227 0018 FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1228              	.LVL103:
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1229              		.loc 1 1017 0
 1230 001c 2B4A     		ldr	r2, .L50+12
 1231 001e 1378     		ldrb	r3, [r2]
 1232 0020 0133     		adds	r3, r3, #1
 1233 0022 DBB2     		uxtb	r3, r3
 1234 0024 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
 1235              		.loc 1 1023 0
 1236 0026 A388     		ldrh	r3, [r4, #4]
 1237 0028 013B     		subs	r3, r3, #1
 1238 002a 9BB2     		uxth	r3, r3
 1239 002c A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 1240              		.loc 1 1024 0
 1241 002e 002B     		cmp	r3, #0
 1242 0030 0CD0     		beq	.L46
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
 1243              		.loc 1 1031 0
 1244 0032 254B     		ldr	r3, .L50+8
 1245 0034 D868     		ldr	r0, [r3, #12]
 1246 0036 1C30     		adds	r0, r0, #28
 1247 0038 D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 1248              		.loc 1 1032 0
 1249 003a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1250              	.LVL104:
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1251              		.loc 1 1033 0
 1252 003e 204A     		ldr	r2, .L50
 1253 0040 1368     		ldr	r3, [r2]
 1254 0042 0A33     		adds	r3, r3, #10
 1255 0044 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 1256              		.loc 1 1036 0
 1257 0046 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1258              	.LVL105:
 1259 004a 37E0     		b	.L45
 1260              	.L46:
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
 1261              		.loc 1 1042 0
 1262 004c 1E4A     		ldr	r2, .L50+8
 1263 004e D388     		ldrh	r3, [r2, #6]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 63


 1264 0050 013B     		subs	r3, r3, #1
 1265 0052 9BB2     		uxth	r3, r3
 1266 0054 D380     		strh	r3, [r2, #6]
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 1267              		.loc 1 1043 0
 1268 0056 002B     		cmp	r3, #0
 1269 0058 1DD0     		beq	.L48
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
 1270              		.loc 1 1052 0
 1271 005a 1400     		movs	r4, r2
 1272 005c 9068     		ldr	r0, [r2, #8]
 1273 005e FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1274              	.LVL106:
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1275              		.loc 1 1053 0
 1276 0062 A068     		ldr	r0, [r4, #8]
 1277 0064 1C30     		adds	r0, r0, #28
 1278 0066 A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 1279              		.loc 1 1054 0
 1280 0068 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1281              	.LVL107:
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
 1282              		.loc 1 1055 0
 1283 006c 184B     		ldr	r3, .L50+16
 1284 006e 1B68     		ldr	r3, [r3]
 1285 0070 5A7F     		ldrb	r2, [r3, #29]
 1286 0072 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
 1287              		.loc 1 1056 0
 1288 0074 1868     		ldr	r0, [r3]
 1289 0076 E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 1290              		.loc 1 1057 0
 1291 0078 1A7F     		ldrb	r2, [r3, #28]
 1292 007a D300     		lsls	r3, r2, #3
 1293 007c 9A1A     		subs	r2, r3, r2
 1294 007e 9300     		lsls	r3, r2, #2
 1295 0080 C018     		adds	r0, r0, r3
 1296 0082 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1297              		.loc 1 1058 0
 1298 0084 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1299              	.LVL108:
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1300              		.loc 1 1061 0
 1301 0088 0D4A     		ldr	r2, .L50
 1302 008a 1368     		ldr	r3, [r2]
 1303 008c 0A33     		adds	r3, r3, #10
 1304 008e 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 1305              		.loc 1 1064 0
 1306 0090 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1307              	.LVL109:
 1308 0094 12E0     		b	.L45
 1309              	.L48:
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 64


 1310              		.loc 1 1069 0
 1311 0096 0C4B     		ldr	r3, .L50+8
 1312 0098 9868     		ldr	r0, [r3, #8]
 1313 009a FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1314              	.LVL110:
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 1315              		.loc 1 1072 0
 1316 009e 0D4B     		ldr	r3, .L50+20
 1317 00a0 1B78     		ldrb	r3, [r3]
 1318 00a2 002B     		cmp	r3, #0
 1319 00a4 02D0     		beq	.L49
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1320              		.loc 1 1074 0
 1321 00a6 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 1322              	.LVL111:
 1323 00aa 07E0     		b	.L45
 1324              	.L49:
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 1325              		.loc 1 1083 0
 1326 00ac 0A4B     		ldr	r3, .L50+24
 1327 00ae 1A89     		ldrh	r2, [r3, #8]
 1328 00b0 0132     		adds	r2, r2, #1
 1329 00b2 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1330              		.loc 1 1084 0
 1331 00b4 DA68     		ldr	r2, [r3, #12]
 1332 00b6 8021     		movs	r1, #128
 1333 00b8 8A43     		bics	r2, r1
 1334 00ba DA60     		str	r2, [r3, #12]
 1335              	.L45:
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1336              		.loc 1 1094 0
 1337              		@ sp needed
 1338 00bc 10BD     		pop	{r4, pc}
 1339              	.L51:
 1340 00be C046     		.align	2
 1341              	.L50:
 1342 00c0 00000000 		.word	CapSense_curRamSnsPtr
 1343 00c4 00000000 		.word	CapSense_scanFreqIndex
 1344 00c8 00000000 		.word	.LANCHOR0
 1345 00cc 00000000 		.word	CapSense_sensorIndex
 1346 00d0 00000000 		.word	CapSense_curFlashWdgtPtr
 1347 00d4 00000000 		.word	CapSense_requestScanAllWidget
 1348 00d8 00000000 		.word	CapSense_dsRam
 1349              		.cfi_endproc
 1350              	.LFE7:
 1351              		.size	CapSense_SsCSXPostMultiScan, .-CapSense_SsCSXPostMultiScan
 1352              		.section	.text.CapSense_CSXElectrodeCheck,"ax",%progbits
 1353              		.align	2
 1354              		.global	CapSense_CSXElectrodeCheck
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	CapSense_CSXElectrodeCheck, %function
 1358              	CapSense_CSXElectrodeCheck:
 1359              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1360              		.loc 1 316 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 65


 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364 0000 10B5     		push	{r4, lr}
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 4, -8
 1367              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 1368              		.loc 1 321 0
 1369 0002 074B     		ldr	r3, .L54
 1370 0004 1B8A     		ldrh	r3, [r3, #16]
 1371 0006 002B     		cmp	r3, #0
 1372 0008 08D0     		beq	.L52
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 1373              		.loc 1 360 0
 1374 000a 054C     		ldr	r4, .L54
 1375 000c E068     		ldr	r0, [r4, #12]
 1376 000e FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1377              	.LVL112:
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1378              		.loc 1 361 0
 1379 0012 A068     		ldr	r0, [r4, #8]
 1380 0014 FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1381              	.LVL113:
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 1382              		.loc 1 363 0
 1383 0018 0023     		movs	r3, #0
 1384 001a 2382     		strh	r3, [r4, #16]
 1385              	.L52:
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1386              		.loc 1 365 0
 1387              		@ sp needed
 1388 001c 10BD     		pop	{r4, pc}
 1389              	.L55:
 1390 001e C046     		.align	2
 1391              	.L54:
 1392 0020 00000000 		.word	.LANCHOR0
 1393              		.cfi_endproc
 1394              	.LFE2:
 1395              		.size	CapSense_CSXElectrodeCheck, .-CapSense_CSXElectrodeCheck
 1396              		.section	.text.CapSense_CSXSetupWidget,"ax",%progbits
 1397              		.align	2
 1398              		.global	CapSense_CSXSetupWidget
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	CapSense_CSXSetupWidget, %function
 1402              	CapSense_CSXSetupWidget:
 1403              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 1404              		.loc 1 407 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
 1408              	.LVL114:
 1409 0000 70B5     		push	{r4, r5, r6, lr}
 1410              		.cfi_def_cfa_offset 16
 1411              		.cfi_offset 4, -16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 66


 1412              		.cfi_offset 5, -12
 1413              		.cfi_offset 6, -8
 1414              		.cfi_offset 14, -4
 1415 0002 0400     		movs	r4, r0
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1416              		.loc 1 417 0
 1417 0004 C2B2     		uxtb	r2, r0
 1418 0006 124B     		ldr	r3, .L57
 1419 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1420              		.loc 1 419 0
 1421 000a 0220     		movs	r0, #2
 1422              	.LVL115:
 1423 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1424              	.LVL116:
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1425              		.loc 1 425 0
 1426 0010 FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 1427              	.LVL117:
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1428              		.loc 1 429 0
 1429 0014 E300     		lsls	r3, r4, #3
 1430 0016 1C19     		adds	r4, r3, r4
 1431              	.LVL118:
 1432 0018 A200     		lsls	r2, r4, #2
 1433 001a 0E4B     		ldr	r3, .L57+4
 1434 001c D318     		adds	r3, r2, r3
 1435 001e 0E4A     		ldr	r2, .L57+8
 1436 0020 1360     		str	r3, [r2]
 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1437              		.loc 1 431 0
 1438 0022 5D68     		ldr	r5, [r3, #4]
 1439              	.LVL119:
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 1440              		.loc 1 436 0
 1441 0024 6C89     		ldrh	r4, [r5, #10]
 1442              	.LVL120:
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1443              		.loc 1 439 0
 1444 0026 2A88     		ldrh	r2, [r5]
 1445 0028 0C4B     		ldr	r3, .L57+12
 1446 002a 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1447              		.loc 1 440 0
 1448 002c 2800     		movs	r0, r5
 1449 002e FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 1450              	.LVL121:
 1451 0032 0B4B     		ldr	r3, .L57+16
 1452 0034 1880     		strh	r0, [r3]
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1453              		.loc 1 442 0
 1454 0036 2B7B     		ldrb	r3, [r5, #12]
 1455              	.LVL122:
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1456              		.loc 1 444 0
 1457 0038 013C     		subs	r4, r4, #1
 1458              	.LVL123:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 67


 1459 003a 2405     		lsls	r4, r4, #20
 1460              	.LVL124:
 1461 003c 240D     		lsrs	r4, r4, #20
 1462              	.LVL125:
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 1463              		.loc 1 445 0
 1464 003e 1B04     		lsls	r3, r3, #16
 1465              	.LVL126:
 1466 0040 1C43     		orrs	r4, r3
 1467              	.LVL127:
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 1468              		.loc 1 446 0
 1469 0042 084B     		ldr	r3, .L57+20
 1470 0044 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1471              		.loc 1 447 0
 1472 0046 084B     		ldr	r3, .L57+24
 1473 0048 587F     		ldrb	r0, [r3, #29]
 1474 004a FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1475              	.LVL128:
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1476              		.loc 1 476 0
 1477              		@ sp needed
 1478              	.LVL129:
 1479              	.LVL130:
 1480 004e 70BD     		pop	{r4, r5, r6, pc}
 1481              	.L58:
 1482              		.align	2
 1483              	.L57:
 1484 0050 00000000 		.word	CapSense_widgetIndex
 1485 0054 00000000 		.word	CapSense_dsFlash
 1486 0058 00000000 		.word	CapSense_curFlashWdgtPtr
 1487 005c 14030B40 		.word	1074463508
 1488 0060 00000000 		.word	.LANCHOR0
 1489 0064 00020B40 		.word	1074463232
 1490 0068 00000000 		.word	CapSense_dsRam
 1491              		.cfi_endproc
 1492              	.LFE3:
 1493              		.size	CapSense_CSXSetupWidget, .-CapSense_CSXSetupWidget
 1494              		.global	__aeabi_uidivmod
 1495              		.section	.text.CapSense_CSXSetupWidgetExt,"ax",%progbits
 1496              		.align	2
 1497              		.global	CapSense_CSXSetupWidgetExt
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	CapSense_CSXSetupWidgetExt, %function
 1501              	CapSense_CSXSetupWidgetExt:
 1502              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 1503              		.loc 1 517 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              	.LVL131:
 1508 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1509              		.cfi_def_cfa_offset 24
 1510              		.cfi_offset 3, -24
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 68


 1511              		.cfi_offset 4, -20
 1512              		.cfi_offset 5, -16
 1513              		.cfi_offset 6, -12
 1514              		.cfi_offset 7, -8
 1515              		.cfi_offset 14, -4
 1516 0002 0C00     		movs	r4, r1
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 1517              		.loc 1 526 0
 1518 0004 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 1519              	.LVL132:
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1520              		.loc 1 527 0
 1521 0008 E2B2     		uxtb	r2, r4
 1522 000a 184B     		ldr	r3, .L60
 1523 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 1524              		.loc 1 530 0
 1525 000e 184B     		ldr	r3, .L60+4
 1526 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1527              		.loc 1 531 0
 1528 0012 A300     		lsls	r3, r4, #2
 1529 0014 1B19     		adds	r3, r3, r4
 1530 0016 5B00     		lsls	r3, r3, #1
 1531 0018 AA68     		ldr	r2, [r5, #8]
 1532 001a 9446     		mov	ip, r2
 1533 001c 6344     		add	r3, r3, ip
 1534 001e 154A     		ldr	r2, .L60+8
 1535 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
 1536              		.loc 1 543 0
 1537 0022 6F7F     		ldrb	r7, [r5, #29]
 1538 0024 3900     		movs	r1, r7
 1539 0026 2000     		movs	r0, r4
 1540 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1541              	.LVL133:
 1542 002c 0600     		movs	r6, r0
 1543              	.LVL134:
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1544              		.loc 1 544 0
 1545 002e 3900     		movs	r1, r7
 1546 0030 2000     		movs	r0, r4
 1547              	.LVL135:
 1548 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1549              	.LVL136:
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 1550              		.loc 1 596 0
 1551 0036 2A68     		ldr	r2, [r5]
 1552 0038 0F4C     		ldr	r4, .L60+12
 1553              	.LVL137:
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1554              		.loc 1 597 0
 1555 003a F300     		lsls	r3, r6, #3
 1556 003c 9B1B     		subs	r3, r3, r6
 1557 003e 9B00     		lsls	r3, r3, #2
 1558 0040 D318     		adds	r3, r2, r3
 1559 0042 A360     		str	r3, [r4, #8]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 69


 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 1560              		.loc 1 599 0
 1561 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1562              		.loc 1 600 0
 1563 0046 287F     		ldrb	r0, [r5, #28]
 1564 0048 4118     		adds	r1, r0, r1
 1565              	.LVL138:
 1566 004a CB00     		lsls	r3, r1, #3
 1567 004c 581A     		subs	r0, r3, r1
 1568 004e 8000     		lsls	r0, r0, #2
 1569 0050 1018     		adds	r0, r2, r0
 1570 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1571              		.loc 1 603 0
 1572 0054 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1573              	.LVL139:
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 1574              		.loc 1 604 0
 1575 0058 A068     		ldr	r0, [r4, #8]
 1576 005a FFF7FEFF 		bl	CapSense_CSXConnectRx
 1577              	.LVL140:
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1578              		.loc 1 605 0
 1579 005e 0123     		movs	r3, #1
 1580 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 1581              		.loc 1 608 0
 1582 0062 064A     		ldr	r2, .L60+16
 1583 0064 064B     		ldr	r3, .L60+20
 1584 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1585              		.loc 1 613 0
 1586              		@ sp needed
 1587              	.LVL141:
 1588 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1589              	.L61:
 1590 006a C046     		.align	2
 1591              	.L60:
 1592 006c 00000000 		.word	CapSense_sensorIndex
 1593 0070 00000000 		.word	CapSense_curFlashWdgtPtr
 1594 0074 00000000 		.word	CapSense_curRamSnsPtr
 1595 0078 00000000 		.word	.LANCHOR0
 1596 007c 00000000 		.word	CapSense_SsCSXPostSingleScan
 1597 0080 00000000 		.word	.LANCHOR1
 1598              		.cfi_endproc
 1599              	.LFE4:
 1600              		.size	CapSense_CSXSetupWidgetExt, .-CapSense_CSXSetupWidgetExt
 1601              		.section	.text.CapSense_SsCSXGetTxClkDivider,"ax",%progbits
 1602              		.align	2
 1603              		.global	CapSense_SsCSXGetTxClkDivider
 1604              		.code	16
 1605              		.thumb_func
 1606              		.type	CapSense_SsCSXGetTxClkDivider, %function
 1607              	CapSense_SsCSXGetTxClkDivider:
 1608              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 70


 1609              		.loc 1 1805 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 1614              	.LVL142:
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1615              		.loc 1 1812 0
 1616 0000 C300     		lsls	r3, r0, #3
 1617 0002 1818     		adds	r0, r3, r0
 1618              	.LVL143:
 1619 0004 8300     		lsls	r3, r0, #2
 1620 0006 024A     		ldr	r2, .L63
 1621 0008 D318     		adds	r3, r2, r3
 1622 000a 5B68     		ldr	r3, [r3, #4]
 1623              	.LVL144:
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1624              		.loc 1 1815 0
 1625 000c 5889     		ldrh	r0, [r3, #10]
 1626              	.LVL145:
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1627              		.loc 1 1826 0
 1628              		@ sp needed
 1629 000e 7047     		bx	lr
 1630              	.L64:
 1631              		.align	2
 1632              	.L63:
 1633 0010 00000000 		.word	CapSense_dsFlash
 1634              		.cfi_endproc
 1635              	.LFE15:
 1636              		.size	CapSense_SsCSXGetTxClkDivider, .-CapSense_SsCSXGetTxClkDivider
 1637              		.global	CapSense_CSXPostScanApiPtr
 1638              		.global	CapSense_csxRawCount
 1639              		.global	CapSense_csxScanPeriod
 1640              		.data
 1641              		.align	2
 1642              		.set	.LANCHOR1,. + 0
 1643              		.type	CapSense_CSXPostScanApiPtr, %object
 1644              		.size	CapSense_CSXPostScanApiPtr, 4
 1645              	CapSense_CSXPostScanApiPtr:
 1646 0000 00000000 		.word	CapSense_SsCSXPostMultiScan
 1647              		.bss
 1648              		.align	2
 1649              		.set	.LANCHOR0,. + 0
 1650              		.type	CapSense_csxScanPeriod, %object
 1651              		.size	CapSense_csxScanPeriod, 2
 1652              	CapSense_csxScanPeriod:
 1653 0000 0000     		.space	2
 1654              		.type	CapSense_csxRawCount, %object
 1655              		.size	CapSense_csxRawCount, 2
 1656              	CapSense_csxRawCount:
 1657 0002 0000     		.space	2
 1658              		.type	CapSense_curWdgtTotalTx, %object
 1659              		.size	CapSense_curWdgtTotalTx, 2
 1660              	CapSense_curWdgtTotalTx:
 1661 0004 0000     		.space	2
 1662              		.type	CapSense_curWdgtTotalRx, %object
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 71


 1663              		.size	CapSense_curWdgtTotalRx, 2
 1664              	CapSense_curWdgtTotalRx:
 1665 0006 0000     		.space	2
 1666              		.type	CapSense_curRxIOPtr, %object
 1667              		.size	CapSense_curRxIOPtr, 4
 1668              	CapSense_curRxIOPtr:
 1669 0008 00000000 		.space	4
 1670              		.type	CapSense_curTxIOPtr, %object
 1671              		.size	CapSense_curTxIOPtr, 4
 1672              	CapSense_curTxIOPtr:
 1673 000c 00000000 		.space	4
 1674              		.type	CapSense_eleCsxDisconnectFlag, %object
 1675              		.size	CapSense_eleCsxDisconnectFlag, 2
 1676              	CapSense_eleCsxDisconnectFlag:
 1677 0010 0000     		.space	2
 1678              		.text
 1679              	.Letext0:
 1680              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1681              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1682              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1683              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1684              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1685              		.file 7 "Generated_Source\\PSoC4\\CyLib.h"
 1686              		.section	.debug_info,"",%progbits
 1687              	.Ldebug_info0:
 1688 0000 FE0D0000 		.4byte	0xdfe
 1689 0004 0400     		.2byte	0x4
 1690 0006 00000000 		.4byte	.Ldebug_abbrev0
 1691 000a 04       		.byte	0x4
 1692 000b 01       		.uleb128 0x1
 1693 000c 0E020000 		.4byte	.LASF169
 1694 0010 0C       		.byte	0xc
 1695 0011 F3070000 		.4byte	.LASF170
 1696 0015 F7090000 		.4byte	.LASF171
 1697 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1698 001d 00000000 		.4byte	0
 1699 0021 00000000 		.4byte	.Ldebug_line0
 1700 0025 02       		.uleb128 0x2
 1701 0026 01       		.byte	0x1
 1702 0027 06       		.byte	0x6
 1703 0028 8B0A0000 		.4byte	.LASF0
 1704 002c 02       		.uleb128 0x2
 1705 002d 01       		.byte	0x1
 1706 002e 08       		.byte	0x8
 1707 002f DC080000 		.4byte	.LASF1
 1708 0033 02       		.uleb128 0x2
 1709 0034 02       		.byte	0x2
 1710 0035 05       		.byte	0x5
 1711 0036 45070000 		.4byte	.LASF2
 1712 003a 02       		.uleb128 0x2
 1713 003b 02       		.byte	0x2
 1714 003c 07       		.byte	0x7
 1715 003d B30A0000 		.4byte	.LASF3
 1716 0041 02       		.uleb128 0x2
 1717 0042 04       		.byte	0x4
 1718 0043 05       		.byte	0x5
 1719 0044 63070000 		.4byte	.LASF4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 72


 1720 0048 02       		.uleb128 0x2
 1721 0049 04       		.byte	0x4
 1722 004a 07       		.byte	0x7
 1723 004b 76080000 		.4byte	.LASF5
 1724 004f 02       		.uleb128 0x2
 1725 0050 08       		.byte	0x8
 1726 0051 05       		.byte	0x5
 1727 0052 DC040000 		.4byte	.LASF6
 1728 0056 02       		.uleb128 0x2
 1729 0057 08       		.byte	0x8
 1730 0058 07       		.byte	0x7
 1731 0059 E2020000 		.4byte	.LASF7
 1732 005d 03       		.uleb128 0x3
 1733 005e 04       		.byte	0x4
 1734 005f 05       		.byte	0x5
 1735 0060 696E7400 		.ascii	"int\000"
 1736 0064 02       		.uleb128 0x2
 1737 0065 04       		.byte	0x4
 1738 0066 07       		.byte	0x7
 1739 0067 E8000000 		.4byte	.LASF8
 1740 006b 04       		.uleb128 0x4
 1741 006c 030B0000 		.4byte	.LASF9
 1742 0070 02       		.byte	0x2
 1743 0071 E401     		.2byte	0x1e4
 1744 0073 2C000000 		.4byte	0x2c
 1745 0077 04       		.uleb128 0x4
 1746 0078 72040000 		.4byte	.LASF10
 1747 007c 02       		.byte	0x2
 1748 007d E501     		.2byte	0x1e5
 1749 007f 3A000000 		.4byte	0x3a
 1750 0083 04       		.uleb128 0x4
 1751 0084 DF050000 		.4byte	.LASF11
 1752 0088 02       		.byte	0x2
 1753 0089 E601     		.2byte	0x1e6
 1754 008b 48000000 		.4byte	0x48
 1755 008f 02       		.uleb128 0x2
 1756 0090 04       		.byte	0x4
 1757 0091 04       		.byte	0x4
 1758 0092 02020000 		.4byte	.LASF12
 1759 0096 02       		.uleb128 0x2
 1760 0097 08       		.byte	0x8
 1761 0098 04       		.byte	0x4
 1762 0099 090B0000 		.4byte	.LASF13
 1763 009d 02       		.uleb128 0x2
 1764 009e 01       		.byte	0x1
 1765 009f 08       		.byte	0x8
 1766 00a0 4C040000 		.4byte	.LASF14
 1767 00a4 05       		.uleb128 0x5
 1768 00a5 6B000000 		.4byte	0x6b
 1769 00a9 05       		.uleb128 0x5
 1770 00aa 77000000 		.4byte	0x77
 1771 00ae 04       		.uleb128 0x4
 1772 00af B6060000 		.4byte	.LASF15
 1773 00b3 02       		.byte	0x2
 1774 00b4 9002     		.2byte	0x290
 1775 00b6 BA000000 		.4byte	0xba
 1776 00ba 05       		.uleb128 0x5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 73


 1777 00bb 83000000 		.4byte	0x83
 1778 00bf 06       		.uleb128 0x6
 1779 00c0 04       		.byte	0x4
 1780 00c1 C5000000 		.4byte	0xc5
 1781 00c5 07       		.uleb128 0x7
 1782 00c6 02       		.uleb128 0x2
 1783 00c7 08       		.byte	0x8
 1784 00c8 04       		.byte	0x4
 1785 00c9 AA060000 		.4byte	.LASF16
 1786 00cd 02       		.uleb128 0x2
 1787 00ce 04       		.byte	0x4
 1788 00cf 07       		.byte	0x7
 1789 00d0 65080000 		.4byte	.LASF17
 1790 00d4 08       		.uleb128 0x8
 1791 00d5 04       		.byte	0x4
 1792 00d6 04       		.uleb128 0x4
 1793 00d7 4E090000 		.4byte	.LASF18
 1794 00db 03       		.byte	0x3
 1795 00dc 0801     		.2byte	0x108
 1796 00de 77000000 		.4byte	0x77
 1797 00e2 04       		.uleb128 0x4
 1798 00e3 97040000 		.4byte	.LASF19
 1799 00e7 03       		.byte	0x3
 1800 00e8 0C01     		.2byte	0x10c
 1801 00ea 6B000000 		.4byte	0x6b
 1802 00ee 09       		.uleb128 0x9
 1803 00ef 0C       		.byte	0xc
 1804 00f0 04       		.byte	0x4
 1805 00f1 6E       		.byte	0x6e
 1806 00f2 4B010000 		.4byte	0x14b
 1807 00f6 0A       		.uleb128 0xa
 1808 00f7 1E0B0000 		.4byte	.LASF20
 1809 00fb 04       		.byte	0x4
 1810 00fc 73       		.byte	0x73
 1811 00fd 77000000 		.4byte	0x77
 1812 0101 00       		.byte	0
 1813 0102 0A       		.uleb128 0xa
 1814 0103 250B0000 		.4byte	.LASF21
 1815 0107 04       		.byte	0x4
 1816 0108 77       		.byte	0x77
 1817 0109 77000000 		.4byte	0x77
 1818 010d 02       		.byte	0x2
 1819 010e 0A       		.uleb128 0xa
 1820 010f 2C0B0000 		.4byte	.LASF22
 1821 0113 04       		.byte	0x4
 1822 0114 7B       		.byte	0x7b
 1823 0115 77000000 		.4byte	0x77
 1824 0119 04       		.byte	0x4
 1825 011a 0A       		.uleb128 0xa
 1826 011b 330B0000 		.4byte	.LASF23
 1827 011f 04       		.byte	0x4
 1828 0120 7F       		.byte	0x7f
 1829 0121 77000000 		.4byte	0x77
 1830 0125 06       		.byte	0x6
 1831 0126 0A       		.uleb128 0xa
 1832 0127 3A0B0000 		.4byte	.LASF24
 1833 012b 04       		.byte	0x4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 74


 1834 012c 83       		.byte	0x83
 1835 012d 77000000 		.4byte	0x77
 1836 0131 08       		.byte	0x8
 1837 0132 0A       		.uleb128 0xa
 1838 0133 410B0000 		.4byte	.LASF25
 1839 0137 04       		.byte	0x4
 1840 0138 87       		.byte	0x87
 1841 0139 6B000000 		.4byte	0x6b
 1842 013d 0A       		.byte	0xa
 1843 013e 0A       		.uleb128 0xa
 1844 013f 480B0000 		.4byte	.LASF26
 1845 0143 04       		.byte	0x4
 1846 0144 8B       		.byte	0x8b
 1847 0145 6B000000 		.4byte	0x6b
 1848 0149 0B       		.byte	0xb
 1849 014a 00       		.byte	0
 1850 014b 0B       		.uleb128 0xb
 1851 014c 16040000 		.4byte	.LASF27
 1852 0150 04       		.byte	0x4
 1853 0151 8C       		.byte	0x8c
 1854 0152 EE000000 		.4byte	0xee
 1855 0156 0C       		.uleb128 0xc
 1856 0157 01       		.byte	0x1
 1857 0158 2C000000 		.4byte	0x2c
 1858 015c 05       		.byte	0x5
 1859 015d 6F       		.byte	0x6f
 1860 015e 81010000 		.4byte	0x181
 1861 0162 0D       		.uleb128 0xd
 1862 0163 D3000000 		.4byte	.LASF28
 1863 0167 00       		.byte	0
 1864 0168 0D       		.uleb128 0xd
 1865 0169 49080000 		.4byte	.LASF29
 1866 016d 01       		.byte	0x1
 1867 016e 0D       		.uleb128 0xd
 1868 016f A2070000 		.4byte	.LASF30
 1869 0173 02       		.byte	0x2
 1870 0174 0D       		.uleb128 0xd
 1871 0175 66090000 		.4byte	.LASF31
 1872 0179 03       		.byte	0x3
 1873 017a 0D       		.uleb128 0xd
 1874 017b 71060000 		.4byte	.LASF32
 1875 017f 04       		.byte	0x4
 1876 0180 00       		.byte	0
 1877 0181 0B       		.uleb128 0xb
 1878 0182 B2040000 		.4byte	.LASF33
 1879 0186 05       		.byte	0x5
 1880 0187 75       		.byte	0x75
 1881 0188 56010000 		.4byte	0x156
 1882 018c 09       		.uleb128 0x9
 1883 018d 12       		.byte	0x12
 1884 018e 05       		.byte	0x5
 1885 018f 8D       		.byte	0x8d
 1886 0190 25020000 		.4byte	0x225
 1887 0194 0A       		.uleb128 0xa
 1888 0195 79040000 		.4byte	.LASF34
 1889 0199 05       		.byte	0x5
 1890 019a 92       		.byte	0x92
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 75


 1891 019b 77000000 		.4byte	0x77
 1892 019f 00       		.byte	0
 1893 01a0 0A       		.uleb128 0xa
 1894 01a1 AD080000 		.4byte	.LASF35
 1895 01a5 05       		.byte	0x5
 1896 01a6 97       		.byte	0x97
 1897 01a7 D6000000 		.4byte	0xd6
 1898 01ab 02       		.byte	0x2
 1899 01ac 0A       		.uleb128 0xa
 1900 01ad 44040000 		.4byte	.LASF36
 1901 01b1 05       		.byte	0x5
 1902 01b2 9C       		.byte	0x9c
 1903 01b3 6B000000 		.4byte	0x6b
 1904 01b7 04       		.byte	0x4
 1905 01b8 0A       		.uleb128 0xa
 1906 01b9 8B050000 		.4byte	.LASF37
 1907 01bd 05       		.byte	0x5
 1908 01be A1       		.byte	0xa1
 1909 01bf 6B000000 		.4byte	0x6b
 1910 01c3 05       		.byte	0x5
 1911 01c4 0A       		.uleb128 0xa
 1912 01c5 A5030000 		.4byte	.LASF38
 1913 01c9 05       		.byte	0x5
 1914 01ca A7       		.byte	0xa7
 1915 01cb 6B000000 		.4byte	0x6b
 1916 01cf 06       		.byte	0x6
 1917 01d0 0A       		.uleb128 0xa
 1918 01d1 0B050000 		.4byte	.LASF39
 1919 01d5 05       		.byte	0x5
 1920 01d6 AD       		.byte	0xad
 1921 01d7 6B000000 		.4byte	0x6b
 1922 01db 07       		.byte	0x7
 1923 01dc 0A       		.uleb128 0xa
 1924 01dd C9030000 		.4byte	.LASF40
 1925 01e1 05       		.byte	0x5
 1926 01e2 B4       		.byte	0xb4
 1927 01e3 E2000000 		.4byte	0xe2
 1928 01e7 08       		.byte	0x8
 1929 01e8 0A       		.uleb128 0xa
 1930 01e9 8F080000 		.4byte	.LASF41
 1931 01ed 05       		.byte	0x5
 1932 01ee BB       		.byte	0xbb
 1933 01ef 25020000 		.4byte	0x225
 1934 01f3 09       		.byte	0x9
 1935 01f4 0A       		.uleb128 0xa
 1936 01f5 BC090000 		.4byte	.LASF42
 1937 01f9 05       		.byte	0x5
 1938 01fa C3       		.byte	0xc3
 1939 01fb 77000000 		.4byte	0x77
 1940 01ff 0A       		.byte	0xa
 1941 0200 0A       		.uleb128 0xa
 1942 0201 01070000 		.4byte	.LASF43
 1943 0205 05       		.byte	0x5
 1944 0206 C8       		.byte	0xc8
 1945 0207 6B000000 		.4byte	0x6b
 1946 020b 0C       		.byte	0xc
 1947 020c 0A       		.uleb128 0xa
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 76


 1948 020d 34080000 		.4byte	.LASF44
 1949 0211 05       		.byte	0x5
 1950 0212 CE       		.byte	0xce
 1951 0213 77000000 		.4byte	0x77
 1952 0217 0E       		.byte	0xe
 1953 0218 0A       		.uleb128 0xa
 1954 0219 9E030000 		.4byte	.LASF45
 1955 021d 05       		.byte	0x5
 1956 021e D3       		.byte	0xd3
 1957 021f 77000000 		.4byte	0x77
 1958 0223 10       		.byte	0x10
 1959 0224 00       		.byte	0
 1960 0225 0E       		.uleb128 0xe
 1961 0226 6B000000 		.4byte	0x6b
 1962 022a 35020000 		.4byte	0x235
 1963 022e 0F       		.uleb128 0xf
 1964 022f CD000000 		.4byte	0xcd
 1965 0233 00       		.byte	0
 1966 0234 00       		.byte	0
 1967 0235 0B       		.uleb128 0xb
 1968 0236 9F050000 		.4byte	.LASF46
 1969 023a 05       		.byte	0x5
 1970 023b D4       		.byte	0xd4
 1971 023c 8C010000 		.4byte	0x18c
 1972 0240 09       		.uleb128 0x9
 1973 0241 12       		.byte	0x12
 1974 0242 05       		.byte	0x5
 1975 0243 D9       		.byte	0xd9
 1976 0244 DF020000 		.4byte	0x2df
 1977 0248 0A       		.uleb128 0xa
 1978 0249 79040000 		.4byte	.LASF34
 1979 024d 05       		.byte	0x5
 1980 024e DE       		.byte	0xde
 1981 024f 77000000 		.4byte	0x77
 1982 0253 00       		.byte	0
 1983 0254 0A       		.uleb128 0xa
 1984 0255 AD080000 		.4byte	.LASF35
 1985 0259 05       		.byte	0x5
 1986 025a E3       		.byte	0xe3
 1987 025b D6000000 		.4byte	0xd6
 1988 025f 02       		.byte	0x2
 1989 0260 0A       		.uleb128 0xa
 1990 0261 44040000 		.4byte	.LASF36
 1991 0265 05       		.byte	0x5
 1992 0266 E8       		.byte	0xe8
 1993 0267 6B000000 		.4byte	0x6b
 1994 026b 04       		.byte	0x4
 1995 026c 0A       		.uleb128 0xa
 1996 026d 8B050000 		.4byte	.LASF37
 1997 0271 05       		.byte	0x5
 1998 0272 ED       		.byte	0xed
 1999 0273 6B000000 		.4byte	0x6b
 2000 0277 05       		.byte	0x5
 2001 0278 0A       		.uleb128 0xa
 2002 0279 A5030000 		.4byte	.LASF38
 2003 027d 05       		.byte	0x5
 2004 027e F3       		.byte	0xf3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 77


 2005 027f 6B000000 		.4byte	0x6b
 2006 0283 06       		.byte	0x6
 2007 0284 0A       		.uleb128 0xa
 2008 0285 0B050000 		.4byte	.LASF39
 2009 0289 05       		.byte	0x5
 2010 028a F9       		.byte	0xf9
 2011 028b 6B000000 		.4byte	0x6b
 2012 028f 07       		.byte	0x7
 2013 0290 10       		.uleb128 0x10
 2014 0291 C9030000 		.4byte	.LASF40
 2015 0295 05       		.byte	0x5
 2016 0296 0001     		.2byte	0x100
 2017 0298 E2000000 		.4byte	0xe2
 2018 029c 08       		.byte	0x8
 2019 029d 10       		.uleb128 0x10
 2020 029e 8F080000 		.4byte	.LASF41
 2021 02a2 05       		.byte	0x5
 2022 02a3 0701     		.2byte	0x107
 2023 02a5 25020000 		.4byte	0x225
 2024 02a9 09       		.byte	0x9
 2025 02aa 10       		.uleb128 0x10
 2026 02ab BC090000 		.4byte	.LASF42
 2027 02af 05       		.byte	0x5
 2028 02b0 0F01     		.2byte	0x10f
 2029 02b2 77000000 		.4byte	0x77
 2030 02b6 0A       		.byte	0xa
 2031 02b7 10       		.uleb128 0x10
 2032 02b8 01070000 		.4byte	.LASF43
 2033 02bc 05       		.byte	0x5
 2034 02bd 1401     		.2byte	0x114
 2035 02bf 6B000000 		.4byte	0x6b
 2036 02c3 0C       		.byte	0xc
 2037 02c4 10       		.uleb128 0x10
 2038 02c5 34080000 		.4byte	.LASF44
 2039 02c9 05       		.byte	0x5
 2040 02ca 1A01     		.2byte	0x11a
 2041 02cc 77000000 		.4byte	0x77
 2042 02d0 0E       		.byte	0xe
 2043 02d1 10       		.uleb128 0x10
 2044 02d2 9E030000 		.4byte	.LASF45
 2045 02d6 05       		.byte	0x5
 2046 02d7 1F01     		.2byte	0x11f
 2047 02d9 77000000 		.4byte	0x77
 2048 02dd 10       		.byte	0x10
 2049 02de 00       		.byte	0
 2050 02df 04       		.uleb128 0x4
 2051 02e0 BE080000 		.4byte	.LASF47
 2052 02e4 05       		.byte	0x5
 2053 02e5 2001     		.2byte	0x120
 2054 02e7 40020000 		.4byte	0x240
 2055 02eb 11       		.uleb128 0x11
 2056 02ec 24       		.byte	0x24
 2057 02ed 05       		.byte	0x5
 2058 02ee 2601     		.2byte	0x126
 2059 02f0 0F030000 		.4byte	0x30f
 2060 02f4 10       		.uleb128 0x10
 2061 02f5 E3070000 		.4byte	.LASF48
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 78


 2062 02f9 05       		.byte	0x5
 2063 02fa 2B01     		.2byte	0x12b
 2064 02fc DF020000 		.4byte	0x2df
 2065 0300 00       		.byte	0
 2066 0301 10       		.uleb128 0x10
 2067 0302 EB070000 		.4byte	.LASF49
 2068 0306 05       		.byte	0x5
 2069 0307 3001     		.2byte	0x130
 2070 0309 DF020000 		.4byte	0x2df
 2071 030d 12       		.byte	0x12
 2072 030e 00       		.byte	0
 2073 030f 04       		.uleb128 0x4
 2074 0310 9B010000 		.4byte	.LASF50
 2075 0314 05       		.byte	0x5
 2076 0315 3101     		.2byte	0x131
 2077 0317 EB020000 		.4byte	0x2eb
 2078 031b 11       		.uleb128 0x11
 2079 031c 0A       		.byte	0xa
 2080 031d 05       		.byte	0x5
 2081 031e 3701     		.2byte	0x137
 2082 0320 73030000 		.4byte	0x373
 2083 0324 12       		.uleb128 0x12
 2084 0325 72617700 		.ascii	"raw\000"
 2085 0329 05       		.byte	0x5
 2086 032a 3C01     		.2byte	0x13c
 2087 032c 73030000 		.4byte	0x373
 2088 0330 00       		.byte	0
 2089 0331 10       		.uleb128 0x10
 2090 0332 AE0A0000 		.4byte	.LASF51
 2091 0336 05       		.byte	0x5
 2092 0337 4101     		.2byte	0x141
 2093 0339 73030000 		.4byte	0x373
 2094 033d 02       		.byte	0x2
 2095 033e 10       		.uleb128 0x10
 2096 033f B6080000 		.4byte	.LASF52
 2097 0343 05       		.byte	0x5
 2098 0344 4701     		.2byte	0x147
 2099 0346 25020000 		.4byte	0x225
 2100 034a 04       		.byte	0x4
 2101 034b 10       		.uleb128 0x10
 2102 034c 77070000 		.4byte	.LASF53
 2103 0350 05       		.byte	0x5
 2104 0351 4C01     		.2byte	0x14c
 2105 0353 D6000000 		.4byte	0xd6
 2106 0357 06       		.byte	0x6
 2107 0358 10       		.uleb128 0x10
 2108 0359 100B0000 		.4byte	.LASF54
 2109 035d 05       		.byte	0x5
 2110 035e 5101     		.2byte	0x151
 2111 0360 83030000 		.4byte	0x383
 2112 0364 08       		.byte	0x8
 2113 0365 10       		.uleb128 0x10
 2114 0366 CD040000 		.4byte	.LASF55
 2115 036a 05       		.byte	0x5
 2116 036b 5601     		.2byte	0x156
 2117 036d 25020000 		.4byte	0x225
 2118 0371 09       		.byte	0x9
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 79


 2119 0372 00       		.byte	0
 2120 0373 0E       		.uleb128 0xe
 2121 0374 77000000 		.4byte	0x77
 2122 0378 83030000 		.4byte	0x383
 2123 037c 0F       		.uleb128 0xf
 2124 037d CD000000 		.4byte	0xcd
 2125 0381 00       		.byte	0
 2126 0382 00       		.byte	0
 2127 0383 0E       		.uleb128 0xe
 2128 0384 E2000000 		.4byte	0xe2
 2129 0388 93030000 		.4byte	0x393
 2130 038c 0F       		.uleb128 0xf
 2131 038d CD000000 		.4byte	0xcd
 2132 0391 00       		.byte	0
 2133 0392 00       		.byte	0
 2134 0393 04       		.uleb128 0x4
 2135 0394 79030000 		.4byte	.LASF56
 2136 0398 05       		.byte	0x5
 2137 0399 5701     		.2byte	0x157
 2138 039b 1B030000 		.4byte	0x31b
 2139 039f 11       		.uleb128 0x11
 2140 03a0 14       		.byte	0x14
 2141 03a1 05       		.byte	0x5
 2142 03a2 5D01     		.2byte	0x15d
 2143 03a4 C3030000 		.4byte	0x3c3
 2144 03a8 10       		.uleb128 0x10
 2145 03a9 E3070000 		.4byte	.LASF48
 2146 03ad 05       		.byte	0x5
 2147 03ae 6201     		.2byte	0x162
 2148 03b0 C3030000 		.4byte	0x3c3
 2149 03b4 00       		.byte	0
 2150 03b5 10       		.uleb128 0x10
 2151 03b6 EB070000 		.4byte	.LASF49
 2152 03ba 05       		.byte	0x5
 2153 03bb 6701     		.2byte	0x167
 2154 03bd C3030000 		.4byte	0x3c3
 2155 03c1 0A       		.byte	0xa
 2156 03c2 00       		.byte	0
 2157 03c3 0E       		.uleb128 0xe
 2158 03c4 93030000 		.4byte	0x393
 2159 03c8 D3030000 		.4byte	0x3d3
 2160 03cc 0F       		.uleb128 0xf
 2161 03cd CD000000 		.4byte	0xcd
 2162 03d1 00       		.byte	0
 2163 03d2 00       		.byte	0
 2164 03d3 04       		.uleb128 0x4
 2165 03d4 940B0000 		.4byte	.LASF57
 2166 03d8 05       		.byte	0x5
 2167 03d9 6801     		.2byte	0x168
 2168 03db 9F030000 		.4byte	0x39f
 2169 03df 11       		.uleb128 0x11
 2170 03e0 5C       		.byte	0x5c
 2171 03e1 05       		.byte	0x5
 2172 03e2 6E01     		.2byte	0x16e
 2173 03e4 D3040000 		.4byte	0x4d3
 2174 03e8 10       		.uleb128 0x10
 2175 03e9 CF060000 		.4byte	.LASF58
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 80


 2176 03ed 05       		.byte	0x5
 2177 03ee 7501     		.2byte	0x175
 2178 03f0 77000000 		.4byte	0x77
 2179 03f4 00       		.byte	0
 2180 03f5 10       		.uleb128 0x10
 2181 03f6 640B0000 		.4byte	.LASF59
 2182 03fa 05       		.byte	0x5
 2183 03fb 7A01     		.2byte	0x17a
 2184 03fd 77000000 		.4byte	0x77
 2185 0401 02       		.byte	0x2
 2186 0402 10       		.uleb128 0x10
 2187 0403 29010000 		.4byte	.LASF60
 2188 0407 05       		.byte	0x5
 2189 0408 7F01     		.2byte	0x17f
 2190 040a 77000000 		.4byte	0x77
 2191 040e 04       		.byte	0x4
 2192 040f 10       		.uleb128 0x10
 2193 0410 94070000 		.4byte	.LASF61
 2194 0414 05       		.byte	0x5
 2195 0415 8501     		.2byte	0x185
 2196 0417 77000000 		.4byte	0x77
 2197 041b 06       		.byte	0x6
 2198 041c 10       		.uleb128 0x10
 2199 041d 1D010000 		.4byte	.LASF62
 2200 0421 05       		.byte	0x5
 2201 0422 8A01     		.2byte	0x18a
 2202 0424 77000000 		.4byte	0x77
 2203 0428 08       		.byte	0x8
 2204 0429 10       		.uleb128 0x10
 2205 042a 84040000 		.4byte	.LASF63
 2206 042e 05       		.byte	0x5
 2207 042f 8F01     		.2byte	0x18f
 2208 0431 BA000000 		.4byte	0xba
 2209 0435 0C       		.byte	0xc
 2210 0436 10       		.uleb128 0x10
 2211 0437 6C070000 		.4byte	.LASF64
 2212 043b 05       		.byte	0x5
 2213 043c 9501     		.2byte	0x195
 2214 043e D3040000 		.4byte	0x4d3
 2215 0442 10       		.byte	0x10
 2216 0443 10       		.uleb128 0x10
 2217 0444 3E080000 		.4byte	.LASF65
 2218 0448 05       		.byte	0x5
 2219 0449 9C01     		.2byte	0x19c
 2220 044b D3040000 		.4byte	0x4d3
 2221 044f 14       		.byte	0x14
 2222 0450 10       		.uleb128 0x10
 2223 0451 F7060000 		.4byte	.LASF66
 2224 0455 05       		.byte	0x5
 2225 0456 AC01     		.2byte	0x1ac
 2226 0458 E3040000 		.4byte	0x4e3
 2227 045c 18       		.byte	0x18
 2228 045d 10       		.uleb128 0x10
 2229 045e 94050000 		.4byte	.LASF67
 2230 0462 05       		.byte	0x5
 2231 0463 B201     		.2byte	0x1b2
 2232 0465 77000000 		.4byte	0x77
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 81


 2233 0469 1A       		.byte	0x1a
 2234 046a 10       		.uleb128 0x10
 2235 046b 6F030000 		.4byte	.LASF68
 2236 046f 05       		.byte	0x5
 2237 0470 B701     		.2byte	0x1b7
 2238 0472 6B000000 		.4byte	0x6b
 2239 0476 1C       		.byte	0x1c
 2240 0477 10       		.uleb128 0x10
 2241 0478 38090000 		.4byte	.LASF69
 2242 047c 05       		.byte	0x5
 2243 047d BC01     		.2byte	0x1bc
 2244 047f 6B000000 		.4byte	0x6b
 2245 0483 1D       		.byte	0x1d
 2246 0484 10       		.uleb128 0x10
 2247 0485 2A050000 		.4byte	.LASF70
 2248 0489 05       		.byte	0x5
 2249 048a C101     		.2byte	0x1c1
 2250 048c 0F030000 		.4byte	0x30f
 2251 0490 1E       		.byte	0x1e
 2252 0491 10       		.uleb128 0x10
 2253 0492 DA020000 		.4byte	.LASF71
 2254 0496 05       		.byte	0x5
 2255 0497 C601     		.2byte	0x1c6
 2256 0499 D3030000 		.4byte	0x3d3
 2257 049d 42       		.byte	0x42
 2258 049e 10       		.uleb128 0x10
 2259 049f C3000000 		.4byte	.LASF72
 2260 04a3 05       		.byte	0x5
 2261 04a4 CB01     		.2byte	0x1cb
 2262 04a6 6B000000 		.4byte	0x6b
 2263 04aa 56       		.byte	0x56
 2264 04ab 10       		.uleb128 0x10
 2265 04ac 27030000 		.4byte	.LASF73
 2266 04b0 05       		.byte	0x5
 2267 04b1 D001     		.2byte	0x1d0
 2268 04b3 6B000000 		.4byte	0x6b
 2269 04b7 57       		.byte	0x57
 2270 04b8 10       		.uleb128 0x10
 2271 04b9 BC060000 		.4byte	.LASF74
 2272 04bd 05       		.byte	0x5
 2273 04be D501     		.2byte	0x1d5
 2274 04c0 77000000 		.4byte	0x77
 2275 04c4 58       		.byte	0x58
 2276 04c5 10       		.uleb128 0x10
 2277 04c6 7B050000 		.4byte	.LASF75
 2278 04ca 05       		.byte	0x5
 2279 04cb DA01     		.2byte	0x1da
 2280 04cd 73030000 		.4byte	0x373
 2281 04d1 5A       		.byte	0x5a
 2282 04d2 00       		.byte	0
 2283 04d3 0E       		.uleb128 0xe
 2284 04d4 83000000 		.4byte	0x83
 2285 04d8 E3040000 		.4byte	0x4e3
 2286 04dc 0F       		.uleb128 0xf
 2287 04dd CD000000 		.4byte	0xcd
 2288 04e1 00       		.byte	0
 2289 04e2 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 82


 2290 04e3 0E       		.uleb128 0xe
 2291 04e4 6B000000 		.4byte	0x6b
 2292 04e8 F3040000 		.4byte	0x4f3
 2293 04ec 0F       		.uleb128 0xf
 2294 04ed CD000000 		.4byte	0xcd
 2295 04f1 01       		.byte	0x1
 2296 04f2 00       		.byte	0
 2297 04f3 04       		.uleb128 0x4
 2298 04f4 4F070000 		.4byte	.LASF76
 2299 04f8 05       		.byte	0x5
 2300 04f9 DB01     		.2byte	0x1db
 2301 04fb DF030000 		.4byte	0x3df
 2302 04ff 11       		.uleb128 0x11
 2303 0500 1C       		.byte	0x1c
 2304 0501 05       		.byte	0x5
 2305 0502 E101     		.2byte	0x1e1
 2306 0504 7E050000 		.4byte	0x57e
 2307 0508 10       		.uleb128 0x10
 2308 0509 BB050000 		.4byte	.LASF77
 2309 050d 05       		.byte	0x5
 2310 050e E601     		.2byte	0x1e6
 2311 0510 7E050000 		.4byte	0x57e
 2312 0514 00       		.byte	0
 2313 0515 10       		.uleb128 0x10
 2314 0516 D6040000 		.4byte	.LASF78
 2315 051a 05       		.byte	0x5
 2316 051b EB01     		.2byte	0x1eb
 2317 051d 7E050000 		.4byte	0x57e
 2318 0521 04       		.byte	0x4
 2319 0522 10       		.uleb128 0x10
 2320 0523 98030000 		.4byte	.LASF79
 2321 0527 05       		.byte	0x5
 2322 0528 F001     		.2byte	0x1f0
 2323 052a 7E050000 		.4byte	0x57e
 2324 052e 08       		.byte	0x8
 2325 052f 10       		.uleb128 0x10
 2326 0530 BE070000 		.4byte	.LASF80
 2327 0534 05       		.byte	0x5
 2328 0535 F501     		.2byte	0x1f5
 2329 0537 7E050000 		.4byte	0x57e
 2330 053b 0C       		.byte	0xc
 2331 053c 10       		.uleb128 0x10
 2332 053d 8B090000 		.4byte	.LASF81
 2333 0541 05       		.byte	0x5
 2334 0542 FA01     		.2byte	0x1fa
 2335 0544 83000000 		.4byte	0x83
 2336 0548 10       		.byte	0x10
 2337 0549 10       		.uleb128 0x10
 2338 054a 0E060000 		.4byte	.LASF82
 2339 054e 05       		.byte	0x5
 2340 054f FF01     		.2byte	0x1ff
 2341 0551 83000000 		.4byte	0x83
 2342 0555 14       		.byte	0x14
 2343 0556 10       		.uleb128 0x10
 2344 0557 67040000 		.4byte	.LASF83
 2345 055b 05       		.byte	0x5
 2346 055c 0402     		.2byte	0x204
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 83


 2347 055e 6B000000 		.4byte	0x6b
 2348 0562 18       		.byte	0x18
 2349 0563 10       		.uleb128 0x10
 2350 0564 6E080000 		.4byte	.LASF84
 2351 0568 05       		.byte	0x5
 2352 0569 0902     		.2byte	0x209
 2353 056b 6B000000 		.4byte	0x6b
 2354 056f 19       		.byte	0x19
 2355 0570 10       		.uleb128 0x10
 2356 0571 08020000 		.4byte	.LASF85
 2357 0575 05       		.byte	0x5
 2358 0576 0E02     		.2byte	0x20e
 2359 0578 6B000000 		.4byte	0x6b
 2360 057c 1A       		.byte	0x1a
 2361 057d 00       		.byte	0
 2362 057e 06       		.uleb128 0x6
 2363 057f 04       		.byte	0x4
 2364 0580 AE000000 		.4byte	0xae
 2365 0584 04       		.uleb128 0x4
 2366 0585 0E030000 		.4byte	.LASF86
 2367 0589 05       		.byte	0x5
 2368 058a 0F02     		.2byte	0x20f
 2369 058c FF040000 		.4byte	0x4ff
 2370 0590 11       		.uleb128 0x11
 2371 0591 24       		.byte	0x24
 2372 0592 05       		.byte	0x5
 2373 0593 4202     		.2byte	0x242
 2374 0595 36060000 		.4byte	0x636
 2375 0599 10       		.uleb128 0x10
 2376 059a F60A0000 		.4byte	.LASF87
 2377 059e 05       		.byte	0x5
 2378 059f 4B02     		.2byte	0x24b
 2379 05a1 36060000 		.4byte	0x636
 2380 05a5 00       		.byte	0
 2381 05a6 10       		.uleb128 0x10
 2382 05a7 42090000 		.4byte	.LASF88
 2383 05ab 05       		.byte	0x5
 2384 05ac 5202     		.2byte	0x252
 2385 05ae D4000000 		.4byte	0xd4
 2386 05b2 04       		.byte	0x4
 2387 05b3 10       		.uleb128 0x10
 2388 05b4 D8060000 		.4byte	.LASF89
 2389 05b8 05       		.byte	0x5
 2390 05b9 5802     		.2byte	0x258
 2391 05bb 3D060000 		.4byte	0x63d
 2392 05bf 08       		.byte	0x8
 2393 05c0 10       		.uleb128 0x10
 2394 05c1 E6050000 		.4byte	.LASF90
 2395 05c5 05       		.byte	0x5
 2396 05c6 5E02     		.2byte	0x25e
 2397 05c8 D4000000 		.4byte	0xd4
 2398 05cc 0C       		.byte	0xc
 2399 05cd 10       		.uleb128 0x10
 2400 05ce 9D080000 		.4byte	.LASF91
 2401 05d2 05       		.byte	0x5
 2402 05d3 6502     		.2byte	0x265
 2403 05d5 43060000 		.4byte	0x643
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 84


 2404 05d9 10       		.byte	0x10
 2405 05da 10       		.uleb128 0x10
 2406 05db 1F090000 		.4byte	.LASF92
 2407 05df 05       		.byte	0x5
 2408 05e0 6A02     		.2byte	0x26a
 2409 05e2 83000000 		.4byte	0x83
 2410 05e6 14       		.byte	0x14
 2411 05e7 10       		.uleb128 0x10
 2412 05e8 0A040000 		.4byte	.LASF93
 2413 05ec 05       		.byte	0x5
 2414 05ed 7102     		.2byte	0x271
 2415 05ef 77000000 		.4byte	0x77
 2416 05f3 18       		.byte	0x18
 2417 05f4 10       		.uleb128 0x10
 2418 05f5 5C030000 		.4byte	.LASF94
 2419 05f9 05       		.byte	0x5
 2420 05fa 7802     		.2byte	0x278
 2421 05fc 6B000000 		.4byte	0x6b
 2422 0600 1A       		.byte	0x1a
 2423 0601 10       		.uleb128 0x10
 2424 0602 2C090000 		.4byte	.LASF95
 2425 0606 05       		.byte	0x5
 2426 0607 7E02     		.2byte	0x27e
 2427 0609 6B000000 		.4byte	0x6b
 2428 060d 1B       		.byte	0x1b
 2429 060e 10       		.uleb128 0x10
 2430 060f EA040000 		.4byte	.LASF96
 2431 0613 05       		.byte	0x5
 2432 0614 8802     		.2byte	0x288
 2433 0616 6B000000 		.4byte	0x6b
 2434 061a 1C       		.byte	0x1c
 2435 061b 10       		.uleb128 0x10
 2436 061c 83090000 		.4byte	.LASF97
 2437 0620 05       		.byte	0x5
 2438 0621 9002     		.2byte	0x290
 2439 0623 6B000000 		.4byte	0x6b
 2440 0627 1D       		.byte	0x1d
 2441 0628 10       		.uleb128 0x10
 2442 0629 4D030000 		.4byte	.LASF98
 2443 062d 05       		.byte	0x5
 2444 062e 9802     		.2byte	0x298
 2445 0630 49060000 		.4byte	0x649
 2446 0634 20       		.byte	0x20
 2447 0635 00       		.byte	0
 2448 0636 06       		.uleb128 0x6
 2449 0637 04       		.byte	0x4
 2450 0638 3C060000 		.4byte	0x63c
 2451 063c 13       		.uleb128 0x13
 2452 063d 06       		.uleb128 0x6
 2453 063e 04       		.byte	0x4
 2454 063f 93030000 		.4byte	0x393
 2455 0643 06       		.uleb128 0x6
 2456 0644 04       		.byte	0x4
 2457 0645 6B000000 		.4byte	0x6b
 2458 0649 06       		.uleb128 0x6
 2459 064a 04       		.byte	0x4
 2460 064b 4B010000 		.4byte	0x14b
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 85


 2461 064f 04       		.uleb128 0x4
 2462 0650 B0030000 		.4byte	.LASF99
 2463 0654 05       		.byte	0x5
 2464 0655 9902     		.2byte	0x299
 2465 0657 90050000 		.4byte	0x590
 2466 065b 11       		.uleb128 0x11
 2467 065c 48       		.byte	0x48
 2468 065d 05       		.byte	0x5
 2469 065e 9F02     		.2byte	0x29f
 2470 0660 72060000 		.4byte	0x672
 2471 0664 10       		.uleb128 0x10
 2472 0665 B10B0000 		.4byte	.LASF100
 2473 0669 05       		.byte	0x5
 2474 066a A402     		.2byte	0x2a4
 2475 066c 72060000 		.4byte	0x672
 2476 0670 00       		.byte	0
 2477 0671 00       		.byte	0
 2478 0672 0E       		.uleb128 0xe
 2479 0673 4F060000 		.4byte	0x64f
 2480 0677 82060000 		.4byte	0x682
 2481 067b 0F       		.uleb128 0xf
 2482 067c CD000000 		.4byte	0xcd
 2483 0680 01       		.byte	0x1
 2484 0681 00       		.byte	0
 2485 0682 04       		.uleb128 0x4
 2486 0683 48050000 		.4byte	.LASF101
 2487 0687 05       		.byte	0x5
 2488 0688 A502     		.2byte	0x2a5
 2489 068a 5B060000 		.4byte	0x65b
 2490 068e 14       		.uleb128 0x14
 2491 068f 37000000 		.4byte	.LASF172
 2492 0693 01       		.byte	0x1
 2493 0694 5D05     		.2byte	0x55d
 2494 0696 00000000 		.4byte	.LFB8
 2495 069a 38000000 		.4byte	.LFE8-.LFB8
 2496 069e 01       		.uleb128 0x1
 2497 069f 9C       		.byte	0x9c
 2498 06a0 15       		.uleb128 0x15
 2499 06a1 ED030000 		.4byte	.LASF173
 2500 06a5 01       		.byte	0x1
 2501 06a6 3707     		.2byte	0x737
 2502 06a8 77000000 		.4byte	0x77
 2503 06ac 00000000 		.4byte	.LFB16
 2504 06b0 0C000000 		.4byte	.LFE16-.LFB16
 2505 06b4 01       		.uleb128 0x1
 2506 06b5 9C       		.byte	0x9c
 2507 06b6 DB060000 		.4byte	0x6db
 2508 06ba 16       		.uleb128 0x16
 2509 06bb EA080000 		.4byte	.LASF112
 2510 06bf 01       		.byte	0x1
 2511 06c0 3707     		.2byte	0x737
 2512 06c2 DB060000 		.4byte	0x6db
 2513 06c6 00000000 		.4byte	.LLST0
 2514 06ca 17       		.uleb128 0x17
 2515 06cb 9D070000 		.4byte	.LASF105
 2516 06cf 01       		.byte	0x1
 2517 06d0 3907     		.2byte	0x739
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 86


 2518 06d2 83000000 		.4byte	0x83
 2519 06d6 21000000 		.4byte	.LLST1
 2520 06da 00       		.byte	0
 2521 06db 06       		.uleb128 0x6
 2522 06dc 04       		.byte	0x4
 2523 06dd E1060000 		.4byte	0x6e1
 2524 06e1 18       		.uleb128 0x18
 2525 06e2 35020000 		.4byte	0x235
 2526 06e6 19       		.uleb128 0x19
 2527 06e7 8D060000 		.4byte	.LASF174
 2528 06eb 01       		.byte	0x1
 2529 06ec DF07     		.2byte	0x7df
 2530 06ee 03       		.byte	0x3
 2531 06ef 18070000 		.4byte	0x718
 2532 06f3 1A       		.uleb128 0x1a
 2533 06f4 8B040000 		.4byte	.LASF102
 2534 06f8 01       		.byte	0x1
 2535 06f9 E107     		.2byte	0x7e1
 2536 06fb 83000000 		.4byte	0x83
 2537 06ff 1A       		.uleb128 0x1a
 2538 0700 A0020000 		.4byte	.LASF103
 2539 0704 01       		.byte	0x1
 2540 0705 E207     		.2byte	0x7e2
 2541 0707 83000000 		.4byte	0x83
 2542 070b 1A       		.uleb128 0x1a
 2543 070c 46060000 		.4byte	.LASF104
 2544 0710 01       		.byte	0x1
 2545 0711 E407     		.2byte	0x7e4
 2546 0713 83000000 		.4byte	0x83
 2547 0717 00       		.byte	0
 2548 0718 1B       		.uleb128 0x1b
 2549 0719 D4010000 		.4byte	.LASF128
 2550 071d 01       		.byte	0x1
 2551 071e 2706     		.2byte	0x627
 2552 0720 00000000 		.4byte	.LFB10
 2553 0724 38010000 		.4byte	.LFE10-.LFB10
 2554 0728 01       		.uleb128 0x1
 2555 0729 9C       		.byte	0x9c
 2556 072a 75070000 		.4byte	0x775
 2557 072e 17       		.uleb128 0x17
 2558 072f A1090000 		.4byte	.LASF106
 2559 0733 01       		.byte	0x1
 2560 0734 2906     		.2byte	0x629
 2561 0736 83000000 		.4byte	0x83
 2562 073a 45000000 		.4byte	.LLST2
 2563 073e 1C       		.uleb128 0x1c
 2564 073f E6060000 		.4byte	0x6e6
 2565 0743 1C000000 		.4byte	.LBB4
 2566 0747 B4000000 		.4byte	.LBE4-.LBB4
 2567 074b 01       		.byte	0x1
 2568 074c 3C06     		.2byte	0x63c
 2569 074e 1D       		.uleb128 0x1d
 2570 074f 1C000000 		.4byte	.LBB5
 2571 0753 B4000000 		.4byte	.LBE5-.LBB5
 2572 0757 1E       		.uleb128 0x1e
 2573 0758 F3060000 		.4byte	0x6f3
 2574 075c 77000000 		.4byte	.LLST3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 87


 2575 0760 1E       		.uleb128 0x1e
 2576 0761 FF060000 		.4byte	0x6ff
 2577 0765 8A000000 		.4byte	.LLST4
 2578 0769 1E       		.uleb128 0x1e
 2579 076a 0B070000 		.4byte	0x70b
 2580 076e AB000000 		.4byte	.LLST5
 2581 0772 00       		.byte	0
 2582 0773 00       		.byte	0
 2583 0774 00       		.byte	0
 2584 0775 1F       		.uleb128 0x1f
 2585 0776 B7010000 		.4byte	.LASF107
 2586 077a 01       		.byte	0x1
 2587 077b 9807     		.2byte	0x798
 2588 077d 00000000 		.4byte	.LFB17
 2589 0781 90000000 		.4byte	.LFE17-.LFB17
 2590 0785 01       		.uleb128 0x1
 2591 0786 9C       		.byte	0x9c
 2592 0787 AE070000 		.4byte	0x7ae
 2593 078b 20       		.uleb128 0x20
 2594 078c 08000000 		.4byte	.LVL16
 2595 0790 720D0000 		.4byte	0xd72
 2596 0794 9E070000 		.4byte	0x79e
 2597 0798 21       		.uleb128 0x21
 2598 0799 01       		.uleb128 0x1
 2599 079a 50       		.byte	0x50
 2600 079b 01       		.uleb128 0x1
 2601 079c 3A       		.byte	0x3a
 2602 079d 00       		.byte	0
 2603 079e 22       		.uleb128 0x22
 2604 079f 62000000 		.4byte	.LVL18
 2605 07a3 7D0D0000 		.4byte	0xd7d
 2606 07a7 21       		.uleb128 0x21
 2607 07a8 01       		.uleb128 0x1
 2608 07a9 50       		.byte	0x50
 2609 07aa 01       		.uleb128 0x1
 2610 07ab 3A       		.byte	0x3a
 2611 07ac 00       		.byte	0
 2612 07ad 00       		.byte	0
 2613 07ae 23       		.uleb128 0x23
 2614 07af 98000000 		.4byte	.LASF108
 2615 07b3 01       		.byte	0x1
 2616 07b4 94       		.byte	0x94
 2617 07b5 00000000 		.4byte	.LFB1
 2618 07b9 DC010000 		.4byte	.LFE1-.LFB1
 2619 07bd 01       		.uleb128 0x1
 2620 07be 9C       		.byte	0x9c
 2621 07bf 7C080000 		.4byte	0x87c
 2622 07c3 24       		.uleb128 0x24
 2623 07c4 40010000 		.4byte	.LASF109
 2624 07c8 01       		.byte	0x1
 2625 07c9 97       		.byte	0x97
 2626 07ca 6B000000 		.4byte	0x6b
 2627 07ce BE000000 		.4byte	.LLST6
 2628 07d2 24       		.uleb128 0x24
 2629 07d3 A1090000 		.4byte	.LASF106
 2630 07d7 01       		.byte	0x1
 2631 07d8 98       		.byte	0x98
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 88


 2632 07d9 83000000 		.4byte	0x83
 2633 07dd 08010000 		.4byte	.LLST7
 2634 07e1 25       		.uleb128 0x25
 2635 07e2 5C000000 		.4byte	.LVL19
 2636 07e6 880D0000 		.4byte	0xd88
 2637 07ea 25       		.uleb128 0x25
 2638 07eb 70000000 		.4byte	.LVL23
 2639 07ef 930D0000 		.4byte	0xd93
 2640 07f3 25       		.uleb128 0x25
 2641 07f4 82000000 		.4byte	.LVL24
 2642 07f8 880D0000 		.4byte	0xd88
 2643 07fc 25       		.uleb128 0x25
 2644 07fd 96000000 		.4byte	.LVL28
 2645 0801 930D0000 		.4byte	0xd93
 2646 0805 25       		.uleb128 0x25
 2647 0806 CA000000 		.4byte	.LVL29
 2648 080a 9E0D0000 		.4byte	0xd9e
 2649 080e 25       		.uleb128 0x25
 2650 080f CE000000 		.4byte	.LVL30
 2651 0813 880D0000 		.4byte	0xd88
 2652 0817 25       		.uleb128 0x25
 2653 0818 DC000000 		.4byte	.LVL33
 2654 081c 930D0000 		.4byte	0xd93
 2655 0820 25       		.uleb128 0x25
 2656 0821 E0000000 		.4byte	.LVL34
 2657 0825 880D0000 		.4byte	0xd88
 2658 0829 25       		.uleb128 0x25
 2659 082a EC000000 		.4byte	.LVL37
 2660 082e 930D0000 		.4byte	0xd93
 2661 0832 25       		.uleb128 0x25
 2662 0833 F0000000 		.4byte	.LVL38
 2663 0837 880D0000 		.4byte	0xd88
 2664 083b 25       		.uleb128 0x25
 2665 083c 04010000 		.4byte	.LVL42
 2666 0840 930D0000 		.4byte	0xd93
 2667 0844 25       		.uleb128 0x25
 2668 0845 08010000 		.4byte	.LVL43
 2669 0849 880D0000 		.4byte	0xd88
 2670 084d 25       		.uleb128 0x25
 2671 084e 1A010000 		.4byte	.LVL47
 2672 0852 930D0000 		.4byte	0xd93
 2673 0856 25       		.uleb128 0x25
 2674 0857 22010000 		.4byte	.LVL48
 2675 085b A90D0000 		.4byte	0xda9
 2676 085f 25       		.uleb128 0x25
 2677 0860 26010000 		.4byte	.LVL49
 2678 0864 B40D0000 		.4byte	0xdb4
 2679 0868 22       		.uleb128 0x22
 2680 0869 2C010000 		.4byte	.LVL50
 2681 086d BF0D0000 		.4byte	0xdbf
 2682 0871 21       		.uleb128 0x21
 2683 0872 01       		.uleb128 0x1
 2684 0873 50       		.byte	0x50
 2685 0874 05       		.uleb128 0x5
 2686 0875 03       		.byte	0x3
 2687 0876 00000000 		.4byte	CapSense_CSXScanISR
 2688 087a 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 89


 2689 087b 00       		.byte	0
 2690 087c 26       		.uleb128 0x26
 2691 087d AF000000 		.4byte	.LASF110
 2692 0881 01       		.byte	0x1
 2693 0882 6603     		.2byte	0x366
 2694 0884 00000000 		.4byte	.LFB6
 2695 0888 1C000000 		.4byte	.LFE6-.LFB6
 2696 088c 01       		.uleb128 0x1
 2697 088d 9C       		.byte	0x9c
 2698 088e AF080000 		.4byte	0x8af
 2699 0892 20       		.uleb128 0x20
 2700 0893 12000000 		.4byte	.LVL51
 2701 0897 CA0D0000 		.4byte	0xdca
 2702 089b A5080000 		.4byte	0x8a5
 2703 089f 21       		.uleb128 0x21
 2704 08a0 01       		.uleb128 0x1
 2705 08a1 50       		.byte	0x50
 2706 08a2 01       		.uleb128 0x1
 2707 08a3 3A       		.byte	0x3a
 2708 08a4 00       		.byte	0
 2709 08a5 25       		.uleb128 0x25
 2710 08a6 16000000 		.4byte	.LVL52
 2711 08aa 18070000 		.4byte	0x718
 2712 08ae 00       		.byte	0
 2713 08af 1F       		.uleb128 0x1f
 2714 08b0 13060000 		.4byte	.LASF111
 2715 08b4 01       		.byte	0x1
 2716 08b5 B205     		.2byte	0x5b2
 2717 08b7 00000000 		.4byte	.LFB9
 2718 08bb D4000000 		.4byte	.LFE9-.LFB9
 2719 08bf 01       		.uleb128 0x1
 2720 08c0 9C       		.byte	0x9c
 2721 08c1 69090000 		.4byte	0x969
 2722 08c5 16       		.uleb128 0x16
 2723 08c6 6D0B0000 		.4byte	.LASF113
 2724 08ca 01       		.byte	0x1
 2725 08cb B205     		.2byte	0x5b2
 2726 08cd 83000000 		.4byte	0x83
 2727 08d1 94010000 		.4byte	.LLST8
 2728 08d5 16       		.uleb128 0x16
 2729 08d6 91030000 		.4byte	.LASF114
 2730 08da 01       		.byte	0x1
 2731 08db B205     		.2byte	0x5b2
 2732 08dd 77000000 		.4byte	0x77
 2733 08e1 BE010000 		.4byte	.LLST9
 2734 08e5 17       		.uleb128 0x17
 2735 08e6 D9070000 		.4byte	.LASF115
 2736 08ea 01       		.byte	0x1
 2737 08eb B505     		.2byte	0x5b5
 2738 08ed 83000000 		.4byte	0x83
 2739 08f1 DF010000 		.4byte	.LLST10
 2740 08f5 17       		.uleb128 0x17
 2741 08f6 3B040000 		.4byte	.LASF116
 2742 08fa 01       		.byte	0x1
 2743 08fb B705     		.2byte	0x5b7
 2744 08fd 83000000 		.4byte	0x83
 2745 0901 0E020000 		.4byte	.LLST11
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 90


 2746 0905 17       		.uleb128 0x17
 2747 0906 F2080000 		.4byte	.LASF117
 2748 090a 01       		.byte	0x1
 2749 090b B905     		.2byte	0x5b9
 2750 090d 83000000 		.4byte	0x83
 2751 0911 21020000 		.4byte	.LLST12
 2752 0915 17       		.uleb128 0x17
 2753 0916 F6010000 		.4byte	.LASF118
 2754 091a 01       		.byte	0x1
 2755 091b BC05     		.2byte	0x5bc
 2756 091d 6B000000 		.4byte	0x6b
 2757 0921 57020000 		.4byte	.LLST13
 2758 0925 17       		.uleb128 0x17
 2759 0926 10010000 		.4byte	.LASF119
 2760 092a 01       		.byte	0x1
 2761 092b BE05     		.2byte	0x5be
 2762 092d 6B000000 		.4byte	0x6b
 2763 0931 8D020000 		.4byte	.LLST14
 2764 0935 20       		.uleb128 0x20
 2765 0936 28000000 		.4byte	.LVL56
 2766 093a A0060000 		.4byte	0x6a0
 2767 093e 4A090000 		.4byte	0x94a
 2768 0942 21       		.uleb128 0x21
 2769 0943 01       		.uleb128 0x1
 2770 0944 50       		.byte	0x50
 2771 0945 03       		.uleb128 0x3
 2772 0946 74       		.byte	0x74
 2773 0947 04       		.sleb128 4
 2774 0948 06       		.byte	0x6
 2775 0949 00       		.byte	0
 2776 094a 20       		.uleb128 0x20
 2777 094b 7C000000 		.4byte	.LVL66
 2778 094f D50D0000 		.4byte	0xdd5
 2779 0953 5F090000 		.4byte	0x95f
 2780 0957 21       		.uleb128 0x21
 2781 0958 01       		.uleb128 0x1
 2782 0959 50       		.byte	0x50
 2783 095a 03       		.uleb128 0x3
 2784 095b 91       		.byte	0x91
 2785 095c 64       		.sleb128 -28
 2786 095d 06       		.byte	0x6
 2787 095e 00       		.byte	0
 2788 095f 25       		.uleb128 0x25
 2789 0960 80000000 		.4byte	.LVL67
 2790 0964 E00D0000 		.4byte	0xde0
 2791 0968 00       		.byte	0
 2792 0969 26       		.uleb128 0x26
 2793 096a 37030000 		.4byte	.LASF120
 2794 096e 01       		.byte	0x1
 2795 096f 8106     		.2byte	0x681
 2796 0971 00000000 		.4byte	.LFB11
 2797 0975 20000000 		.4byte	.LFE11-.LFB11
 2798 0979 01       		.uleb128 0x1
 2799 097a 9C       		.byte	0x9c
 2800 097b A0090000 		.4byte	0x9a0
 2801 097f 16       		.uleb128 0x16
 2802 0980 3A010000 		.4byte	.LASF121
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 91


 2803 0984 01       		.byte	0x1
 2804 0985 8106     		.2byte	0x681
 2805 0987 A0090000 		.4byte	0x9a0
 2806 098b C3020000 		.4byte	.LLST15
 2807 098f 17       		.uleb128 0x17
 2808 0990 31010000 		.4byte	.LASF122
 2809 0994 01       		.byte	0x1
 2810 0995 8306     		.2byte	0x683
 2811 0997 83000000 		.4byte	0x83
 2812 099b E4020000 		.4byte	.LLST16
 2813 099f 00       		.byte	0
 2814 09a0 06       		.uleb128 0x6
 2815 09a1 04       		.byte	0x4
 2816 09a2 A6090000 		.4byte	0x9a6
 2817 09a6 18       		.uleb128 0x18
 2818 09a7 84050000 		.4byte	0x584
 2819 09ab 26       		.uleb128 0x26
 2820 09ac 57010000 		.4byte	.LASF123
 2821 09b0 01       		.byte	0x1
 2822 09b1 A306     		.2byte	0x6a3
 2823 09b3 00000000 		.4byte	.LFB12
 2824 09b7 20000000 		.4byte	.LFE12-.LFB12
 2825 09bb 01       		.uleb128 0x1
 2826 09bc 9C       		.byte	0x9c
 2827 09bd E2090000 		.4byte	0x9e2
 2828 09c1 16       		.uleb128 0x16
 2829 09c2 97080000 		.4byte	.LASF124
 2830 09c6 01       		.byte	0x1
 2831 09c7 A306     		.2byte	0x6a3
 2832 09c9 A0090000 		.4byte	0x9a0
 2833 09cd 18030000 		.4byte	.LLST17
 2834 09d1 17       		.uleb128 0x17
 2835 09d2 31010000 		.4byte	.LASF122
 2836 09d6 01       		.byte	0x1
 2837 09d7 A506     		.2byte	0x6a5
 2838 09d9 83000000 		.4byte	0x83
 2839 09dd 39030000 		.4byte	.LLST18
 2840 09e1 00       		.byte	0
 2841 09e2 26       		.uleb128 0x26
 2842 09e3 AB090000 		.4byte	.LASF125
 2843 09e7 01       		.byte	0x1
 2844 09e8 8502     		.2byte	0x285
 2845 09ea 00000000 		.4byte	.LFB5
 2846 09ee 6C000000 		.4byte	.LFE5-.LFB5
 2847 09f2 01       		.uleb128 0x1
 2848 09f3 9C       		.byte	0x9c
 2849 09f4 270A0000 		.4byte	0xa27
 2850 09f8 25       		.uleb128 0x25
 2851 09f9 2E000000 		.4byte	.LVL87
 2852 09fd 69090000 		.4byte	0x969
 2853 0a01 25       		.uleb128 0x25
 2854 0a02 34000000 		.4byte	.LVL88
 2855 0a06 AB090000 		.4byte	0x9ab
 2856 0a0a 20       		.uleb128 0x20
 2857 0a0b 4A000000 		.4byte	.LVL89
 2858 0a0f CA0D0000 		.4byte	0xdca
 2859 0a13 1D0A0000 		.4byte	0xa1d
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 92


 2860 0a17 21       		.uleb128 0x21
 2861 0a18 01       		.uleb128 0x1
 2862 0a19 50       		.byte	0x50
 2863 0a1a 01       		.uleb128 0x1
 2864 0a1b 3A       		.byte	0x3a
 2865 0a1c 00       		.byte	0
 2866 0a1d 25       		.uleb128 0x25
 2867 0a1e 4E000000 		.4byte	.LVL90
 2868 0a22 18070000 		.4byte	0x718
 2869 0a26 00       		.byte	0
 2870 0a27 26       		.uleb128 0x26
 2871 0a28 F2040000 		.4byte	.LASF126
 2872 0a2c 01       		.byte	0x1
 2873 0a2d C606     		.2byte	0x6c6
 2874 0a2f 00000000 		.4byte	.LFB13
 2875 0a33 0C000000 		.4byte	.LFE13-.LFB13
 2876 0a37 01       		.uleb128 0x1
 2877 0a38 9C       		.byte	0x9c
 2878 0a39 5A0A0000 		.4byte	0xa5a
 2879 0a3d 27       		.uleb128 0x27
 2880 0a3e 3A010000 		.4byte	.LASF121
 2881 0a42 01       		.byte	0x1
 2882 0a43 C606     		.2byte	0x6c6
 2883 0a45 A0090000 		.4byte	0x9a0
 2884 0a49 01       		.uleb128 0x1
 2885 0a4a 50       		.byte	0x50
 2886 0a4b 28       		.uleb128 0x28
 2887 0a4c 31010000 		.4byte	.LASF122
 2888 0a50 01       		.byte	0x1
 2889 0a51 C806     		.2byte	0x6c8
 2890 0a53 83000000 		.4byte	0x83
 2891 0a57 01       		.uleb128 0x1
 2892 0a58 53       		.byte	0x53
 2893 0a59 00       		.byte	0
 2894 0a5a 26       		.uleb128 0x26
 2895 0a5b D4030000 		.4byte	.LASF127
 2896 0a5f 01       		.byte	0x1
 2897 0a60 E506     		.2byte	0x6e5
 2898 0a62 00000000 		.4byte	.LFB14
 2899 0a66 2E000000 		.4byte	.LFE14-.LFB14
 2900 0a6a 01       		.uleb128 0x1
 2901 0a6b 9C       		.byte	0x9c
 2902 0a6c 8F0A0000 		.4byte	0xa8f
 2903 0a70 27       		.uleb128 0x27
 2904 0a71 97080000 		.4byte	.LASF124
 2905 0a75 01       		.byte	0x1
 2906 0a76 E506     		.2byte	0x6e5
 2907 0a78 A0090000 		.4byte	0x9a0
 2908 0a7c 01       		.uleb128 0x1
 2909 0a7d 50       		.byte	0x50
 2910 0a7e 17       		.uleb128 0x17
 2911 0a7f 31010000 		.4byte	.LASF122
 2912 0a83 01       		.byte	0x1
 2913 0a84 E706     		.2byte	0x6e7
 2914 0a86 83000000 		.4byte	0x83
 2915 0a8a 62030000 		.4byte	.LLST19
 2916 0a8e 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 93


 2917 0a8f 29       		.uleb128 0x29
 2918 0a90 03090000 		.4byte	.LASF129
 2919 0a94 01       		.byte	0x1
 2920 0a95 9303     		.2byte	0x393
 2921 0a97 00000000 		.4byte	.LFB7
 2922 0a9b DC000000 		.4byte	.LFE7-.LFB7
 2923 0a9f 01       		.uleb128 0x1
 2924 0aa0 9C       		.byte	0x9c
 2925 0aa1 F70A0000 		.4byte	0xaf7
 2926 0aa5 25       		.uleb128 0x25
 2927 0aa6 1C000000 		.4byte	.LVL103
 2928 0aaa 270A0000 		.4byte	0xa27
 2929 0aae 25       		.uleb128 0x25
 2930 0aaf 3E000000 		.4byte	.LVL104
 2931 0ab3 69090000 		.4byte	0x969
 2932 0ab7 25       		.uleb128 0x25
 2933 0ab8 4A000000 		.4byte	.LVL105
 2934 0abc 18070000 		.4byte	0x718
 2935 0ac0 25       		.uleb128 0x25
 2936 0ac1 62000000 		.4byte	.LVL106
 2937 0ac5 5A0A0000 		.4byte	0xa5a
 2938 0ac9 25       		.uleb128 0x25
 2939 0aca 6C000000 		.4byte	.LVL107
 2940 0ace AB090000 		.4byte	0x9ab
 2941 0ad2 25       		.uleb128 0x25
 2942 0ad3 88000000 		.4byte	.LVL108
 2943 0ad7 69090000 		.4byte	0x969
 2944 0adb 25       		.uleb128 0x25
 2945 0adc 94000000 		.4byte	.LVL109
 2946 0ae0 18070000 		.4byte	0x718
 2947 0ae4 25       		.uleb128 0x25
 2948 0ae5 9E000000 		.4byte	.LVL110
 2949 0ae9 5A0A0000 		.4byte	0xa5a
 2950 0aed 25       		.uleb128 0x25
 2951 0aee AA000000 		.4byte	.LVL111
 2952 0af2 EB0D0000 		.4byte	0xdeb
 2953 0af6 00       		.byte	0
 2954 0af7 26       		.uleb128 0x26
 2955 0af8 C4050000 		.4byte	.LASF130
 2956 0afc 01       		.byte	0x1
 2957 0afd 3B01     		.2byte	0x13b
 2958 0aff 00000000 		.4byte	.LFB2
 2959 0b03 24000000 		.4byte	.LFE2-.LFB2
 2960 0b07 01       		.uleb128 0x1
 2961 0b08 9C       		.byte	0x9c
 2962 0b09 200B0000 		.4byte	0xb20
 2963 0b0d 25       		.uleb128 0x25
 2964 0b0e 12000000 		.4byte	.LVL112
 2965 0b12 270A0000 		.4byte	0xa27
 2966 0b16 25       		.uleb128 0x25
 2967 0b17 18000000 		.4byte	.LVL113
 2968 0b1b 5A0A0000 		.4byte	0xa5a
 2969 0b1f 00       		.byte	0
 2970 0b20 26       		.uleb128 0x26
 2971 0b21 B8020000 		.4byte	.LASF131
 2972 0b25 01       		.byte	0x1
 2973 0b26 9601     		.2byte	0x196
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 94


 2974 0b28 00000000 		.4byte	.LFB3
 2975 0b2c 6C000000 		.4byte	.LFE3-.LFB3
 2976 0b30 01       		.uleb128 0x1
 2977 0b31 9C       		.byte	0x9c
 2978 0b32 B00B0000 		.4byte	0xbb0
 2979 0b36 16       		.uleb128 0x16
 2980 0b37 6D0B0000 		.4byte	.LASF113
 2981 0b3b 01       		.byte	0x1
 2982 0b3c 9601     		.2byte	0x196
 2983 0b3e 83000000 		.4byte	0x83
 2984 0b42 8B030000 		.4byte	.LLST20
 2985 0b46 17       		.uleb128 0x17
 2986 0b47 C60A0000 		.4byte	.LASF132
 2987 0b4b 01       		.byte	0x1
 2988 0b4c 9901     		.2byte	0x199
 2989 0b4e B00B0000 		.4byte	0xbb0
 2990 0b52 B7030000 		.4byte	.LLST21
 2991 0b56 17       		.uleb128 0x17
 2992 0b57 A1090000 		.4byte	.LASF106
 2993 0b5b 01       		.byte	0x1
 2994 0b5c 9C01     		.2byte	0x19c
 2995 0b5e 83000000 		.4byte	0x83
 2996 0b62 CA030000 		.4byte	.LLST22
 2997 0b66 17       		.uleb128 0x17
 2998 0b67 65030000 		.4byte	.LASF133
 2999 0b6b 01       		.byte	0x1
 3000 0b6c 9D01     		.2byte	0x19d
 3001 0b6e 83000000 		.4byte	0x83
 3002 0b72 FA030000 		.4byte	.LLST23
 3003 0b76 20       		.uleb128 0x20
 3004 0b77 10000000 		.4byte	.LVL116
 3005 0b7b F60D0000 		.4byte	0xdf6
 3006 0b7f 890B0000 		.4byte	0xb89
 3007 0b83 21       		.uleb128 0x21
 3008 0b84 01       		.uleb128 0x1
 3009 0b85 50       		.byte	0x50
 3010 0b86 01       		.uleb128 0x1
 3011 0b87 32       		.byte	0x32
 3012 0b88 00       		.byte	0
 3013 0b89 25       		.uleb128 0x25
 3014 0b8a 14000000 		.4byte	.LVL117
 3015 0b8e F70A0000 		.4byte	0xaf7
 3016 0b92 20       		.uleb128 0x20
 3017 0b93 32000000 		.4byte	.LVL121
 3018 0b97 A0060000 		.4byte	0x6a0
 3019 0b9b A60B0000 		.4byte	0xba6
 3020 0b9f 21       		.uleb128 0x21
 3021 0ba0 01       		.uleb128 0x1
 3022 0ba1 50       		.byte	0x50
 3023 0ba2 02       		.uleb128 0x2
 3024 0ba3 75       		.byte	0x75
 3025 0ba4 00       		.sleb128 0
 3026 0ba5 00       		.byte	0
 3027 0ba6 25       		.uleb128 0x25
 3028 0ba7 4E000000 		.4byte	.LVL128
 3029 0bab A90D0000 		.4byte	0xda9
 3030 0baf 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 95


 3031 0bb0 06       		.uleb128 0x6
 3032 0bb1 04       		.byte	0x4
 3033 0bb2 35020000 		.4byte	0x235
 3034 0bb6 1F       		.uleb128 0x1f
 3035 0bb7 56060000 		.4byte	.LASF134
 3036 0bbb 01       		.byte	0x1
 3037 0bbc 0402     		.2byte	0x204
 3038 0bbe 00000000 		.4byte	.LFB4
 3039 0bc2 84000000 		.4byte	.LFE4-.LFB4
 3040 0bc6 01       		.uleb128 0x1
 3041 0bc7 9C       		.byte	0x9c
 3042 0bc8 340C0000 		.4byte	0xc34
 3043 0bcc 16       		.uleb128 0x16
 3044 0bcd 6D0B0000 		.4byte	.LASF113
 3045 0bd1 01       		.byte	0x1
 3046 0bd2 0402     		.2byte	0x204
 3047 0bd4 83000000 		.4byte	0x83
 3048 0bd8 25040000 		.4byte	.LLST24
 3049 0bdc 16       		.uleb128 0x16
 3050 0bdd CB010000 		.4byte	.LASF135
 3051 0be1 01       		.byte	0x1
 3052 0be2 0402     		.2byte	0x204
 3053 0be4 83000000 		.4byte	0x83
 3054 0be8 46040000 		.4byte	.LLST25
 3055 0bec 17       		.uleb128 0x17
 3056 0bed B0020000 		.4byte	.LASF136
 3057 0bf1 01       		.byte	0x1
 3058 0bf2 0602     		.2byte	0x206
 3059 0bf4 83000000 		.4byte	0x83
 3060 0bf8 72040000 		.4byte	.LLST26
 3061 0bfc 17       		.uleb128 0x17
 3062 0bfd 4F010000 		.4byte	.LASF137
 3063 0c01 01       		.byte	0x1
 3064 0c02 0702     		.2byte	0x207
 3065 0c04 83000000 		.4byte	0x83
 3066 0c08 85040000 		.4byte	.LLST27
 3067 0c0c 20       		.uleb128 0x20
 3068 0c0d 08000000 		.4byte	.LVL132
 3069 0c11 200B0000 		.4byte	0xb20
 3070 0c15 210C0000 		.4byte	0xc21
 3071 0c19 21       		.uleb128 0x21
 3072 0c1a 01       		.uleb128 0x1
 3073 0c1b 50       		.byte	0x50
 3074 0c1c 03       		.uleb128 0x3
 3075 0c1d F3       		.byte	0xf3
 3076 0c1e 01       		.uleb128 0x1
 3077 0c1f 50       		.byte	0x50
 3078 0c20 00       		.byte	0
 3079 0c21 25       		.uleb128 0x25
 3080 0c22 58000000 		.4byte	.LVL139
 3081 0c26 69090000 		.4byte	0x969
 3082 0c2a 25       		.uleb128 0x25
 3083 0c2b 5E000000 		.4byte	.LVL140
 3084 0c2f AB090000 		.4byte	0x9ab
 3085 0c33 00       		.byte	0
 3086 0c34 2A       		.uleb128 0x2a
 3087 0c35 0E070000 		.4byte	.LASF175
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 96


 3088 0c39 01       		.byte	0x1
 3089 0c3a 0C07     		.2byte	0x70c
 3090 0c3c 83000000 		.4byte	0x83
 3091 0c40 00000000 		.4byte	.LFB15
 3092 0c44 14000000 		.4byte	.LFE15-.LFB15
 3093 0c48 01       		.uleb128 0x1
 3094 0c49 9C       		.byte	0x9c
 3095 0c4a 7B0C0000 		.4byte	0xc7b
 3096 0c4e 16       		.uleb128 0x16
 3097 0c4f 6D0B0000 		.4byte	.LASF113
 3098 0c53 01       		.byte	0x1
 3099 0c54 0C07     		.2byte	0x70c
 3100 0c56 83000000 		.4byte	0x83
 3101 0c5a A3040000 		.4byte	.LLST28
 3102 0c5e 28       		.uleb128 0x28
 3103 0c5f 88080000 		.4byte	.LASF138
 3104 0c63 01       		.byte	0x1
 3105 0c64 0E07     		.2byte	0x70e
 3106 0c66 83000000 		.4byte	0x83
 3107 0c6a 01       		.uleb128 0x1
 3108 0c6b 50       		.byte	0x50
 3109 0c6c 28       		.uleb128 0x28
 3110 0c6d EE010000 		.4byte	.LASF139
 3111 0c71 01       		.byte	0x1
 3112 0c72 1207     		.2byte	0x712
 3113 0c74 B00B0000 		.4byte	0xbb0
 3114 0c78 01       		.uleb128 0x1
 3115 0c79 53       		.byte	0x53
 3116 0c7a 00       		.byte	0
 3117 0c7b 2B       		.uleb128 0x2b
 3118 0c7c E3060000 		.4byte	.LASF140
 3119 0c80 01       		.byte	0x1
 3120 0c81 49       		.byte	0x49
 3121 0c82 A0090000 		.4byte	0x9a0
 3122 0c86 05       		.uleb128 0x5
 3123 0c87 03       		.byte	0x3
 3124 0c88 0C000000 		.4byte	CapSense_curTxIOPtr
 3125 0c8c 2B       		.uleb128 0x2b
 3126 0c8d 16050000 		.4byte	.LASF141
 3127 0c91 01       		.byte	0x1
 3128 0c92 4B       		.byte	0x4b
 3129 0c93 A0090000 		.4byte	0x9a0
 3130 0c97 05       		.uleb128 0x5
 3131 0c98 03       		.byte	0x3
 3132 0c99 08000000 		.4byte	CapSense_curRxIOPtr
 3133 0c9d 2B       		.uleb128 0x2b
 3134 0c9e F6050000 		.4byte	.LASF142
 3135 0ca2 01       		.byte	0x1
 3136 0ca3 4D       		.byte	0x4d
 3137 0ca4 77000000 		.4byte	0x77
 3138 0ca8 05       		.uleb128 0x5
 3139 0ca9 03       		.byte	0x3
 3140 0caa 06000000 		.4byte	CapSense_curWdgtTotalRx
 3141 0cae 2B       		.uleb128 0x2b
 3142 0caf 7C070000 		.4byte	.LASF143
 3143 0cb3 01       		.byte	0x1
 3144 0cb4 4F       		.byte	0x4f
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 97


 3145 0cb5 77000000 		.4byte	0x77
 3146 0cb9 05       		.uleb128 0x5
 3147 0cba 03       		.byte	0x3
 3148 0cbb 04000000 		.4byte	CapSense_curWdgtTotalTx
 3149 0cbf 2B       		.uleb128 0x2b
 3150 0cc0 19000000 		.4byte	.LASF144
 3151 0cc4 01       		.byte	0x1
 3152 0cc5 51       		.byte	0x51
 3153 0cc6 77000000 		.4byte	0x77
 3154 0cca 05       		.uleb128 0x5
 3155 0ccb 03       		.byte	0x3
 3156 0ccc 10000000 		.4byte	CapSense_eleCsxDisconnectFlag
 3157 0cd0 2C       		.uleb128 0x2c
 3158 0cd1 6C050000 		.4byte	.LASF145
 3159 0cd5 05       		.byte	0x5
 3160 0cd6 3904     		.2byte	0x439
 3161 0cd8 F3040000 		.4byte	0x4f3
 3162 0cdc 2C       		.uleb128 0x2c
 3163 0cdd 23080000 		.4byte	.LASF146
 3164 0ce1 05       		.byte	0x5
 3165 0ce2 3A04     		.2byte	0x43a
 3166 0ce4 E80C0000 		.4byte	0xce8
 3167 0ce8 18       		.uleb128 0x18
 3168 0ce9 82060000 		.4byte	0x682
 3169 0ced 2D       		.uleb128 0x2d
 3170 0cee 2F060000 		.4byte	.LASF147
 3171 0cf2 01       		.byte	0x1
 3172 0cf3 40       		.byte	0x40
 3173 0cf4 A9000000 		.4byte	0xa9
 3174 0cf8 05       		.uleb128 0x5
 3175 0cf9 03       		.byte	0x3
 3176 0cfa 00000000 		.4byte	CapSense_csxScanPeriod
 3177 0cfe 2D       		.uleb128 0x2d
 3178 0cff 33050000 		.4byte	.LASF148
 3179 0d03 01       		.byte	0x1
 3180 0d04 42       		.byte	0x42
 3181 0d05 A9000000 		.4byte	0xa9
 3182 0d09 05       		.uleb128 0x5
 3183 0d0a 03       		.byte	0x3
 3184 0d0b 00000000 		.4byte	CapSense_csxRawCount
 3185 0d0f 2D       		.uleb128 0x2d
 3186 0d10 F5000000 		.4byte	.LASF149
 3187 0d14 01       		.byte	0x1
 3188 0d15 73       		.byte	0x73
 3189 0d16 BF000000 		.4byte	0xbf
 3190 0d1a 05       		.uleb128 0x5
 3191 0d1b 03       		.byte	0x3
 3192 0d1c 00000000 		.4byte	CapSense_CSXPostScanApiPtr
 3193 0d20 2E       		.uleb128 0x2e
 3194 0d21 4F0B0000 		.4byte	.LASF150
 3195 0d25 06       		.byte	0x6
 3196 0d26 9D       		.byte	0x9d
 3197 0d27 A4000000 		.4byte	0xa4
 3198 0d2b 2E       		.uleb128 0x2e
 3199 0d2c F9020000 		.4byte	.LASF151
 3200 0d30 06       		.byte	0x6
 3201 0d31 9E       		.byte	0x9e
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 98


 3202 0d32 A4000000 		.4byte	0xa4
 3203 0d36 2E       		.uleb128 0x2e
 3204 0d37 760B0000 		.4byte	.LASF152
 3205 0d3b 06       		.byte	0x6
 3206 0d3c 9F       		.byte	0x9f
 3207 0d3d 6B000000 		.4byte	0x6b
 3208 0d41 2E       		.uleb128 0x2e
 3209 0d42 750A0000 		.4byte	.LASF153
 3210 0d46 06       		.byte	0x6
 3211 0d47 A1       		.byte	0xa1
 3212 0d48 3D060000 		.4byte	0x63d
 3213 0d4c 2E       		.uleb128 0x2e
 3214 0d4d 970A0000 		.4byte	.LASF154
 3215 0d51 06       		.byte	0x6
 3216 0d52 A8       		.byte	0xa8
 3217 0d53 570D0000 		.4byte	0xd57
 3218 0d57 18       		.uleb128 0x18
 3219 0d58 6B000000 		.4byte	0x6b
 3220 0d5c 2E       		.uleb128 0x2e
 3221 0d5d 00000000 		.4byte	.LASF155
 3222 0d61 06       		.byte	0x6
 3223 0d62 AE       		.byte	0xae
 3224 0d63 670D0000 		.4byte	0xd67
 3225 0d67 06       		.uleb128 0x6
 3226 0d68 04       		.byte	0x4
 3227 0d69 6D0D0000 		.4byte	0xd6d
 3228 0d6d 18       		.uleb128 0x18
 3229 0d6e 4F060000 		.4byte	0x64f
 3230 0d72 2F       		.uleb128 0x2f
 3231 0d73 6D010000 		.4byte	.LASF156
 3232 0d77 6D010000 		.4byte	.LASF156
 3233 0d7b 07       		.byte	0x7
 3234 0d7c C5       		.byte	0xc5
 3235 0d7d 2F       		.uleb128 0x2f
 3236 0d7e 95090000 		.4byte	.LASF157
 3237 0d82 95090000 		.4byte	.LASF157
 3238 0d86 07       		.byte	0x7
 3239 0d87 C3       		.byte	0xc3
 3240 0d88 2F       		.uleb128 0x2f
 3241 0d89 E0090000 		.4byte	.LASF158
 3242 0d8d E0090000 		.4byte	.LASF158
 3243 0d91 07       		.byte	0x7
 3244 0d92 E5       		.byte	0xe5
 3245 0d93 2F       		.uleb128 0x2f
 3246 0d94 51040000 		.4byte	.LASF159
 3247 0d98 51040000 		.4byte	.LASF159
 3248 0d9c 07       		.byte	0x7
 3249 0d9d E6       		.byte	0xe6
 3250 0d9e 2F       		.uleb128 0x2f
 3251 0d9f 74000000 		.4byte	.LASF160
 3252 0da3 74000000 		.4byte	.LASF160
 3253 0da7 06       		.byte	0x6
 3254 0da8 93       		.byte	0x93
 3255 0da9 2F       		.uleb128 0x2f
 3256 0daa 7A010000 		.4byte	.LASF161
 3257 0dae 7A010000 		.4byte	.LASF161
 3258 0db2 06       		.byte	0x6
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 99


 3259 0db3 68       		.byte	0x68
 3260 0db4 2F       		.uleb128 0x2f
 3261 0db5 54000000 		.4byte	.LASF162
 3262 0db9 54000000 		.4byte	.LASF162
 3263 0dbd 06       		.byte	0x6
 3264 0dbe 6D       		.byte	0x6d
 3265 0dbf 2F       		.uleb128 0x2f
 3266 0dc0 2C070000 		.4byte	.LASF163
 3267 0dc4 2C070000 		.4byte	.LASF163
 3268 0dc8 06       		.byte	0x6
 3269 0dc9 6B       		.byte	0x6b
 3270 0dca 2F       		.uleb128 0x2f
 3271 0dcb D0020000 		.4byte	.LASF164
 3272 0dcf D0020000 		.4byte	.LASF164
 3273 0dd3 07       		.byte	0x7
 3274 0dd4 DA       		.byte	0xda
 3275 0dd5 2F       		.uleb128 0x2f
 3276 0dd6 C4070000 		.4byte	.LASF165
 3277 0dda C4070000 		.4byte	.LASF165
 3278 0dde 06       		.byte	0x6
 3279 0ddf 49       		.byte	0x49
 3280 0de0 2F       		.uleb128 0x2f
 3281 0de1 5E050000 		.4byte	.LASF166
 3282 0de5 5E050000 		.4byte	.LASF166
 3283 0de9 06       		.byte	0x6
 3284 0dea 4A       		.byte	0x4a
 3285 0deb 2F       		.uleb128 0x2f
 3286 0dec D80A0000 		.4byte	.LASF167
 3287 0df0 D80A0000 		.4byte	.LASF167
 3288 0df4 06       		.byte	0x6
 3289 0df5 6C       		.byte	0x6c
 3290 0df6 2F       		.uleb128 0x2f
 3291 0df7 C3090000 		.4byte	.LASF168
 3292 0dfb C3090000 		.4byte	.LASF168
 3293 0dff 06       		.byte	0x6
 3294 0e00 6E       		.byte	0x6e
 3295 0e01 00       		.byte	0
 3296              		.section	.debug_abbrev,"",%progbits
 3297              	.Ldebug_abbrev0:
 3298 0000 01       		.uleb128 0x1
 3299 0001 11       		.uleb128 0x11
 3300 0002 01       		.byte	0x1
 3301 0003 25       		.uleb128 0x25
 3302 0004 0E       		.uleb128 0xe
 3303 0005 13       		.uleb128 0x13
 3304 0006 0B       		.uleb128 0xb
 3305 0007 03       		.uleb128 0x3
 3306 0008 0E       		.uleb128 0xe
 3307 0009 1B       		.uleb128 0x1b
 3308 000a 0E       		.uleb128 0xe
 3309 000b 55       		.uleb128 0x55
 3310 000c 17       		.uleb128 0x17
 3311 000d 11       		.uleb128 0x11
 3312 000e 01       		.uleb128 0x1
 3313 000f 10       		.uleb128 0x10
 3314 0010 17       		.uleb128 0x17
 3315 0011 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 100


 3316 0012 00       		.byte	0
 3317 0013 02       		.uleb128 0x2
 3318 0014 24       		.uleb128 0x24
 3319 0015 00       		.byte	0
 3320 0016 0B       		.uleb128 0xb
 3321 0017 0B       		.uleb128 0xb
 3322 0018 3E       		.uleb128 0x3e
 3323 0019 0B       		.uleb128 0xb
 3324 001a 03       		.uleb128 0x3
 3325 001b 0E       		.uleb128 0xe
 3326 001c 00       		.byte	0
 3327 001d 00       		.byte	0
 3328 001e 03       		.uleb128 0x3
 3329 001f 24       		.uleb128 0x24
 3330 0020 00       		.byte	0
 3331 0021 0B       		.uleb128 0xb
 3332 0022 0B       		.uleb128 0xb
 3333 0023 3E       		.uleb128 0x3e
 3334 0024 0B       		.uleb128 0xb
 3335 0025 03       		.uleb128 0x3
 3336 0026 08       		.uleb128 0x8
 3337 0027 00       		.byte	0
 3338 0028 00       		.byte	0
 3339 0029 04       		.uleb128 0x4
 3340 002a 16       		.uleb128 0x16
 3341 002b 00       		.byte	0
 3342 002c 03       		.uleb128 0x3
 3343 002d 0E       		.uleb128 0xe
 3344 002e 3A       		.uleb128 0x3a
 3345 002f 0B       		.uleb128 0xb
 3346 0030 3B       		.uleb128 0x3b
 3347 0031 05       		.uleb128 0x5
 3348 0032 49       		.uleb128 0x49
 3349 0033 13       		.uleb128 0x13
 3350 0034 00       		.byte	0
 3351 0035 00       		.byte	0
 3352 0036 05       		.uleb128 0x5
 3353 0037 35       		.uleb128 0x35
 3354 0038 00       		.byte	0
 3355 0039 49       		.uleb128 0x49
 3356 003a 13       		.uleb128 0x13
 3357 003b 00       		.byte	0
 3358 003c 00       		.byte	0
 3359 003d 06       		.uleb128 0x6
 3360 003e 0F       		.uleb128 0xf
 3361 003f 00       		.byte	0
 3362 0040 0B       		.uleb128 0xb
 3363 0041 0B       		.uleb128 0xb
 3364 0042 49       		.uleb128 0x49
 3365 0043 13       		.uleb128 0x13
 3366 0044 00       		.byte	0
 3367 0045 00       		.byte	0
 3368 0046 07       		.uleb128 0x7
 3369 0047 15       		.uleb128 0x15
 3370 0048 00       		.byte	0
 3371 0049 27       		.uleb128 0x27
 3372 004a 19       		.uleb128 0x19
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 101


 3373 004b 00       		.byte	0
 3374 004c 00       		.byte	0
 3375 004d 08       		.uleb128 0x8
 3376 004e 0F       		.uleb128 0xf
 3377 004f 00       		.byte	0
 3378 0050 0B       		.uleb128 0xb
 3379 0051 0B       		.uleb128 0xb
 3380 0052 00       		.byte	0
 3381 0053 00       		.byte	0
 3382 0054 09       		.uleb128 0x9
 3383 0055 13       		.uleb128 0x13
 3384 0056 01       		.byte	0x1
 3385 0057 0B       		.uleb128 0xb
 3386 0058 0B       		.uleb128 0xb
 3387 0059 3A       		.uleb128 0x3a
 3388 005a 0B       		.uleb128 0xb
 3389 005b 3B       		.uleb128 0x3b
 3390 005c 0B       		.uleb128 0xb
 3391 005d 01       		.uleb128 0x1
 3392 005e 13       		.uleb128 0x13
 3393 005f 00       		.byte	0
 3394 0060 00       		.byte	0
 3395 0061 0A       		.uleb128 0xa
 3396 0062 0D       		.uleb128 0xd
 3397 0063 00       		.byte	0
 3398 0064 03       		.uleb128 0x3
 3399 0065 0E       		.uleb128 0xe
 3400 0066 3A       		.uleb128 0x3a
 3401 0067 0B       		.uleb128 0xb
 3402 0068 3B       		.uleb128 0x3b
 3403 0069 0B       		.uleb128 0xb
 3404 006a 49       		.uleb128 0x49
 3405 006b 13       		.uleb128 0x13
 3406 006c 38       		.uleb128 0x38
 3407 006d 0B       		.uleb128 0xb
 3408 006e 00       		.byte	0
 3409 006f 00       		.byte	0
 3410 0070 0B       		.uleb128 0xb
 3411 0071 16       		.uleb128 0x16
 3412 0072 00       		.byte	0
 3413 0073 03       		.uleb128 0x3
 3414 0074 0E       		.uleb128 0xe
 3415 0075 3A       		.uleb128 0x3a
 3416 0076 0B       		.uleb128 0xb
 3417 0077 3B       		.uleb128 0x3b
 3418 0078 0B       		.uleb128 0xb
 3419 0079 49       		.uleb128 0x49
 3420 007a 13       		.uleb128 0x13
 3421 007b 00       		.byte	0
 3422 007c 00       		.byte	0
 3423 007d 0C       		.uleb128 0xc
 3424 007e 04       		.uleb128 0x4
 3425 007f 01       		.byte	0x1
 3426 0080 0B       		.uleb128 0xb
 3427 0081 0B       		.uleb128 0xb
 3428 0082 49       		.uleb128 0x49
 3429 0083 13       		.uleb128 0x13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 102


 3430 0084 3A       		.uleb128 0x3a
 3431 0085 0B       		.uleb128 0xb
 3432 0086 3B       		.uleb128 0x3b
 3433 0087 0B       		.uleb128 0xb
 3434 0088 01       		.uleb128 0x1
 3435 0089 13       		.uleb128 0x13
 3436 008a 00       		.byte	0
 3437 008b 00       		.byte	0
 3438 008c 0D       		.uleb128 0xd
 3439 008d 28       		.uleb128 0x28
 3440 008e 00       		.byte	0
 3441 008f 03       		.uleb128 0x3
 3442 0090 0E       		.uleb128 0xe
 3443 0091 1C       		.uleb128 0x1c
 3444 0092 0B       		.uleb128 0xb
 3445 0093 00       		.byte	0
 3446 0094 00       		.byte	0
 3447 0095 0E       		.uleb128 0xe
 3448 0096 01       		.uleb128 0x1
 3449 0097 01       		.byte	0x1
 3450 0098 49       		.uleb128 0x49
 3451 0099 13       		.uleb128 0x13
 3452 009a 01       		.uleb128 0x1
 3453 009b 13       		.uleb128 0x13
 3454 009c 00       		.byte	0
 3455 009d 00       		.byte	0
 3456 009e 0F       		.uleb128 0xf
 3457 009f 21       		.uleb128 0x21
 3458 00a0 00       		.byte	0
 3459 00a1 49       		.uleb128 0x49
 3460 00a2 13       		.uleb128 0x13
 3461 00a3 2F       		.uleb128 0x2f
 3462 00a4 0B       		.uleb128 0xb
 3463 00a5 00       		.byte	0
 3464 00a6 00       		.byte	0
 3465 00a7 10       		.uleb128 0x10
 3466 00a8 0D       		.uleb128 0xd
 3467 00a9 00       		.byte	0
 3468 00aa 03       		.uleb128 0x3
 3469 00ab 0E       		.uleb128 0xe
 3470 00ac 3A       		.uleb128 0x3a
 3471 00ad 0B       		.uleb128 0xb
 3472 00ae 3B       		.uleb128 0x3b
 3473 00af 05       		.uleb128 0x5
 3474 00b0 49       		.uleb128 0x49
 3475 00b1 13       		.uleb128 0x13
 3476 00b2 38       		.uleb128 0x38
 3477 00b3 0B       		.uleb128 0xb
 3478 00b4 00       		.byte	0
 3479 00b5 00       		.byte	0
 3480 00b6 11       		.uleb128 0x11
 3481 00b7 13       		.uleb128 0x13
 3482 00b8 01       		.byte	0x1
 3483 00b9 0B       		.uleb128 0xb
 3484 00ba 0B       		.uleb128 0xb
 3485 00bb 3A       		.uleb128 0x3a
 3486 00bc 0B       		.uleb128 0xb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 103


 3487 00bd 3B       		.uleb128 0x3b
 3488 00be 05       		.uleb128 0x5
 3489 00bf 01       		.uleb128 0x1
 3490 00c0 13       		.uleb128 0x13
 3491 00c1 00       		.byte	0
 3492 00c2 00       		.byte	0
 3493 00c3 12       		.uleb128 0x12
 3494 00c4 0D       		.uleb128 0xd
 3495 00c5 00       		.byte	0
 3496 00c6 03       		.uleb128 0x3
 3497 00c7 08       		.uleb128 0x8
 3498 00c8 3A       		.uleb128 0x3a
 3499 00c9 0B       		.uleb128 0xb
 3500 00ca 3B       		.uleb128 0x3b
 3501 00cb 05       		.uleb128 0x5
 3502 00cc 49       		.uleb128 0x49
 3503 00cd 13       		.uleb128 0x13
 3504 00ce 38       		.uleb128 0x38
 3505 00cf 0B       		.uleb128 0xb
 3506 00d0 00       		.byte	0
 3507 00d1 00       		.byte	0
 3508 00d2 13       		.uleb128 0x13
 3509 00d3 26       		.uleb128 0x26
 3510 00d4 00       		.byte	0
 3511 00d5 00       		.byte	0
 3512 00d6 00       		.byte	0
 3513 00d7 14       		.uleb128 0x14
 3514 00d8 2E       		.uleb128 0x2e
 3515 00d9 00       		.byte	0
 3516 00da 03       		.uleb128 0x3
 3517 00db 0E       		.uleb128 0xe
 3518 00dc 3A       		.uleb128 0x3a
 3519 00dd 0B       		.uleb128 0xb
 3520 00de 3B       		.uleb128 0x3b
 3521 00df 05       		.uleb128 0x5
 3522 00e0 27       		.uleb128 0x27
 3523 00e1 19       		.uleb128 0x19
 3524 00e2 11       		.uleb128 0x11
 3525 00e3 01       		.uleb128 0x1
 3526 00e4 12       		.uleb128 0x12
 3527 00e5 06       		.uleb128 0x6
 3528 00e6 40       		.uleb128 0x40
 3529 00e7 18       		.uleb128 0x18
 3530 00e8 9742     		.uleb128 0x2117
 3531 00ea 19       		.uleb128 0x19
 3532 00eb 00       		.byte	0
 3533 00ec 00       		.byte	0
 3534 00ed 15       		.uleb128 0x15
 3535 00ee 2E       		.uleb128 0x2e
 3536 00ef 01       		.byte	0x1
 3537 00f0 03       		.uleb128 0x3
 3538 00f1 0E       		.uleb128 0xe
 3539 00f2 3A       		.uleb128 0x3a
 3540 00f3 0B       		.uleb128 0xb
 3541 00f4 3B       		.uleb128 0x3b
 3542 00f5 05       		.uleb128 0x5
 3543 00f6 27       		.uleb128 0x27
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 104


 3544 00f7 19       		.uleb128 0x19
 3545 00f8 49       		.uleb128 0x49
 3546 00f9 13       		.uleb128 0x13
 3547 00fa 11       		.uleb128 0x11
 3548 00fb 01       		.uleb128 0x1
 3549 00fc 12       		.uleb128 0x12
 3550 00fd 06       		.uleb128 0x6
 3551 00fe 40       		.uleb128 0x40
 3552 00ff 18       		.uleb128 0x18
 3553 0100 9742     		.uleb128 0x2117
 3554 0102 19       		.uleb128 0x19
 3555 0103 01       		.uleb128 0x1
 3556 0104 13       		.uleb128 0x13
 3557 0105 00       		.byte	0
 3558 0106 00       		.byte	0
 3559 0107 16       		.uleb128 0x16
 3560 0108 05       		.uleb128 0x5
 3561 0109 00       		.byte	0
 3562 010a 03       		.uleb128 0x3
 3563 010b 0E       		.uleb128 0xe
 3564 010c 3A       		.uleb128 0x3a
 3565 010d 0B       		.uleb128 0xb
 3566 010e 3B       		.uleb128 0x3b
 3567 010f 05       		.uleb128 0x5
 3568 0110 49       		.uleb128 0x49
 3569 0111 13       		.uleb128 0x13
 3570 0112 02       		.uleb128 0x2
 3571 0113 17       		.uleb128 0x17
 3572 0114 00       		.byte	0
 3573 0115 00       		.byte	0
 3574 0116 17       		.uleb128 0x17
 3575 0117 34       		.uleb128 0x34
 3576 0118 00       		.byte	0
 3577 0119 03       		.uleb128 0x3
 3578 011a 0E       		.uleb128 0xe
 3579 011b 3A       		.uleb128 0x3a
 3580 011c 0B       		.uleb128 0xb
 3581 011d 3B       		.uleb128 0x3b
 3582 011e 05       		.uleb128 0x5
 3583 011f 49       		.uleb128 0x49
 3584 0120 13       		.uleb128 0x13
 3585 0121 02       		.uleb128 0x2
 3586 0122 17       		.uleb128 0x17
 3587 0123 00       		.byte	0
 3588 0124 00       		.byte	0
 3589 0125 18       		.uleb128 0x18
 3590 0126 26       		.uleb128 0x26
 3591 0127 00       		.byte	0
 3592 0128 49       		.uleb128 0x49
 3593 0129 13       		.uleb128 0x13
 3594 012a 00       		.byte	0
 3595 012b 00       		.byte	0
 3596 012c 19       		.uleb128 0x19
 3597 012d 2E       		.uleb128 0x2e
 3598 012e 01       		.byte	0x1
 3599 012f 03       		.uleb128 0x3
 3600 0130 0E       		.uleb128 0xe
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 105


 3601 0131 3A       		.uleb128 0x3a
 3602 0132 0B       		.uleb128 0xb
 3603 0133 3B       		.uleb128 0x3b
 3604 0134 05       		.uleb128 0x5
 3605 0135 27       		.uleb128 0x27
 3606 0136 19       		.uleb128 0x19
 3607 0137 20       		.uleb128 0x20
 3608 0138 0B       		.uleb128 0xb
 3609 0139 01       		.uleb128 0x1
 3610 013a 13       		.uleb128 0x13
 3611 013b 00       		.byte	0
 3612 013c 00       		.byte	0
 3613 013d 1A       		.uleb128 0x1a
 3614 013e 34       		.uleb128 0x34
 3615 013f 00       		.byte	0
 3616 0140 03       		.uleb128 0x3
 3617 0141 0E       		.uleb128 0xe
 3618 0142 3A       		.uleb128 0x3a
 3619 0143 0B       		.uleb128 0xb
 3620 0144 3B       		.uleb128 0x3b
 3621 0145 05       		.uleb128 0x5
 3622 0146 49       		.uleb128 0x49
 3623 0147 13       		.uleb128 0x13
 3624 0148 00       		.byte	0
 3625 0149 00       		.byte	0
 3626 014a 1B       		.uleb128 0x1b
 3627 014b 2E       		.uleb128 0x2e
 3628 014c 01       		.byte	0x1
 3629 014d 03       		.uleb128 0x3
 3630 014e 0E       		.uleb128 0xe
 3631 014f 3A       		.uleb128 0x3a
 3632 0150 0B       		.uleb128 0xb
 3633 0151 3B       		.uleb128 0x3b
 3634 0152 05       		.uleb128 0x5
 3635 0153 27       		.uleb128 0x27
 3636 0154 19       		.uleb128 0x19
 3637 0155 11       		.uleb128 0x11
 3638 0156 01       		.uleb128 0x1
 3639 0157 12       		.uleb128 0x12
 3640 0158 06       		.uleb128 0x6
 3641 0159 40       		.uleb128 0x40
 3642 015a 18       		.uleb128 0x18
 3643 015b 9642     		.uleb128 0x2116
 3644 015d 19       		.uleb128 0x19
 3645 015e 01       		.uleb128 0x1
 3646 015f 13       		.uleb128 0x13
 3647 0160 00       		.byte	0
 3648 0161 00       		.byte	0
 3649 0162 1C       		.uleb128 0x1c
 3650 0163 1D       		.uleb128 0x1d
 3651 0164 01       		.byte	0x1
 3652 0165 31       		.uleb128 0x31
 3653 0166 13       		.uleb128 0x13
 3654 0167 11       		.uleb128 0x11
 3655 0168 01       		.uleb128 0x1
 3656 0169 12       		.uleb128 0x12
 3657 016a 06       		.uleb128 0x6
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 106


 3658 016b 58       		.uleb128 0x58
 3659 016c 0B       		.uleb128 0xb
 3660 016d 59       		.uleb128 0x59
 3661 016e 05       		.uleb128 0x5
 3662 016f 00       		.byte	0
 3663 0170 00       		.byte	0
 3664 0171 1D       		.uleb128 0x1d
 3665 0172 0B       		.uleb128 0xb
 3666 0173 01       		.byte	0x1
 3667 0174 11       		.uleb128 0x11
 3668 0175 01       		.uleb128 0x1
 3669 0176 12       		.uleb128 0x12
 3670 0177 06       		.uleb128 0x6
 3671 0178 00       		.byte	0
 3672 0179 00       		.byte	0
 3673 017a 1E       		.uleb128 0x1e
 3674 017b 34       		.uleb128 0x34
 3675 017c 00       		.byte	0
 3676 017d 31       		.uleb128 0x31
 3677 017e 13       		.uleb128 0x13
 3678 017f 02       		.uleb128 0x2
 3679 0180 17       		.uleb128 0x17
 3680 0181 00       		.byte	0
 3681 0182 00       		.byte	0
 3682 0183 1F       		.uleb128 0x1f
 3683 0184 2E       		.uleb128 0x2e
 3684 0185 01       		.byte	0x1
 3685 0186 3F       		.uleb128 0x3f
 3686 0187 19       		.uleb128 0x19
 3687 0188 03       		.uleb128 0x3
 3688 0189 0E       		.uleb128 0xe
 3689 018a 3A       		.uleb128 0x3a
 3690 018b 0B       		.uleb128 0xb
 3691 018c 3B       		.uleb128 0x3b
 3692 018d 05       		.uleb128 0x5
 3693 018e 27       		.uleb128 0x27
 3694 018f 19       		.uleb128 0x19
 3695 0190 11       		.uleb128 0x11
 3696 0191 01       		.uleb128 0x1
 3697 0192 12       		.uleb128 0x12
 3698 0193 06       		.uleb128 0x6
 3699 0194 40       		.uleb128 0x40
 3700 0195 18       		.uleb128 0x18
 3701 0196 9642     		.uleb128 0x2116
 3702 0198 19       		.uleb128 0x19
 3703 0199 01       		.uleb128 0x1
 3704 019a 13       		.uleb128 0x13
 3705 019b 00       		.byte	0
 3706 019c 00       		.byte	0
 3707 019d 20       		.uleb128 0x20
 3708 019e 898201   		.uleb128 0x4109
 3709 01a1 01       		.byte	0x1
 3710 01a2 11       		.uleb128 0x11
 3711 01a3 01       		.uleb128 0x1
 3712 01a4 31       		.uleb128 0x31
 3713 01a5 13       		.uleb128 0x13
 3714 01a6 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 107


 3715 01a7 13       		.uleb128 0x13
 3716 01a8 00       		.byte	0
 3717 01a9 00       		.byte	0
 3718 01aa 21       		.uleb128 0x21
 3719 01ab 8A8201   		.uleb128 0x410a
 3720 01ae 00       		.byte	0
 3721 01af 02       		.uleb128 0x2
 3722 01b0 18       		.uleb128 0x18
 3723 01b1 9142     		.uleb128 0x2111
 3724 01b3 18       		.uleb128 0x18
 3725 01b4 00       		.byte	0
 3726 01b5 00       		.byte	0
 3727 01b6 22       		.uleb128 0x22
 3728 01b7 898201   		.uleb128 0x4109
 3729 01ba 01       		.byte	0x1
 3730 01bb 11       		.uleb128 0x11
 3731 01bc 01       		.uleb128 0x1
 3732 01bd 31       		.uleb128 0x31
 3733 01be 13       		.uleb128 0x13
 3734 01bf 00       		.byte	0
 3735 01c0 00       		.byte	0
 3736 01c1 23       		.uleb128 0x23
 3737 01c2 2E       		.uleb128 0x2e
 3738 01c3 01       		.byte	0x1
 3739 01c4 3F       		.uleb128 0x3f
 3740 01c5 19       		.uleb128 0x19
 3741 01c6 03       		.uleb128 0x3
 3742 01c7 0E       		.uleb128 0xe
 3743 01c8 3A       		.uleb128 0x3a
 3744 01c9 0B       		.uleb128 0xb
 3745 01ca 3B       		.uleb128 0x3b
 3746 01cb 0B       		.uleb128 0xb
 3747 01cc 27       		.uleb128 0x27
 3748 01cd 19       		.uleb128 0x19
 3749 01ce 11       		.uleb128 0x11
 3750 01cf 01       		.uleb128 0x1
 3751 01d0 12       		.uleb128 0x12
 3752 01d1 06       		.uleb128 0x6
 3753 01d2 40       		.uleb128 0x40
 3754 01d3 18       		.uleb128 0x18
 3755 01d4 9742     		.uleb128 0x2117
 3756 01d6 19       		.uleb128 0x19
 3757 01d7 01       		.uleb128 0x1
 3758 01d8 13       		.uleb128 0x13
 3759 01d9 00       		.byte	0
 3760 01da 00       		.byte	0
 3761 01db 24       		.uleb128 0x24
 3762 01dc 34       		.uleb128 0x34
 3763 01dd 00       		.byte	0
 3764 01de 03       		.uleb128 0x3
 3765 01df 0E       		.uleb128 0xe
 3766 01e0 3A       		.uleb128 0x3a
 3767 01e1 0B       		.uleb128 0xb
 3768 01e2 3B       		.uleb128 0x3b
 3769 01e3 0B       		.uleb128 0xb
 3770 01e4 49       		.uleb128 0x49
 3771 01e5 13       		.uleb128 0x13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 108


 3772 01e6 02       		.uleb128 0x2
 3773 01e7 17       		.uleb128 0x17
 3774 01e8 00       		.byte	0
 3775 01e9 00       		.byte	0
 3776 01ea 25       		.uleb128 0x25
 3777 01eb 898201   		.uleb128 0x4109
 3778 01ee 00       		.byte	0
 3779 01ef 11       		.uleb128 0x11
 3780 01f0 01       		.uleb128 0x1
 3781 01f1 31       		.uleb128 0x31
 3782 01f2 13       		.uleb128 0x13
 3783 01f3 00       		.byte	0
 3784 01f4 00       		.byte	0
 3785 01f5 26       		.uleb128 0x26
 3786 01f6 2E       		.uleb128 0x2e
 3787 01f7 01       		.byte	0x1
 3788 01f8 3F       		.uleb128 0x3f
 3789 01f9 19       		.uleb128 0x19
 3790 01fa 03       		.uleb128 0x3
 3791 01fb 0E       		.uleb128 0xe
 3792 01fc 3A       		.uleb128 0x3a
 3793 01fd 0B       		.uleb128 0xb
 3794 01fe 3B       		.uleb128 0x3b
 3795 01ff 05       		.uleb128 0x5
 3796 0200 27       		.uleb128 0x27
 3797 0201 19       		.uleb128 0x19
 3798 0202 11       		.uleb128 0x11
 3799 0203 01       		.uleb128 0x1
 3800 0204 12       		.uleb128 0x12
 3801 0205 06       		.uleb128 0x6
 3802 0206 40       		.uleb128 0x40
 3803 0207 18       		.uleb128 0x18
 3804 0208 9742     		.uleb128 0x2117
 3805 020a 19       		.uleb128 0x19
 3806 020b 01       		.uleb128 0x1
 3807 020c 13       		.uleb128 0x13
 3808 020d 00       		.byte	0
 3809 020e 00       		.byte	0
 3810 020f 27       		.uleb128 0x27
 3811 0210 05       		.uleb128 0x5
 3812 0211 00       		.byte	0
 3813 0212 03       		.uleb128 0x3
 3814 0213 0E       		.uleb128 0xe
 3815 0214 3A       		.uleb128 0x3a
 3816 0215 0B       		.uleb128 0xb
 3817 0216 3B       		.uleb128 0x3b
 3818 0217 05       		.uleb128 0x5
 3819 0218 49       		.uleb128 0x49
 3820 0219 13       		.uleb128 0x13
 3821 021a 02       		.uleb128 0x2
 3822 021b 18       		.uleb128 0x18
 3823 021c 00       		.byte	0
 3824 021d 00       		.byte	0
 3825 021e 28       		.uleb128 0x28
 3826 021f 34       		.uleb128 0x34
 3827 0220 00       		.byte	0
 3828 0221 03       		.uleb128 0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 109


 3829 0222 0E       		.uleb128 0xe
 3830 0223 3A       		.uleb128 0x3a
 3831 0224 0B       		.uleb128 0xb
 3832 0225 3B       		.uleb128 0x3b
 3833 0226 05       		.uleb128 0x5
 3834 0227 49       		.uleb128 0x49
 3835 0228 13       		.uleb128 0x13
 3836 0229 02       		.uleb128 0x2
 3837 022a 18       		.uleb128 0x18
 3838 022b 00       		.byte	0
 3839 022c 00       		.byte	0
 3840 022d 29       		.uleb128 0x29
 3841 022e 2E       		.uleb128 0x2e
 3842 022f 01       		.byte	0x1
 3843 0230 03       		.uleb128 0x3
 3844 0231 0E       		.uleb128 0xe
 3845 0232 3A       		.uleb128 0x3a
 3846 0233 0B       		.uleb128 0xb
 3847 0234 3B       		.uleb128 0x3b
 3848 0235 05       		.uleb128 0x5
 3849 0236 27       		.uleb128 0x27
 3850 0237 19       		.uleb128 0x19
 3851 0238 11       		.uleb128 0x11
 3852 0239 01       		.uleb128 0x1
 3853 023a 12       		.uleb128 0x12
 3854 023b 06       		.uleb128 0x6
 3855 023c 40       		.uleb128 0x40
 3856 023d 18       		.uleb128 0x18
 3857 023e 9742     		.uleb128 0x2117
 3858 0240 19       		.uleb128 0x19
 3859 0241 01       		.uleb128 0x1
 3860 0242 13       		.uleb128 0x13
 3861 0243 00       		.byte	0
 3862 0244 00       		.byte	0
 3863 0245 2A       		.uleb128 0x2a
 3864 0246 2E       		.uleb128 0x2e
 3865 0247 01       		.byte	0x1
 3866 0248 3F       		.uleb128 0x3f
 3867 0249 19       		.uleb128 0x19
 3868 024a 03       		.uleb128 0x3
 3869 024b 0E       		.uleb128 0xe
 3870 024c 3A       		.uleb128 0x3a
 3871 024d 0B       		.uleb128 0xb
 3872 024e 3B       		.uleb128 0x3b
 3873 024f 05       		.uleb128 0x5
 3874 0250 27       		.uleb128 0x27
 3875 0251 19       		.uleb128 0x19
 3876 0252 49       		.uleb128 0x49
 3877 0253 13       		.uleb128 0x13
 3878 0254 11       		.uleb128 0x11
 3879 0255 01       		.uleb128 0x1
 3880 0256 12       		.uleb128 0x12
 3881 0257 06       		.uleb128 0x6
 3882 0258 40       		.uleb128 0x40
 3883 0259 18       		.uleb128 0x18
 3884 025a 9742     		.uleb128 0x2117
 3885 025c 19       		.uleb128 0x19
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 110


 3886 025d 01       		.uleb128 0x1
 3887 025e 13       		.uleb128 0x13
 3888 025f 00       		.byte	0
 3889 0260 00       		.byte	0
 3890 0261 2B       		.uleb128 0x2b
 3891 0262 34       		.uleb128 0x34
 3892 0263 00       		.byte	0
 3893 0264 03       		.uleb128 0x3
 3894 0265 0E       		.uleb128 0xe
 3895 0266 3A       		.uleb128 0x3a
 3896 0267 0B       		.uleb128 0xb
 3897 0268 3B       		.uleb128 0x3b
 3898 0269 0B       		.uleb128 0xb
 3899 026a 49       		.uleb128 0x49
 3900 026b 13       		.uleb128 0x13
 3901 026c 02       		.uleb128 0x2
 3902 026d 18       		.uleb128 0x18
 3903 026e 00       		.byte	0
 3904 026f 00       		.byte	0
 3905 0270 2C       		.uleb128 0x2c
 3906 0271 34       		.uleb128 0x34
 3907 0272 00       		.byte	0
 3908 0273 03       		.uleb128 0x3
 3909 0274 0E       		.uleb128 0xe
 3910 0275 3A       		.uleb128 0x3a
 3911 0276 0B       		.uleb128 0xb
 3912 0277 3B       		.uleb128 0x3b
 3913 0278 05       		.uleb128 0x5
 3914 0279 49       		.uleb128 0x49
 3915 027a 13       		.uleb128 0x13
 3916 027b 3F       		.uleb128 0x3f
 3917 027c 19       		.uleb128 0x19
 3918 027d 3C       		.uleb128 0x3c
 3919 027e 19       		.uleb128 0x19
 3920 027f 00       		.byte	0
 3921 0280 00       		.byte	0
 3922 0281 2D       		.uleb128 0x2d
 3923 0282 34       		.uleb128 0x34
 3924 0283 00       		.byte	0
 3925 0284 03       		.uleb128 0x3
 3926 0285 0E       		.uleb128 0xe
 3927 0286 3A       		.uleb128 0x3a
 3928 0287 0B       		.uleb128 0xb
 3929 0288 3B       		.uleb128 0x3b
 3930 0289 0B       		.uleb128 0xb
 3931 028a 49       		.uleb128 0x49
 3932 028b 13       		.uleb128 0x13
 3933 028c 3F       		.uleb128 0x3f
 3934 028d 19       		.uleb128 0x19
 3935 028e 02       		.uleb128 0x2
 3936 028f 18       		.uleb128 0x18
 3937 0290 00       		.byte	0
 3938 0291 00       		.byte	0
 3939 0292 2E       		.uleb128 0x2e
 3940 0293 34       		.uleb128 0x34
 3941 0294 00       		.byte	0
 3942 0295 03       		.uleb128 0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 111


 3943 0296 0E       		.uleb128 0xe
 3944 0297 3A       		.uleb128 0x3a
 3945 0298 0B       		.uleb128 0xb
 3946 0299 3B       		.uleb128 0x3b
 3947 029a 0B       		.uleb128 0xb
 3948 029b 49       		.uleb128 0x49
 3949 029c 13       		.uleb128 0x13
 3950 029d 3F       		.uleb128 0x3f
 3951 029e 19       		.uleb128 0x19
 3952 029f 3C       		.uleb128 0x3c
 3953 02a0 19       		.uleb128 0x19
 3954 02a1 00       		.byte	0
 3955 02a2 00       		.byte	0
 3956 02a3 2F       		.uleb128 0x2f
 3957 02a4 2E       		.uleb128 0x2e
 3958 02a5 00       		.byte	0
 3959 02a6 3F       		.uleb128 0x3f
 3960 02a7 19       		.uleb128 0x19
 3961 02a8 3C       		.uleb128 0x3c
 3962 02a9 19       		.uleb128 0x19
 3963 02aa 6E       		.uleb128 0x6e
 3964 02ab 0E       		.uleb128 0xe
 3965 02ac 03       		.uleb128 0x3
 3966 02ad 0E       		.uleb128 0xe
 3967 02ae 3A       		.uleb128 0x3a
 3968 02af 0B       		.uleb128 0xb
 3969 02b0 3B       		.uleb128 0x3b
 3970 02b1 0B       		.uleb128 0xb
 3971 02b2 00       		.byte	0
 3972 02b3 00       		.byte	0
 3973 02b4 00       		.byte	0
 3974              		.section	.debug_loc,"",%progbits
 3975              	.Ldebug_loc0:
 3976              	.LLST0:
 3977 0000 00000000 		.4byte	.LVL0
 3978 0004 06000000 		.4byte	.LVL2
 3979 0008 0100     		.2byte	0x1
 3980 000a 50       		.byte	0x50
 3981 000b 06000000 		.4byte	.LVL2
 3982 000f 0C000000 		.4byte	.LFE16
 3983 0013 0400     		.2byte	0x4
 3984 0015 F3       		.byte	0xf3
 3985 0016 01       		.uleb128 0x1
 3986 0017 50       		.byte	0x50
 3987 0018 9F       		.byte	0x9f
 3988 0019 00000000 		.4byte	0
 3989 001d 00000000 		.4byte	0
 3990              	.LLST1:
 3991 0021 02000000 		.4byte	.LVL1
 3992 0025 0A000000 		.4byte	.LVL3
 3993 0029 0100     		.2byte	0x1
 3994 002b 53       		.byte	0x53
 3995 002c 0A000000 		.4byte	.LVL3
 3996 0030 0C000000 		.4byte	.LFE16
 3997 0034 0700     		.2byte	0x7
 3998 0036 70       		.byte	0x70
 3999 0037 00       		.sleb128 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 112


 4000 0038 0A       		.byte	0xa
 4001 0039 FFFF     		.2byte	0xffff
 4002 003b 1A       		.byte	0x1a
 4003 003c 9F       		.byte	0x9f
 4004 003d 00000000 		.4byte	0
 4005 0041 00000000 		.4byte	0
 4006              	.LLST2:
 4007 0045 0E000000 		.4byte	.LVL4
 4008 0049 12000000 		.4byte	.LVL5
 4009 004d 0600     		.2byte	0x6
 4010 004f 73       		.byte	0x73
 4011 0050 00       		.sleb128 0
 4012 0051 08       		.byte	0x8
 4013 0052 FF       		.byte	0xff
 4014 0053 1A       		.byte	0x1a
 4015 0054 9F       		.byte	0x9f
 4016 0055 12000000 		.4byte	.LVL5
 4017 0059 1A000000 		.4byte	.LVL6
 4018 005d 0100     		.2byte	0x1
 4019 005f 53       		.byte	0x53
 4020 0060 1A000000 		.4byte	.LVL6
 4021 0064 1C000000 		.4byte	.LVL7
 4022 0068 0500     		.2byte	0x5
 4023 006a 0C       		.byte	0xc
 4024 006b C0010B40 		.4byte	0x400b01c0
 4025 006f 00000000 		.4byte	0
 4026 0073 00000000 		.4byte	0
 4027              	.LLST3:
 4028 0077 96000000 		.4byte	.LVL13
 4029 007b 9A000000 		.4byte	.LVL14
 4030 007f 0100     		.2byte	0x1
 4031 0081 53       		.byte	0x53
 4032 0082 00000000 		.4byte	0
 4033 0086 00000000 		.4byte	0
 4034              	.LLST4:
 4035 008a 52000000 		.4byte	.LVL8
 4036 008e 58000000 		.4byte	.LVL9
 4037 0092 0400     		.2byte	0x4
 4038 0094 0A       		.byte	0xa
 4039 0095 E001     		.2byte	0x1e0
 4040 0097 9F       		.byte	0x9f
 4041 0098 58000000 		.4byte	.LVL9
 4042 009c 68000000 		.4byte	.LVL11
 4043 00a0 0100     		.2byte	0x1
 4044 00a2 53       		.byte	0x53
 4045 00a3 00000000 		.4byte	0
 4046 00a7 00000000 		.4byte	0
 4047              	.LLST5:
 4048 00ab 80000000 		.4byte	.LVL12
 4049 00af B4000000 		.4byte	.LVL15
 4050 00b3 0100     		.2byte	0x1
 4051 00b5 50       		.byte	0x50
 4052 00b6 00000000 		.4byte	0
 4053 00ba 00000000 		.4byte	0
 4054              	.LLST6:
 4055 00be 5C000000 		.4byte	.LVL19
 4056 00c2 6F000000 		.4byte	.LVL23-1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 113


 4057 00c6 0100     		.2byte	0x1
 4058 00c8 50       		.byte	0x50
 4059 00c9 82000000 		.4byte	.LVL24
 4060 00cd 95000000 		.4byte	.LVL28-1
 4061 00d1 0100     		.2byte	0x1
 4062 00d3 50       		.byte	0x50
 4063 00d4 CE000000 		.4byte	.LVL30
 4064 00d8 DB000000 		.4byte	.LVL33-1
 4065 00dc 0100     		.2byte	0x1
 4066 00de 50       		.byte	0x50
 4067 00df E0000000 		.4byte	.LVL34
 4068 00e3 EB000000 		.4byte	.LVL37-1
 4069 00e7 0100     		.2byte	0x1
 4070 00e9 50       		.byte	0x50
 4071 00ea F0000000 		.4byte	.LVL38
 4072 00ee 03010000 		.4byte	.LVL42-1
 4073 00f2 0100     		.2byte	0x1
 4074 00f4 50       		.byte	0x50
 4075 00f5 08010000 		.4byte	.LVL43
 4076 00f9 19010000 		.4byte	.LVL47-1
 4077 00fd 0100     		.2byte	0x1
 4078 00ff 50       		.byte	0x50
 4079 0100 00000000 		.4byte	0
 4080 0104 00000000 		.4byte	0
 4081              	.LLST7:
 4082 0108 60000000 		.4byte	.LVL20
 4083 010c 64000000 		.4byte	.LVL21
 4084 0110 0100     		.2byte	0x1
 4085 0112 51       		.byte	0x51
 4086 0113 64000000 		.4byte	.LVL21
 4087 0117 6F000000 		.4byte	.LVL23-1
 4088 011b 0100     		.2byte	0x1
 4089 011d 53       		.byte	0x53
 4090 011e 86000000 		.4byte	.LVL25
 4091 0122 8A000000 		.4byte	.LVL26
 4092 0126 0100     		.2byte	0x1
 4093 0128 51       		.byte	0x51
 4094 0129 8A000000 		.4byte	.LVL26
 4095 012d 95000000 		.4byte	.LVL28-1
 4096 0131 0100     		.2byte	0x1
 4097 0133 53       		.byte	0x53
 4098 0134 D2000000 		.4byte	.LVL31
 4099 0138 D6000000 		.4byte	.LVL32
 4100 013c 0100     		.2byte	0x1
 4101 013e 52       		.byte	0x52
 4102 013f D6000000 		.4byte	.LVL32
 4103 0143 DB000000 		.4byte	.LVL33-1
 4104 0147 0100     		.2byte	0x1
 4105 0149 53       		.byte	0x53
 4106 014a E2000000 		.4byte	.LVL35
 4107 014e E6000000 		.4byte	.LVL36
 4108 0152 0100     		.2byte	0x1
 4109 0154 52       		.byte	0x52
 4110 0155 E6000000 		.4byte	.LVL36
 4111 0159 EB000000 		.4byte	.LVL37-1
 4112 015d 0100     		.2byte	0x1
 4113 015f 53       		.byte	0x53
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 114


 4114 0160 F4000000 		.4byte	.LVL39
 4115 0164 F8000000 		.4byte	.LVL40
 4116 0168 0100     		.2byte	0x1
 4117 016a 52       		.byte	0x52
 4118 016b F8000000 		.4byte	.LVL40
 4119 016f 03010000 		.4byte	.LVL42-1
 4120 0173 0100     		.2byte	0x1
 4121 0175 53       		.byte	0x53
 4122 0176 0A010000 		.4byte	.LVL44
 4123 017a 0E010000 		.4byte	.LVL45
 4124 017e 0100     		.2byte	0x1
 4125 0180 52       		.byte	0x52
 4126 0181 0E010000 		.4byte	.LVL45
 4127 0185 19010000 		.4byte	.LVL47-1
 4128 0189 0100     		.2byte	0x1
 4129 018b 53       		.byte	0x53
 4130 018c 00000000 		.4byte	0
 4131 0190 00000000 		.4byte	0
 4132              	.LLST8:
 4133 0194 00000000 		.4byte	.LVL53
 4134 0198 24000000 		.4byte	.LVL55
 4135 019c 0100     		.2byte	0x1
 4136 019e 50       		.byte	0x50
 4137 019f 24000000 		.4byte	.LVL55
 4138 01a3 27000000 		.4byte	.LVL56-1
 4139 01a7 0100     		.2byte	0x1
 4140 01a9 5C       		.byte	0x5c
 4141 01aa 27000000 		.4byte	.LVL56-1
 4142 01ae D4000000 		.4byte	.LFE9
 4143 01b2 0200     		.2byte	0x2
 4144 01b4 91       		.byte	0x91
 4145 01b5 64       		.sleb128 -28
 4146 01b6 00000000 		.4byte	0
 4147 01ba 00000000 		.4byte	0
 4148              	.LLST9:
 4149 01be 00000000 		.4byte	.LVL53
 4150 01c2 27000000 		.4byte	.LVL56-1
 4151 01c6 0100     		.2byte	0x1
 4152 01c8 51       		.byte	0x51
 4153 01c9 27000000 		.4byte	.LVL56-1
 4154 01cd D4000000 		.4byte	.LFE9
 4155 01d1 0400     		.2byte	0x4
 4156 01d3 F3       		.byte	0xf3
 4157 01d4 01       		.uleb128 0x1
 4158 01d5 51       		.byte	0x51
 4159 01d6 9F       		.byte	0x9f
 4160 01d7 00000000 		.4byte	0
 4161 01db 00000000 		.4byte	0
 4162              	.LLST10:
 4163 01df 2E000000 		.4byte	.LVL57
 4164 01e3 30000000 		.4byte	.LVL58
 4165 01e7 0700     		.2byte	0x7
 4166 01e9 70       		.byte	0x70
 4167 01ea 00       		.sleb128 0
 4168 01eb 0A       		.byte	0xa
 4169 01ec FFFF     		.2byte	0xffff
 4170 01ee 1A       		.byte	0x1a
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 115


 4171 01ef 9F       		.byte	0x9f
 4172 01f0 38000000 		.4byte	.LVL60
 4173 01f4 56000000 		.4byte	.LVL62
 4174 01f8 0100     		.2byte	0x1
 4175 01fa 50       		.byte	0x50
 4176 01fb 56000000 		.4byte	.LVL62
 4177 01ff BE000000 		.4byte	.LVL74
 4178 0203 0100     		.2byte	0x1
 4179 0205 57       		.byte	0x57
 4180 0206 00000000 		.4byte	0
 4181 020a 00000000 		.4byte	0
 4182              	.LLST11:
 4183 020e 52000000 		.4byte	.LVL61
 4184 0212 BC000000 		.4byte	.LVL73
 4185 0216 0100     		.2byte	0x1
 4186 0218 56       		.byte	0x56
 4187 0219 00000000 		.4byte	0
 4188 021d 00000000 		.4byte	0
 4189              	.LLST12:
 4190 0221 52000000 		.4byte	.LVL61
 4191 0225 56000000 		.4byte	.LVL62
 4192 0229 0200     		.2byte	0x2
 4193 022b 30       		.byte	0x30
 4194 022c 9F       		.byte	0x9f
 4195 022d 56000000 		.4byte	.LVL62
 4196 0231 7B000000 		.4byte	.LVL66-1
 4197 0235 0100     		.2byte	0x1
 4198 0237 51       		.byte	0x51
 4199 0238 8E000000 		.4byte	.LVL68
 4200 023c 92000000 		.4byte	.LVL69
 4201 0240 0200     		.2byte	0x2
 4202 0242 30       		.byte	0x30
 4203 0243 9F       		.byte	0x9f
 4204 0244 92000000 		.4byte	.LVL69
 4205 0248 BC000000 		.4byte	.LVL73
 4206 024c 0100     		.2byte	0x1
 4207 024e 51       		.byte	0x51
 4208 024f 00000000 		.4byte	0
 4209 0253 00000000 		.4byte	0
 4210              	.LLST13:
 4211 0257 0C000000 		.4byte	.LVL54
 4212 025b 74000000 		.4byte	.LVL64
 4213 025f 0300     		.2byte	0x3
 4214 0261 08       		.byte	0x8
 4215 0262 40       		.byte	0x40
 4216 0263 9F       		.byte	0x9f
 4217 0264 74000000 		.4byte	.LVL64
 4218 0268 76000000 		.4byte	.LVL65
 4219 026c 0100     		.2byte	0x1
 4220 026e 54       		.byte	0x54
 4221 026f 76000000 		.4byte	.LVL65
 4222 0273 B4000000 		.4byte	.LVL71
 4223 0277 0100     		.2byte	0x1
 4224 0279 55       		.byte	0x55
 4225 027a B4000000 		.4byte	.LVL71
 4226 027e BC000000 		.4byte	.LVL73
 4227 0282 0100     		.2byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 116


 4228 0284 54       		.byte	0x54
 4229 0285 00000000 		.4byte	0
 4230 0289 00000000 		.4byte	0
 4231              	.LLST14:
 4232 028d 0C000000 		.4byte	.LVL54
 4233 0291 74000000 		.4byte	.LVL64
 4234 0295 0300     		.2byte	0x3
 4235 0297 08       		.byte	0x8
 4236 0298 20       		.byte	0x20
 4237 0299 9F       		.byte	0x9f
 4238 029a 74000000 		.4byte	.LVL64
 4239 029e 76000000 		.4byte	.LVL65
 4240 02a2 0100     		.2byte	0x1
 4241 02a4 53       		.byte	0x53
 4242 02a5 76000000 		.4byte	.LVL65
 4243 02a9 B8000000 		.4byte	.LVL72
 4244 02ad 0100     		.2byte	0x1
 4245 02af 54       		.byte	0x54
 4246 02b0 B8000000 		.4byte	.LVL72
 4247 02b4 BC000000 		.4byte	.LVL73
 4248 02b8 0100     		.2byte	0x1
 4249 02ba 53       		.byte	0x53
 4250 02bb 00000000 		.4byte	0
 4251 02bf 00000000 		.4byte	0
 4252              	.LLST15:
 4253 02c3 00000000 		.4byte	.LVL75
 4254 02c7 16000000 		.4byte	.LVL79
 4255 02cb 0100     		.2byte	0x1
 4256 02cd 50       		.byte	0x50
 4257 02ce 16000000 		.4byte	.LVL79
 4258 02d2 20000000 		.4byte	.LFE11
 4259 02d6 0400     		.2byte	0x4
 4260 02d8 F3       		.byte	0xf3
 4261 02d9 01       		.uleb128 0x1
 4262 02da 50       		.byte	0x50
 4263 02db 9F       		.byte	0x9f
 4264 02dc 00000000 		.4byte	0
 4265 02e0 00000000 		.4byte	0
 4266              	.LLST16:
 4267 02e4 06000000 		.4byte	.LVL76
 4268 02e8 0E000000 		.4byte	.LVL77
 4269 02ec 0100     		.2byte	0x1
 4270 02ee 51       		.byte	0x51
 4271 02ef 0E000000 		.4byte	.LVL77
 4272 02f3 14000000 		.4byte	.LVL78
 4273 02f7 0100     		.2byte	0x1
 4274 02f9 53       		.byte	0x53
 4275 02fa 14000000 		.4byte	.LVL78
 4276 02fe 1C000000 		.4byte	.LVL80
 4277 0302 0100     		.2byte	0x1
 4278 0304 51       		.byte	0x51
 4279 0305 1C000000 		.4byte	.LVL80
 4280 0309 20000000 		.4byte	.LFE11
 4281 030d 0100     		.2byte	0x1
 4282 030f 53       		.byte	0x53
 4283 0310 00000000 		.4byte	0
 4284 0314 00000000 		.4byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 117


 4285              	.LLST17:
 4286 0318 00000000 		.4byte	.LVL81
 4287 031c 16000000 		.4byte	.LVL85
 4288 0320 0100     		.2byte	0x1
 4289 0322 50       		.byte	0x50
 4290 0323 16000000 		.4byte	.LVL85
 4291 0327 20000000 		.4byte	.LFE12
 4292 032b 0400     		.2byte	0x4
 4293 032d F3       		.byte	0xf3
 4294 032e 01       		.uleb128 0x1
 4295 032f 50       		.byte	0x50
 4296 0330 9F       		.byte	0x9f
 4297 0331 00000000 		.4byte	0
 4298 0335 00000000 		.4byte	0
 4299              	.LLST18:
 4300 0339 06000000 		.4byte	.LVL82
 4301 033d 14000000 		.4byte	.LVL84
 4302 0341 0100     		.2byte	0x1
 4303 0343 53       		.byte	0x53
 4304 0344 14000000 		.4byte	.LVL84
 4305 0348 1C000000 		.4byte	.LVL86
 4306 034c 0100     		.2byte	0x1
 4307 034e 51       		.byte	0x51
 4308 034f 1C000000 		.4byte	.LVL86
 4309 0353 20000000 		.4byte	.LFE12
 4310 0357 0100     		.2byte	0x1
 4311 0359 53       		.byte	0x53
 4312 035a 00000000 		.4byte	0
 4313 035e 00000000 		.4byte	0
 4314              	.LLST19:
 4315 0362 06000000 		.4byte	.LVL95
 4316 0366 18000000 		.4byte	.LVL98
 4317 036a 0100     		.2byte	0x1
 4318 036c 53       		.byte	0x53
 4319 036d 1A000000 		.4byte	.LVL99
 4320 0371 20000000 		.4byte	.LVL100
 4321 0375 0100     		.2byte	0x1
 4322 0377 52       		.byte	0x52
 4323 0378 20000000 		.4byte	.LVL100
 4324 037c 2E000000 		.4byte	.LFE14
 4325 0380 0100     		.2byte	0x1
 4326 0382 53       		.byte	0x53
 4327 0383 00000000 		.4byte	0
 4328 0387 00000000 		.4byte	0
 4329              	.LLST20:
 4330 038b 00000000 		.4byte	.LVL114
 4331 038f 0C000000 		.4byte	.LVL115
 4332 0393 0100     		.2byte	0x1
 4333 0395 50       		.byte	0x50
 4334 0396 0C000000 		.4byte	.LVL115
 4335 039a 18000000 		.4byte	.LVL118
 4336 039e 0100     		.2byte	0x1
 4337 03a0 54       		.byte	0x54
 4338 03a1 18000000 		.4byte	.LVL118
 4339 03a5 6C000000 		.4byte	.LFE3
 4340 03a9 0400     		.2byte	0x4
 4341 03ab F3       		.byte	0xf3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 118


 4342 03ac 01       		.uleb128 0x1
 4343 03ad 50       		.byte	0x50
 4344 03ae 9F       		.byte	0x9f
 4345 03af 00000000 		.4byte	0
 4346 03b3 00000000 		.4byte	0
 4347              	.LLST21:
 4348 03b7 24000000 		.4byte	.LVL119
 4349 03bb 4E000000 		.4byte	.LVL130
 4350 03bf 0100     		.2byte	0x1
 4351 03c1 55       		.byte	0x55
 4352 03c2 00000000 		.4byte	0
 4353 03c6 00000000 		.4byte	0
 4354              	.LLST22:
 4355 03ca 38000000 		.4byte	.LVL122
 4356 03ce 40000000 		.4byte	.LVL126
 4357 03d2 0100     		.2byte	0x1
 4358 03d4 53       		.byte	0x53
 4359 03d5 40000000 		.4byte	.LVL126
 4360 03d9 42000000 		.4byte	.LVL127
 4361 03dd 0800     		.2byte	0x8
 4362 03df 75       		.byte	0x75
 4363 03e0 0C       		.sleb128 12
 4364 03e1 94       		.byte	0x94
 4365 03e2 01       		.byte	0x1
 4366 03e3 08       		.byte	0x8
 4367 03e4 FF       		.byte	0xff
 4368 03e5 1A       		.byte	0x1a
 4369 03e6 9F       		.byte	0x9f
 4370 03e7 42000000 		.4byte	.LVL127
 4371 03eb 4E000000 		.4byte	.LVL129
 4372 03ef 0100     		.2byte	0x1
 4373 03f1 54       		.byte	0x54
 4374 03f2 00000000 		.4byte	0
 4375 03f6 00000000 		.4byte	0
 4376              	.LLST23:
 4377 03fa 26000000 		.4byte	.LVL120
 4378 03fe 3A000000 		.4byte	.LVL123
 4379 0402 0100     		.2byte	0x1
 4380 0404 54       		.byte	0x54
 4381 0405 3A000000 		.4byte	.LVL123
 4382 0409 3C000000 		.4byte	.LVL124
 4383 040d 0300     		.2byte	0x3
 4384 040f 74       		.byte	0x74
 4385 0410 01       		.sleb128 1
 4386 0411 9F       		.byte	0x9f
 4387 0412 3E000000 		.4byte	.LVL125
 4388 0416 42000000 		.4byte	.LVL127
 4389 041a 0100     		.2byte	0x1
 4390 041c 54       		.byte	0x54
 4391 041d 00000000 		.4byte	0
 4392 0421 00000000 		.4byte	0
 4393              	.LLST24:
 4394 0425 00000000 		.4byte	.LVL131
 4395 0429 07000000 		.4byte	.LVL132-1
 4396 042d 0100     		.2byte	0x1
 4397 042f 50       		.byte	0x50
 4398 0430 07000000 		.4byte	.LVL132-1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 119


 4399 0434 84000000 		.4byte	.LFE4
 4400 0438 0400     		.2byte	0x4
 4401 043a F3       		.byte	0xf3
 4402 043b 01       		.uleb128 0x1
 4403 043c 50       		.byte	0x50
 4404 043d 9F       		.byte	0x9f
 4405 043e 00000000 		.4byte	0
 4406 0442 00000000 		.4byte	0
 4407              	.LLST25:
 4408 0446 00000000 		.4byte	.LVL131
 4409 044a 07000000 		.4byte	.LVL132-1
 4410 044e 0100     		.2byte	0x1
 4411 0450 51       		.byte	0x51
 4412 0451 07000000 		.4byte	.LVL132-1
 4413 0455 3A000000 		.4byte	.LVL137
 4414 0459 0100     		.2byte	0x1
 4415 045b 54       		.byte	0x54
 4416 045c 3A000000 		.4byte	.LVL137
 4417 0460 84000000 		.4byte	.LFE4
 4418 0464 0400     		.2byte	0x4
 4419 0466 F3       		.byte	0xf3
 4420 0467 01       		.uleb128 0x1
 4421 0468 51       		.byte	0x51
 4422 0469 9F       		.byte	0x9f
 4423 046a 00000000 		.4byte	0
 4424 046e 00000000 		.4byte	0
 4425              	.LLST26:
 4426 0472 36000000 		.4byte	.LVL136
 4427 0476 4A000000 		.4byte	.LVL138
 4428 047a 0100     		.2byte	0x1
 4429 047c 51       		.byte	0x51
 4430 047d 00000000 		.4byte	0
 4431 0481 00000000 		.4byte	0
 4432              	.LLST27:
 4433 0485 2E000000 		.4byte	.LVL134
 4434 0489 32000000 		.4byte	.LVL135
 4435 048d 0100     		.2byte	0x1
 4436 048f 50       		.byte	0x50
 4437 0490 32000000 		.4byte	.LVL135
 4438 0494 68000000 		.4byte	.LVL141
 4439 0498 0100     		.2byte	0x1
 4440 049a 56       		.byte	0x56
 4441 049b 00000000 		.4byte	0
 4442 049f 00000000 		.4byte	0
 4443              	.LLST28:
 4444 04a3 00000000 		.4byte	.LVL142
 4445 04a7 04000000 		.4byte	.LVL143
 4446 04ab 0100     		.2byte	0x1
 4447 04ad 50       		.byte	0x50
 4448 04ae 04000000 		.4byte	.LVL143
 4449 04b2 14000000 		.4byte	.LFE15
 4450 04b6 0400     		.2byte	0x4
 4451 04b8 F3       		.byte	0xf3
 4452 04b9 01       		.uleb128 0x1
 4453 04ba 50       		.byte	0x50
 4454 04bb 9F       		.byte	0x9f
 4455 04bc 00000000 		.4byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 120


 4456 04c0 00000000 		.4byte	0
 4457              		.section	.debug_aranges,"",%progbits
 4458 0000 9C000000 		.4byte	0x9c
 4459 0004 0200     		.2byte	0x2
 4460 0006 00000000 		.4byte	.Ldebug_info0
 4461 000a 04       		.byte	0x4
 4462 000b 00       		.byte	0
 4463 000c 0000     		.2byte	0
 4464 000e 0000     		.2byte	0
 4465 0010 00000000 		.4byte	.LFB8
 4466 0014 38000000 		.4byte	.LFE8-.LFB8
 4467 0018 00000000 		.4byte	.LFB16
 4468 001c 0C000000 		.4byte	.LFE16-.LFB16
 4469 0020 00000000 		.4byte	.LFB10
 4470 0024 38010000 		.4byte	.LFE10-.LFB10
 4471 0028 00000000 		.4byte	.LFB17
 4472 002c 90000000 		.4byte	.LFE17-.LFB17
 4473 0030 00000000 		.4byte	.LFB1
 4474 0034 DC010000 		.4byte	.LFE1-.LFB1
 4475 0038 00000000 		.4byte	.LFB6
 4476 003c 1C000000 		.4byte	.LFE6-.LFB6
 4477 0040 00000000 		.4byte	.LFB9
 4478 0044 D4000000 		.4byte	.LFE9-.LFB9
 4479 0048 00000000 		.4byte	.LFB11
 4480 004c 20000000 		.4byte	.LFE11-.LFB11
 4481 0050 00000000 		.4byte	.LFB12
 4482 0054 20000000 		.4byte	.LFE12-.LFB12
 4483 0058 00000000 		.4byte	.LFB5
 4484 005c 6C000000 		.4byte	.LFE5-.LFB5
 4485 0060 00000000 		.4byte	.LFB13
 4486 0064 0C000000 		.4byte	.LFE13-.LFB13
 4487 0068 00000000 		.4byte	.LFB14
 4488 006c 2E000000 		.4byte	.LFE14-.LFB14
 4489 0070 00000000 		.4byte	.LFB7
 4490 0074 DC000000 		.4byte	.LFE7-.LFB7
 4491 0078 00000000 		.4byte	.LFB2
 4492 007c 24000000 		.4byte	.LFE2-.LFB2
 4493 0080 00000000 		.4byte	.LFB3
 4494 0084 6C000000 		.4byte	.LFE3-.LFB3
 4495 0088 00000000 		.4byte	.LFB4
 4496 008c 84000000 		.4byte	.LFE4-.LFB4
 4497 0090 00000000 		.4byte	.LFB15
 4498 0094 14000000 		.4byte	.LFE15-.LFB15
 4499 0098 00000000 		.4byte	0
 4500 009c 00000000 		.4byte	0
 4501              		.section	.debug_ranges,"",%progbits
 4502              	.Ldebug_ranges0:
 4503 0000 00000000 		.4byte	.LFB8
 4504 0004 38000000 		.4byte	.LFE8
 4505 0008 00000000 		.4byte	.LFB16
 4506 000c 0C000000 		.4byte	.LFE16
 4507 0010 00000000 		.4byte	.LFB10
 4508 0014 38010000 		.4byte	.LFE10
 4509 0018 00000000 		.4byte	.LFB17
 4510 001c 90000000 		.4byte	.LFE17
 4511 0020 00000000 		.4byte	.LFB1
 4512 0024 DC010000 		.4byte	.LFE1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 121


 4513 0028 00000000 		.4byte	.LFB6
 4514 002c 1C000000 		.4byte	.LFE6
 4515 0030 00000000 		.4byte	.LFB9
 4516 0034 D4000000 		.4byte	.LFE9
 4517 0038 00000000 		.4byte	.LFB11
 4518 003c 20000000 		.4byte	.LFE11
 4519 0040 00000000 		.4byte	.LFB12
 4520 0044 20000000 		.4byte	.LFE12
 4521 0048 00000000 		.4byte	.LFB5
 4522 004c 6C000000 		.4byte	.LFE5
 4523 0050 00000000 		.4byte	.LFB13
 4524 0054 0C000000 		.4byte	.LFE13
 4525 0058 00000000 		.4byte	.LFB14
 4526 005c 2E000000 		.4byte	.LFE14
 4527 0060 00000000 		.4byte	.LFB7
 4528 0064 DC000000 		.4byte	.LFE7
 4529 0068 00000000 		.4byte	.LFB2
 4530 006c 24000000 		.4byte	.LFE2
 4531 0070 00000000 		.4byte	.LFB3
 4532 0074 6C000000 		.4byte	.LFE3
 4533 0078 00000000 		.4byte	.LFB4
 4534 007c 84000000 		.4byte	.LFE4
 4535 0080 00000000 		.4byte	.LFB15
 4536 0084 14000000 		.4byte	.LFE15
 4537 0088 00000000 		.4byte	0
 4538 008c 00000000 		.4byte	0
 4539              		.section	.debug_line,"",%progbits
 4540              	.Ldebug_line0:
 4541 0000 51030000 		.section	.debug_str,"MS",%progbits,1
 4541      0200C400 
 4541      00000201 
 4541      FB0E0D00 
 4541      01010101 
 4542              	.LASF155:
 4543 0000 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 4543      656E7365 
 4543      5F637572 
 4543      466C6173 
 4543      68576467 
 4544              	.LASF144:
 4545 0019 43617053 		.ascii	"CapSense_eleCsxDisconnectFlag\000"
 4545      656E7365 
 4545      5F656C65 
 4545      43737844 
 4545      6973636F 
 4546              	.LASF172:
 4547 0037 43617053 		.ascii	"CapSense_SsCSXPostSingleScan\000"
 4547      656E7365 
 4547      5F537343 
 4547      5358506F 
 4547      73745369 
 4548              	.LASF162:
 4549 0054 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4549      656E7365 
 4549      5F537353 
 4549      6574494F 
 4549      73496E44 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 122


 4550              	.LASF160:
 4551 0074 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 4551      656E7365 
 4551      5F426973 
 4551      74446973 
 4551      63686172 
 4552              	.LASF108:
 4553 0098 43617053 		.ascii	"CapSense_CSXInitialize\000"
 4553      656E7365 
 4553      5F435358 
 4553      496E6974 
 4553      69616C69 
 4554              	.LASF110:
 4555 00af 43617053 		.ascii	"CapSense_CSXScanExt\000"
 4555      656E7365 
 4555      5F435358 
 4555      5363616E 
 4555      45787400 
 4556              	.LASF72:
 4557 00c3 736E7254 		.ascii	"snrTestWidgetId\000"
 4557      65737457 
 4557      69646765 
 4557      74496400 
 4558              	.LASF28:
 4559 00d3 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4559      656E7365 
 4559      5F554E44 
 4559      4546494E 
 4559      45445F45 
 4560              	.LASF8:
 4561 00e8 756E7369 		.ascii	"unsigned int\000"
 4561      676E6564 
 4561      20696E74 
 4561      00
 4562              	.LASF149:
 4563 00f5 43617053 		.ascii	"CapSense_CSXPostScanApiPtr\000"
 4563      656E7365 
 4563      5F435358 
 4563      506F7374 
 4563      5363616E 
 4564              	.LASF119:
 4565 0110 6E657874 		.ascii	"nextIdacMask\000"
 4565      49646163 
 4565      4D61736B 
 4565      00
 4566              	.LASF62:
 4567 011d 7363616E 		.ascii	"scanCounter\000"
 4567      436F756E 
 4567      74657200 
 4568              	.LASF60:
 4569 0129 6877436C 		.ascii	"hwClock\000"
 4569      6F636B00 
 4570              	.LASF122:
 4571 0131 72656756 		.ascii	"regValue\000"
 4571      616C7565 
 4571      00
 4572              	.LASF121:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 123


 4573 013a 74785074 		.ascii	"txPtr\000"
 4573      7200
 4574              	.LASF109:
 4575 0140 696E7465 		.ascii	"interruptState\000"
 4575      72727570 
 4575      74537461 
 4575      746500
 4576              	.LASF137:
 4577 014f 7278496E 		.ascii	"rxIndex\000"
 4577      64657800 
 4578              	.LASF123:
 4579 0157 43617053 		.ascii	"CapSense_CSXConnectRx\000"
 4579      656E7365 
 4579      5F435358 
 4579      436F6E6E 
 4579      65637452 
 4580              	.LASF156:
 4581 016d 4379496E 		.ascii	"CyIntDisable\000"
 4581      74446973 
 4581      61626C65 
 4581      00
 4582              	.LASF161:
 4583 017a 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4583      656E7365 
 4583      5F537353 
 4583      65744D6F 
 4583      64436C6B 
 4584              	.LASF50:
 4585 019b 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4585      656E7365 
 4585      5F52414D 
 4585      5F57445F 
 4585      4C495354 
 4586              	.LASF107:
 4587 01b7 43617053 		.ascii	"CapSense_CSXScanISR\000"
 4587      656E7365 
 4587      5F435358 
 4587      5363616E 
 4587      49535200 
 4588              	.LASF135:
 4589 01cb 73656E73 		.ascii	"sensorId\000"
 4589      6F724964 
 4589      00
 4590              	.LASF128:
 4591 01d4 43617053 		.ascii	"CapSense_SsCSXStartSample\000"
 4591      656E7365 
 4591      5F537343 
 4591      53585374 
 4591      61727453 
 4592              	.LASF139:
 4593 01ee 70747257 		.ascii	"ptrWdgt\000"
 4593      64677400 
 4594              	.LASF118:
 4595 01f6 63757249 		.ascii	"curIdacMask\000"
 4595      6461634D 
 4595      61736B00 
 4596              	.LASF12:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 124


 4597 0202 666C6F61 		.ascii	"float\000"
 4597      7400
 4598              	.LASF85:
 4599 0208 73686966 		.ascii	"shift\000"
 4599      7400
 4600              	.LASF169:
 4601 020e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4601      43313120 
 4601      352E342E 
 4601      31203230 
 4601      31363036 
 4602 0241 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4602      20726576 
 4602      6973696F 
 4602      6E203233 
 4602      37373135 
 4603 0274 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4603      67202D66 
 4603      66756E63 
 4603      74696F6E 
 4603      2D736563 
 4604              	.LASF103:
 4605 02a0 77617463 		.ascii	"watchdogCounter\000"
 4605      68646F67 
 4605      436F756E 
 4605      74657200 
 4606              	.LASF136:
 4607 02b0 7478496E 		.ascii	"txIndex\000"
 4607      64657800 
 4608              	.LASF131:
 4609 02b8 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 4609      656E7365 
 4609      5F435358 
 4609      53657475 
 4609      70576964 
 4610              	.LASF164:
 4611 02d0 43794465 		.ascii	"CyDelayUs\000"
 4611      6C617955 
 4611      7300
 4612              	.LASF71:
 4613 02da 736E734C 		.ascii	"snsList\000"
 4613      69737400 
 4614              	.LASF7:
 4615 02e2 6C6F6E67 		.ascii	"long long unsigned int\000"
 4615      206C6F6E 
 4615      6720756E 
 4615      7369676E 
 4615      65642069 
 4616              	.LASF151:
 4617 02f9 43617053 		.ascii	"CapSense_sensorIndex\000"
 4617      656E7365 
 4617      5F73656E 
 4617      736F7249 
 4617      6E646578 
 4618              	.LASF86:
 4619 030e 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4619      656E7365 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 125


 4619      5F464C41 
 4619      53485F49 
 4619      4F5F5354 
 4620              	.LASF73:
 4621 0327 736E7254 		.ascii	"snrTestSensorId\000"
 4621      65737453 
 4621      656E736F 
 4621      72496400 
 4622              	.LASF120:
 4623 0337 43617053 		.ascii	"CapSense_CSXConnectTx\000"
 4623      656E7365 
 4623      5F435358 
 4623      436F6E6E 
 4623      65637454 
 4624              	.LASF98:
 4625 034d 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4625      4E6F6973 
 4625      65456E76 
 4625      6C7000
 4626              	.LASF94:
 4627 035c 77646774 		.ascii	"wdgtType\000"
 4627      54797065 
 4627      00
 4628              	.LASF133:
 4629 0365 736E7343 		.ascii	"snsClkVal\000"
 4629      6C6B5661 
 4629      6C00
 4630              	.LASF68:
 4631 036f 6D6F6443 		.ascii	"modCsdClk\000"
 4631      7364436C 
 4631      6B00
 4632              	.LASF56:
 4633 0379 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4633      656E7365 
 4633      5F52414D 
 4633      5F534E53 
 4633      5F535452 
 4634              	.LASF114:
 4635 0391 74617267 		.ascii	"target\000"
 4635      657400
 4636              	.LASF79:
 4637 0398 64725074 		.ascii	"drPtr\000"
 4637      7200
 4638              	.LASF45:
 4639 039e 73696750 		.ascii	"sigPFC\000"
 4639      464300
 4640              	.LASF38:
 4641 03a5 68797374 		.ascii	"hysteresis\000"
 4641      65726573 
 4641      697300
 4642              	.LASF99:
 4643 03b0 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4643      656E7365 
 4643      5F464C41 
 4643      53485F57 
 4643      445F5354 
 4644              	.LASF40:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 126


 4645 03c9 6C6F7742 		.ascii	"lowBslnRst\000"
 4645      736C6E52 
 4645      737400
 4646              	.LASF127:
 4647 03d4 43617053 		.ascii	"CapSense_CSXDisconnectRx\000"
 4647      656E7365 
 4647      5F435358 
 4647      44697363 
 4647      6F6E6E65 
 4648              	.LASF173:
 4649 03ed 43617053 		.ascii	"CapSense_SsCalcCsxScanPeriod\000"
 4649      656E7365 
 4649      5F537343 
 4649      616C6343 
 4649      73785363 
 4650              	.LASF93:
 4651 040a 746F7461 		.ascii	"totalNumSns\000"
 4651      6C4E756D 
 4651      536E7300 
 4652              	.LASF27:
 4653 0416 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4653      5453454E 
 4653      53455F43 
 4653      53445F4E 
 4653      4F495345 
 4654              	.LASF116:
 4655 043b 746F7461 		.ascii	"totalSns\000"
 4655      6C536E73 
 4655      00
 4656              	.LASF36:
 4657 0444 6E6F6973 		.ascii	"noiseTh\000"
 4657      65546800 
 4658              	.LASF14:
 4659 044c 63686172 		.ascii	"char\000"
 4659      00
 4660              	.LASF159:
 4661 0451 43794578 		.ascii	"CyExitCriticalSection\000"
 4661      69744372 
 4661      69746963 
 4661      616C5365 
 4661      6374696F 
 4662              	.LASF83:
 4663 0467 6873696F 		.ascii	"hsiomShift\000"
 4663      6D536869 
 4663      667400
 4664              	.LASF10:
 4665 0472 75696E74 		.ascii	"uint16\000"
 4665      313600
 4666              	.LASF34:
 4667 0479 7265736F 		.ascii	"resolution\000"
 4667      6C757469 
 4667      6F6E00
 4668              	.LASF63:
 4669 0484 73746174 		.ascii	"status\000"
 4669      757300
 4670              	.LASF102:
 4671 048b 66696C74 		.ascii	"filterDelay\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 127


 4671      65724465 
 4671      6C617900 
 4672              	.LASF19:
 4673 0497 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4673      656E7365 
 4673      5F4C4F57 
 4673      5F42534C 
 4673      4E5F5253 
 4674              	.LASF33:
 4675 04b2 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4675      656E7365 
 4675      5F53454E 
 4675      53455F4D 
 4675      4554484F 
 4676              	.LASF55:
 4677 04cd 69646163 		.ascii	"idacComp\000"
 4677      436F6D70 
 4677      00
 4678              	.LASF78:
 4679 04d6 70635074 		.ascii	"pcPtr\000"
 4679      7200
 4680              	.LASF6:
 4681 04dc 6C6F6E67 		.ascii	"long long int\000"
 4681      206C6F6E 
 4681      6720696E 
 4681      7400
 4682              	.LASF96:
 4683 04ea 6E756D43 		.ascii	"numCols\000"
 4683      6F6C7300 
 4684              	.LASF126:
 4685 04f2 43617053 		.ascii	"CapSense_CSXDisconnectTx\000"
 4685      656E7365 
 4685      5F435358 
 4685      44697363 
 4685      6F6E6E65 
 4686              	.LASF39:
 4687 050b 6F6E4465 		.ascii	"onDebounce\000"
 4687      626F756E 
 4687      636500
 4688              	.LASF141:
 4689 0516 43617053 		.ascii	"CapSense_curRxIOPtr\000"
 4689      656E7365 
 4689      5F637572 
 4689      5278494F 
 4689      50747200 
 4690              	.LASF70:
 4691 052a 77646774 		.ascii	"wdgtList\000"
 4691      4C697374 
 4691      00
 4692              	.LASF148:
 4693 0533 43617053 		.ascii	"CapSense_csxRawCount\000"
 4693      656E7365 
 4693      5F637378 
 4693      52617743 
 4693      6F756E74 
 4694              	.LASF101:
 4695 0548 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 128


 4695      656E7365 
 4695      5F464C41 
 4695      53485F53 
 4695      54525543 
 4696              	.LASF166:
 4697 055e 43617053 		.ascii	"CapSense_Scan\000"
 4697      656E7365 
 4697      5F536361 
 4697      6E00
 4698              	.LASF145:
 4699 056c 43617053 		.ascii	"CapSense_dsRam\000"
 4699      656E7365 
 4699      5F647352 
 4699      616D00
 4700              	.LASF75:
 4701 057b 736E7254 		.ascii	"snrTestRawCount\000"
 4701      65737452 
 4701      6177436F 
 4701      756E7400 
 4702              	.LASF37:
 4703 058b 6E4E6F69 		.ascii	"nNoiseTh\000"
 4703      73655468 
 4703      00
 4704              	.LASF67:
 4705 0594 63736430 		.ascii	"csd0Config\000"
 4705      436F6E66 
 4705      696700
 4706              	.LASF46:
 4707 059f 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4707      656E7365 
 4707      5F52414D 
 4707      5F57445F 
 4707      42415345 
 4708              	.LASF77:
 4709 05bb 6873696F 		.ascii	"hsiomPtr\000"
 4709      6D507472 
 4709      00
 4710              	.LASF130:
 4711 05c4 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 4711      656E7365 
 4711      5F435358 
 4711      456C6563 
 4711      74726F64 
 4712              	.LASF11:
 4713 05df 75696E74 		.ascii	"uint32\000"
 4713      333200
 4714              	.LASF90:
 4715 05e6 70747232 		.ascii	"ptr2FltrHistory\000"
 4715      466C7472 
 4715      48697374 
 4715      6F727900 
 4716              	.LASF142:
 4717 05f6 43617053 		.ascii	"CapSense_curWdgtTotalRx\000"
 4717      656E7365 
 4717      5F637572 
 4717      57646774 
 4717      546F7461 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 129


 4718              	.LASF82:
 4719 060e 6D61736B 		.ascii	"mask\000"
 4719      00
 4720              	.LASF111:
 4721 0613 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 4721      656E7365 
 4721      5F435358 
 4721      43616C69 
 4721      62726174 
 4722              	.LASF147:
 4723 062f 43617053 		.ascii	"CapSense_csxScanPeriod\000"
 4723      656E7365 
 4723      5F637378 
 4723      5363616E 
 4723      50657269 
 4724              	.LASF104:
 4725 0646 73616D70 		.ascii	"sampleClkFreqHz\000"
 4725      6C65436C 
 4725      6B467265 
 4725      71487A00 
 4726              	.LASF134:
 4727 0656 43617053 		.ascii	"CapSense_CSXSetupWidgetExt\000"
 4727      656E7365 
 4727      5F435358 
 4727      53657475 
 4727      70576964 
 4728              	.LASF32:
 4729 0671 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4729      656E7365 
 4729      5F53454E 
 4729      53455F4D 
 4729      4554484F 
 4730              	.LASF174:
 4731 068d 43617053 		.ascii	"CapSense_SsCSXStartSampleExt\000"
 4731      656E7365 
 4731      5F537343 
 4731      53585374 
 4731      61727453 
 4732              	.LASF16:
 4733 06aa 6C6F6E67 		.ascii	"long double\000"
 4733      20646F75 
 4733      626C6500 
 4734              	.LASF15:
 4735 06b6 72656733 		.ascii	"reg32\000"
 4735      3200
 4736              	.LASF74:
 4737 06bc 736E7254 		.ascii	"snrTestScanCounter\000"
 4737      65737453 
 4737      63616E43 
 4737      6F756E74 
 4737      657200
 4738              	.LASF58:
 4739 06cf 636F6E66 		.ascii	"configId\000"
 4739      69674964 
 4739      00
 4740              	.LASF89:
 4741 06d8 70747232 		.ascii	"ptr2SnsRam\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 130


 4741      536E7352 
 4741      616D00
 4742              	.LASF140:
 4743 06e3 43617053 		.ascii	"CapSense_curTxIOPtr\000"
 4743      656E7365 
 4743      5F637572 
 4743      5478494F 
 4743      50747200 
 4744              	.LASF66:
 4745 06f7 736E7353 		.ascii	"snsStatus\000"
 4745      74617475 
 4745      7300
 4746              	.LASF43:
 4747 0701 736E7343 		.ascii	"snsClkSource\000"
 4747      6C6B536F 
 4747      75726365 
 4747      00
 4748              	.LASF175:
 4749 070e 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 4749      656E7365 
 4749      5F537343 
 4749      53584765 
 4749      74547843 
 4750              	.LASF163:
 4751 072c 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4751      656E7365 
 4751      5F537349 
 4751      7372496E 
 4751      69746961 
 4752              	.LASF2:
 4753 0745 73686F72 		.ascii	"short int\000"
 4753      7420696E 
 4753      7400
 4754              	.LASF76:
 4755 074f 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4755      656E7365 
 4755      5F52414D 
 4755      5F535452 
 4755      55435400 
 4756              	.LASF4:
 4757 0763 6C6F6E67 		.ascii	"long int\000"
 4757      20696E74 
 4757      00
 4758              	.LASF64:
 4759 076c 77646774 		.ascii	"wdgtEnable\000"
 4759      456E6162 
 4759      6C6500
 4760              	.LASF53:
 4761 0777 64696666 		.ascii	"diff\000"
 4761      00
 4762              	.LASF143:
 4763 077c 43617053 		.ascii	"CapSense_curWdgtTotalTx\000"
 4763      656E7365 
 4763      5F637572 
 4763      57646774 
 4763      546F7461 
 4764              	.LASF61:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 131


 4765 0794 74756E65 		.ascii	"tunerCmd\000"
 4765      72436D64 
 4765      00
 4766              	.LASF105:
 4767 079d 74656D70 		.ascii	"temp\000"
 4767      00
 4768              	.LASF30:
 4769 07a2 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4769      656E7365 
 4769      5F53454E 
 4769      53455F4D 
 4769      4554484F 
 4770              	.LASF80:
 4771 07be 70735074 		.ascii	"psPtr\000"
 4771      7200
 4772              	.LASF165:
 4773 07c4 43617053 		.ascii	"CapSense_SetupWidget\000"
 4773      656E7365 
 4773      5F536574 
 4773      75705769 
 4773      64676574 
 4774              	.LASF115:
 4775 07d9 72617754 		.ascii	"rawTarget\000"
 4775      61726765 
 4775      7400
 4776              	.LASF48:
 4777 07e3 62757474 		.ascii	"button0\000"
 4777      6F6E3000 
 4778              	.LASF49:
 4779 07eb 62757474 		.ascii	"button1\000"
 4779      6F6E3100 
 4780              	.LASF170:
 4781 07f3 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c\000"
 4781      72617465 
 4781      645F536F 
 4781      75726365 
 4781      5C50536F 
 4782              	.LASF146:
 4783 0823 43617053 		.ascii	"CapSense_dsFlash\000"
 4783      656E7365 
 4783      5F647346 
 4783      6C617368 
 4783      00
 4784              	.LASF44:
 4785 0834 66696E67 		.ascii	"fingerCap\000"
 4785      65724361 
 4785      7000
 4786              	.LASF65:
 4787 083e 77646774 		.ascii	"wdgtStatus\000"
 4787      53746174 
 4787      757300
 4788              	.LASF29:
 4789 0849 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4789      656E7365 
 4789      5F53454E 
 4789      53455F4D 
 4789      4554484F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 132


 4790              	.LASF17:
 4791 0865 73697A65 		.ascii	"sizetype\000"
 4791      74797065 
 4791      00
 4792              	.LASF84:
 4793 086e 64725368 		.ascii	"drShift\000"
 4793      69667400 
 4794              	.LASF5:
 4795 0876 6C6F6E67 		.ascii	"long unsigned int\000"
 4795      20756E73 
 4795      69676E65 
 4795      6420696E 
 4795      7400
 4796              	.LASF138:
 4797 0888 72657456 		.ascii	"retVal\000"
 4797      616C00
 4798              	.LASF41:
 4799 088f 69646163 		.ascii	"idacMod\000"
 4799      4D6F6400 
 4800              	.LASF124:
 4801 0897 72785074 		.ascii	"rxPtr\000"
 4801      7200
 4802              	.LASF91:
 4803 089d 70747232 		.ascii	"ptr2DebounceArr\000"
 4803      4465626F 
 4803      756E6365 
 4803      41727200 
 4804              	.LASF35:
 4805 08ad 66696E67 		.ascii	"fingerTh\000"
 4805      65725468 
 4805      00
 4806              	.LASF52:
 4807 08b6 62736C6E 		.ascii	"bslnExt\000"
 4807      45787400 
 4808              	.LASF47:
 4809 08be 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 4809      656E7365 
 4809      5F52414D 
 4809      5F57445F 
 4809      42555454 
 4810              	.LASF1:
 4811 08dc 756E7369 		.ascii	"unsigned char\000"
 4811      676E6564 
 4811      20636861 
 4811      7200
 4812              	.LASF112:
 4813 08ea 77646774 		.ascii	"wdgtPtr\000"
 4813      50747200 
 4814              	.LASF117:
 4815 08f2 63616C69 		.ascii	"calibrationIndex\000"
 4815      62726174 
 4815      696F6E49 
 4815      6E646578 
 4815      00
 4816              	.LASF129:
 4817 0903 43617053 		.ascii	"CapSense_SsCSXPostMultiScan\000"
 4817      656E7365 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 133


 4817      5F537343 
 4817      5358506F 
 4817      73744D75 
 4818              	.LASF92:
 4819 091f 73746174 		.ascii	"staticConfig\000"
 4819      6963436F 
 4819      6E666967 
 4819      00
 4820              	.LASF95:
 4821 092c 73656E73 		.ascii	"senseMethod\000"
 4821      654D6574 
 4821      686F6400 
 4822              	.LASF69:
 4823 0938 6D6F6443 		.ascii	"modCsxClk\000"
 4823      7378436C 
 4823      6B00
 4824              	.LASF88:
 4825 0942 70747232 		.ascii	"ptr2WdgtRam\000"
 4825      57646774 
 4825      52616D00 
 4826              	.LASF18:
 4827 094e 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 4827      656E7365 
 4827      5F544852 
 4827      4553484F 
 4827      4C445F54 
 4828              	.LASF31:
 4829 0966 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 4829      656E7365 
 4829      5F53454E 
 4829      53455F4D 
 4829      4554484F 
 4830              	.LASF97:
 4831 0983 6E756D52 		.ascii	"numRows\000"
 4831      6F777300 
 4832              	.LASF81:
 4833 098b 6873696F 		.ascii	"hsiomMask\000"
 4833      6D4D6173 
 4833      6B00
 4834              	.LASF157:
 4835 0995 4379496E 		.ascii	"CyIntEnable\000"
 4835      74456E61 
 4835      626C6500 
 4836              	.LASF106:
 4837 09a1 746D7052 		.ascii	"tmpRegVal\000"
 4837      65675661 
 4837      6C00
 4838              	.LASF125:
 4839 09ab 43617053 		.ascii	"CapSense_CSXScan\000"
 4839      656E7365 
 4839      5F435358 
 4839      5363616E 
 4839      00
 4840              	.LASF42:
 4841 09bc 736E7343 		.ascii	"snsClk\000"
 4841      6C6B00
 4842              	.LASF168:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 134


 4843 09c3 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4843      656E7365 
 4843      5F537353 
 4843      77697463 
 4843      6853656E 
 4844              	.LASF158:
 4845 09e0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4845      74657243 
 4845      72697469 
 4845      63616C53 
 4845      65637469 
 4846              	.LASF171:
 4847 09f7 433A5C55 		.ascii	"C:\\Users\\Admin\\Documents\\PSoC Creator\\CE224899"
 4847      73657273 
 4847      5C41646D 
 4847      696E5C44 
 4847      6F63756D 
 4848 0a25 5F50536F 		.ascii	"_PSoC4_CapSense_Hybrid_Buttons01\\CE224899_PSoC4_Ca"
 4848      43345F43 
 4848      61705365 
 4848      6E73655F 
 4848      48796272 
 4849 0a57 7053656E 		.ascii	"pSense_Hybrid_Buttons02.cydsn\000"
 4849      73655F48 
 4849      79627269 
 4849      645F4275 
 4849      74746F6E 
 4850              	.LASF153:
 4851 0a75 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 4851      656E7365 
 4851      5F637572 
 4851      52616D53 
 4851      6E735074 
 4852              	.LASF0:
 4853 0a8b 7369676E 		.ascii	"signed char\000"
 4853      65642063 
 4853      68617200 
 4854              	.LASF154:
 4855 0a97 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 4855      656E7365 
 4855      5F736361 
 4855      6E467265 
 4855      71496E64 
 4856              	.LASF51:
 4857 0aae 62736C6E 		.ascii	"bsln\000"
 4857      00
 4858              	.LASF3:
 4859 0ab3 73686F72 		.ascii	"short unsigned int\000"
 4859      7420756E 
 4859      7369676E 
 4859      65642069 
 4859      6E7400
 4860              	.LASF132:
 4861 0ac6 63757252 		.ascii	"curRamWdgtBasePtr\000"
 4861      616D5764 
 4861      67744261 
 4861      73655074 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 135


 4861      7200
 4862              	.LASF167:
 4863 0ad8 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 4863      656E7365 
 4863      5F537350 
 4863      6F737441 
 4863      6C6C5769 
 4864              	.LASF87:
 4865 0af6 70747232 		.ascii	"ptr2SnsFlash\000"
 4865      536E7346 
 4865      6C617368 
 4865      00
 4866              	.LASF9:
 4867 0b03 75696E74 		.ascii	"uint8\000"
 4867      3800
 4868              	.LASF13:
 4869 0b09 646F7562 		.ascii	"double\000"
 4869      6C6500
 4870              	.LASF54:
 4871 0b10 6E656742 		.ascii	"negBslnRstCnt\000"
 4871      736C6E52 
 4871      7374436E 
 4871      7400
 4872              	.LASF20:
 4873 0b1e 70617261 		.ascii	"param0\000"
 4873      6D3000
 4874              	.LASF21:
 4875 0b25 70617261 		.ascii	"param1\000"
 4875      6D3100
 4876              	.LASF22:
 4877 0b2c 70617261 		.ascii	"param2\000"
 4877      6D3200
 4878              	.LASF23:
 4879 0b33 70617261 		.ascii	"param3\000"
 4879      6D3300
 4880              	.LASF24:
 4881 0b3a 70617261 		.ascii	"param4\000"
 4881      6D3400
 4882              	.LASF25:
 4883 0b41 70617261 		.ascii	"param5\000"
 4883      6D3500
 4884              	.LASF26:
 4885 0b48 70617261 		.ascii	"param6\000"
 4885      6D3600
 4886              	.LASF150:
 4887 0b4f 43617053 		.ascii	"CapSense_widgetIndex\000"
 4887      656E7365 
 4887      5F776964 
 4887      67657449 
 4887      6E646578 
 4888              	.LASF59:
 4889 0b64 64657669 		.ascii	"deviceId\000"
 4889      63654964 
 4889      00
 4890              	.LASF113:
 4891 0b6d 77696467 		.ascii	"widgetId\000"
 4891      65744964 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cclVqPTa.s 			page 136


 4891      00
 4892              	.LASF152:
 4893 0b76 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 4893      656E7365 
 4893      5F726571 
 4893      75657374 
 4893      5363616E 
 4894              	.LASF57:
 4895 0b94 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 4895      656E7365 
 4895      5F52414D 
 4895      5F534E53 
 4895      5F4C4953 
 4896              	.LASF100:
 4897 0bb1 77646774 		.ascii	"wdgtArray\000"
 4897      41727261 
 4897      7900
 4898              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
